CREATE TABLE v39806 (v39807 pp_colors)
CREATE TABLE v39808 (v39809 INT, v39810 TEXT COLLATE "x3")
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE VIEW v39811 AS SELECT * FROM (VALUES (285714), (6, 6, '187803.15526052'), (3, FALSE, FALSE), (3, '1.0'), (4741671816366391297), (CAST('pg_proc' AS REGCLASS), 0, 0) /* no function */, (4, 1, 'four'), ('3000 tb'), (4547007122018943789), (2, ARRAY[2], 'a')) AS x1(x2, x3)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39812 (v39813 xid8)
CREATE TABLE v39814 (v39815 INT, v39816 INET, FOREIGN KEY (x3, x4) REFERENCES x5 (x6, x7))
CREATE TABLE v39817 (LIKE x2 INCLUDING COMPRESSION)
CREATE TABLE v39818 (v39819 INT, v39820 DOUBLE PRECISION)
UPDATE v39818 AS x1 SET (v39820[2])[1] = ARRAY[98]
UPDATE v39812 AS x0 SET v39813 = 'update'
CREATE TABLE v39821 (v39822 DECIMAL DEFAULT CAST(CURRENT_TIMESTAMP AS DATE) + 1)
CREATE TABLE v39823 (v39824 INT, v39825 INT4RANGE, EXCLUDE USING gist(v39825 NULLS FIRST WITH &&))
CREATE TABLE v39826 (v39827 INT, v39828 INT, v39829 INT, v39830 box, EXCLUDE USING gist(v39828 NULLS FIRST WITH &&) INCLUDE (x5, x6, x7))
CREATE TABLE v39831 (v39832 posint[])
INSERT INTO v39812 (v39813) VALUES ('(-1, 0)')
INSERT INTO v39812 (v39813) VALUES ('Test 6')
INSERT INTO v39818 (v39820) VALUES ('0x__1234')
INSERT INTO v39812 (v39813) VALUES ('sl2')
INSERT INTO v39818 (v39820) VALUES ('-24851923.045047420')
INSERT INTO v39818 (v39820) VALUES (FALSE), (5678)
INSERT INTO v39812 (v39813) VALUES ('106')
INSERT INTO v39818 (v39820) VALUES (1), ('a'), (2), ('a')
INSERT INTO v39812 (v39813) VALUES ('(1.9999996,1.9999996),(1,1)'), ('bar')
INSERT INTO v39818 (v39820) VALUES (6)
CREATE INDEX v39833 ON v39812((v39813 || v39813) x2 NULLS FIRST)
CREATE INDEX v39834 ON v39818(v39820 NULLS FIRST) WHERE PREDICATE_STABLE()
CREATE INDEX v39835 ON v39812((v39813 = 2) NULLS FIRST)
CREATE INDEX v39836 ON v39812(v39813 NULLS FIRST) WHERE v39813 < 1
INSERT INTO v39812 (v39813) VALUES ('Abernathy')
CREATE TABLE v39837 (v39838 serial8, v39839 TEXT REFERENCES x6, v39840 DECIMAL(10, 7), FOREIGN KEY ("x4", x5) REFERENCES x7 (x8, x9) ON update CASCADE)
CREATE TABLE v39841 (v39842 INT, v39843 pg_catalog.bool, v39844 INT, FOREIGN KEY (x4, x5) REFERENCES x6 (x7, x8) ON update CASCADE)
CREATE VIEW v39845 AS SELECT x5.v39813, x5.v39813, CAST(x5.v39813 AS DOUBLE PRECISION) / x5.v39813 AS x3, x5.v39813 FROM v39812 AS x5
CREATE TABLE v39846 (v39847 UUID, v39848 UUID, v39849 UUID)
CREATE TABLE v39850 (v39851 anyarray DEFAULT '88' NOT NULL, v39852 SMALLINT NOT NULL NOT NULL, "v39853" INT, FOREIGN KEY (x5, x6) REFERENCES x7 MATCH SIMPLE ON DELETE SET NULL ON UPDATE SET NULL)
CREATE VIEW v39854 AS SELECT x10.v39819, POLYF(42) AS x3, SPLIT_PART('joeuser@mydatabase', '@', -3) AS "x4", x10.v39819, '4' AS "x7", LENGTH(x10.v39820) = 3 AS x8 FROM v39818 AS x10 TABLESAMPLE X (99)
CREATE VIEW v39855 AS SELECT * FROM v39818 AS x1 WHERE SNOOP(x1.v39819)
CREATE VIEW v39856 AS SELECT * FROM v39818 AS x1 WHERE x1.v39820 < 1
CREATE VIEW v39857 AS SELECT FROM v39812 AS x2
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
CREATE VIEW v39858 AS SELECT FROM (VALUES (ARRAY[(0, 0), (1, 1)]), (ARRAY[(1, 1)])) AS x1
UPDATE v39856 AS x1 SET v39819 = (CAST(NULL AS compositetable)).x3 - 2
UPDATE v39846 AS x1 SET v39848 = 0 - x1.v39849
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
UPDATE v39856 AS x0 SET v39820 = x0.v39819 + x0.v39820
SELECT * FROM (VALUES ('-555.50', 3, '4.21476541614777768626'), (0, NULL, NULL), (2, 2, '.00960079113741758956'), (1, 'one')) AS x0(x1, x2)
SELECT * FROM (VALUES (CAST('1' AS DECIMAL)), ('4.2'), ('inf'), ('nan')) AS x0
CREATE TABLE v39859 (v39860 INT, v39861 INT, v39862 CHAR(1), v39863 CHAR)
CREATE TABLE v39864 (v39865 INT NOT NULL GENERATED ALWAYS AS IDENTITY)
INSERT INTO v39818 (v39819) VALUES ('2038-04-08')
SELECT * FROM (VALUES (ARRAY[1, 2]), (ARRAY[1, 3])) AS x0
SELECT * FROM UNNEST(ARRAY[ROW(1, ROW(2), ARRAY[ROW(3)], ROW(ROW(4))), ROW(2, ROW(3), ARRAY[ROW(4)], ROW(ROW(5)))]) AS x0
UPDATE v39856 AS x1 SET v39820 = x1.v39819 * 'x' WHERE v39820 = CAST('0' AS INT)
UPDATE v39818 AS x1 SET v39819 = '[7,8)' WHERE v39820 = 'aaa' RETURNING *, CAST(x1.v39819 AS REGCLASS)
CREATE TEMPORARY TABLE v39866 (v39867 int8alias1, v39868 connotnull)
CREATE TEMPORARY TABLE v39869 (v39870 BOX, v39871 TEXT COLLATE v39871 REFERENCES x5 (x6) ON UPDATE CASCADE) PARTITION OF x3 FOR VALUES IN (2)
SELECT * FROM v39857 AS x1
SELECT * FROM v39846 AS x1
CREATE OR REPLACE TABLE v39872 (v39873 VARCHAR(60)) RETURNS INT AS SELECT DISTINCT CAST((x5 % 1000) AS TEXT) FROM x3 AS x4
CREATE OR REPLACE TABLE v39874 (v39875 INT, v39876 INT, v39877 TEXT) PARTITION OF x5 FOR VALUES FROM (21) TO ('2017-02-01') PARTITION BY LIST(x6) AS SELECT 2 + 2 AS x4
INSERT INTO v39856 (v39819) VALUES ('994877526002806872754342148749241.04353023451866590387054959174736129501310680280823383331007646306243540953499740615246583399296334239109936336446284803020643582102868247857009494139535009572740621288230740389545481395')
UPDATE v39818 AS x1 SET v39820 = 'PS.base.tb2'
UPDATE v39818 AS x1 SET x5.x4.x1.v39819 = '2.2'
UPDATE v39812 AS x1 SET v39813 = x1.v39813 + x1.v39813
CREATE INDEX v39878 ON v39859(v39862 NULLS FIRST)
CREATE INDEX v39879 ON v39856((CAST((v39819 + v39820) AS DOUBLE PRECISION) / 2) NULLS FIRST)
SELECT x2.v39820, x2.v39820 FROM v39856 AS x2
SELECT x2.v39865, x2.v39865 FROM v39864 AS x2
SELECT * FROM (VALUES (CAST(NULL AS oidvector)), ('0 1 2 3 4'), ('17 18 19 20'), ('42 43 42 45'), ('550273 550273 570274'), ('207112489 207112499 21512 2155 372325 1363252')) AS x0
SELECT * FROM v39858 AS x1(x2 domain4, x3 insert_pos_ints, x4 domain4)
INSERT INTO v39812 ("v39813") VALUES ('abc')
CREATE TABLE v39880 (v39881 testxmldomain) PARTITION OF x3 FOR VALUES IN ('blue')
CREATE TEMPORARY TABLE v39882 (v39883 VARCHAR(32))
SELECT * FROM (VALUES (CAST(0 AS DECIMAL), CAST(0 AS DECIMAL)), (CAST(0 AS DECIMAL), CAST('NaN' AS DECIMAL)), (CAST(0 AS DECIMAL), CAST(46375 AS DECIMAL)), (CAST(433125 AS DECIMAL), CAST(46375 AS DECIMAL)), (CAST(43312.5 AS DECIMAL), CAST(4637.5 AS DECIMAL)), (CAST(4331.250 AS DECIMAL), CAST(463.75000 AS DECIMAL)), ('inf', '0'), ('inf', '42'), ('inf', 'inf')) AS x0
CREATE VIEW v39884 AS SELECT * FROM v39859 AS x2 WHERE F_LEAK(x2.v39861)
CREATE VIEW v39885 AS SELECT * FROM v39857 AS x2
INSERT INTO v39864 (v39865) VALUES ('more')
CREATE TABLE v39886 (v39887 INT, v39888 INET, FOREIGN KEY (x3, x4) REFERENCES x5)
CREATE TABLE v39889 (v39890 INT NOT NULL GENERATED BY DEFAULT AS IDENTITY)
CREATE INDEX v39891 ON v39859 USING spgist(v39860 NULLS FIRST) WITH (autovacuum_enabled=4 /* Boolean */)
CREATE INDEX v39892 ON v39859(v39863 NULLS FIRST)
CREATE INDEX v39893 ON v39864((1 - v39865) NULLS FIRST)
CREATE INDEX v39894 ON v39846 USING spgist((CAST(ROW(v39849, v39849) AS test_type1)) NULLS FIRST)
DROP TABLE v39818
DROP TABLE v39812
DROP TABLE v39885
DROP TABLE v39858
SELECT * FROM (VALUES (0, 9998), (1, 1000)) AS x0
SELECT * FROM (VALUES (6, 7)) AS x0
CREATE TABLE v39895 (v39896 INT, v39897 TEXT COLLATE v39896)
CREATE TABLE v39898 (v39899 INT PRIMARY KEY, v39900 anyelement REFERENCES x4 (x5) ON UPDATE CASCADE ON DELETE CASCADE)
UPDATE v39856 AS x1 SET v39819[3] = 10 RETURNING MERGE_ACTION()
SELECT * FROM v39889 AS x1
CREATE TABLE v39901 (v39902 INT DEFAULT 'tutu')
CREATE TABLE v39903 (v39904 INT PRIMARY KEY, v39905 TEXT DEFAULT 'Unspecified', v39906 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL)
CREATE VIEW v39907
CREATE VIEW v39908
CREATE INDEX v39909 ON v39812((CAST(v39813 AS TEXT) COLLATE "x2") NULLS FIRST)
CREATE INDEX v39910 ON v39889 USING hash(v39890 x2 NULLS FIRST) WITH (not_existing_option=2)
CREATE INDEX v39911 ON v39818 USING gist(v39820 NULLS FIRST) WITH (oids=auto)
CREATE INDEX v39912 ON v39889(v39890 NULLS FIRST, v39890 NULLS FIRST, v39890 NULLS FIRST)
DROP TABLE v39858
DROP TABLE v39812
SELECT * FROM (VALUES ('wrong', '-.000000000000000122482510461124748279475400009367345900846466958806966807399903713411658400733717078392550780910604704603123670767210550800752620037863340961255721285160854785449315208955654408132775022766783343331151895973970395232686910362226184006990485313002943710214511418310741271074710741339586430026286272098156531835438969774325517509155992092194349661122678547097423264670055720422496527272118788005921590521726691666219504214087867030003203385360001614199656989667055583749577099440092378355805901262289841168751608673297446473709956390142112843400255748161809121986096092991616144443486023218404881798896685413932215981950393130292001833627899480153863300557853617312991880655905907971211246077450786084079040513198340644157868678782195341316027563717617074364438885981635394382733697473265872796207'), (2, 1, 'B'), (' 1 Gb')) AS x0(x1, x2)
SELECT * FROM (VALUES (7000000000005), (7000000000007)) AS x0
CREATE TABLE v39913 (v39914 TEXT DEFAULT 'text')
CREATE TABLE v39915 (v39916 DECIMAL[], v39917 TEXT DEFAULT 'Unspecified')
CREATE TABLE v39918 (v39919 rf_bug_status CHECK (v39919 = 1))
CREATE TABLE v39920 (v39921 CHAR(42) DEFAULT CAST(CURRENT_TIMESTAMP AS DATE) + 1)
CREATE INDEX v39922 ON v39889 USING btree(v39890 NULLS FIRST, v39890 NULLS FIRST)
CREATE INDEX v39923 ON v39846 USING hash(v39847 NULLS FIRST)
CREATE INDEX v39924 ON v39915((v39917 + 1) NULLS FIRST)
CREATE TABLE v39925 (v39926 TEXT GENERATED BY DEFAULT AS IDENTITY)
CREATE TABLE v39927 (v39928 INT, v39929 macaddr)
CREATE TABLE v39930 (v39931 DOUBLE PRECISION /* fail */)
CREATE TABLE v39932 (v39933 TEXT, v39934 DECIMAL, v39935 INT, v39936 TEXT, v39937 DATE, v39938 INT, v39939 TEXT)
SELECT * FROM (VALUES (1, 1), (2, 2)) AS x0
SELECT * FROM (VALUES ('-infinity'), ('-infinity')) AS x0
CREATE TABLE v39940 (v39941 DECIMAL DEFAULT CAST(TIMEOFDAY() AS TIMESTAMP))
CREATE TABLE v39942 (v39943 INT, v39944 pg_snapshot)
CREATE TABLE v39945 (v39946 CHAR(10) /* primary key */, v39947 INT /* available # of pairs */, v39948 CHAR(10) /* shoelace color */, v39949 DOUBLE PRECISION /* shoelace length */, v39950 CHAR(8) /* length unit */)
CREATE TABLE v39951 (v39952 TEXT, v39953 INT)
CREATE TABLE v39954 (v39955 INT PRIMARY KEY, v39956 INT, v39957 INT)
CREATE TABLE v39958 (v39959 BOOLEAN, v39960 BOOLEAN, v39961 BOOLEAN)
CREATE TABLE v39962 (v39963 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v39964 TEXT, v39965 INT DEFAULT 42)
CREATE TABLE v39966 (v39967 TEXT CONSTRAINT x2 REFERENCES x3)
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('20011227T040506.789-08' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST('{[10,20)}' AS INT4MULTIRANGE)), (CAST('{[23, 43]}' AS INT4MULTIRANGE)), (CAST('{[5675, 550273)}' AS INT4MULTIRANGE)), (CAST('{[550274, 1550274)}' AS INT4MULTIRANGE)), (CAST('{[1550275, 208112489)}' AS INT4MULTIRANGE))) AS x0
CREATE INDEX v39968 ON v39951(v39952 NULLS FIRST, v39952 NULLS FIRST) INCLUDE (x3, x4)
CREATE INDEX v39969 ON v39889(JSON_QUERY(v39890, '$.a ? (@.datetime() < $.datetime())') NULLS FIRST)
CREATE INDEX v39970 ON v39932((CAST((v39934 + v39935) AS DOUBLE PRECISION) / 2) NULLS FIRST)
CREATE INDEX v39971 ON v39864(v39865 NULLS FIRST)
CREATE TABLE v39972 (v39973 TEXT, LIKE x2 INCLUDING INDEXES, v39974 TEXT) PARTITION BY LIST(x4)
CREATE TABLE v39975 (v39976 pk GENERATED ALWAYS AS (v39977 * '1e200'), v39977 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY CONSTRAINT x5 CHECK (v39976 > 1)) PARTITION OF x4 FOR VALUES FROM ('common', 10) TO ('common', MAXVALUE)
CREATE INDEX v39978 ON v39942(JSON_QUERY(v39943, '$.timestamp()') NULLS FIRST, ABS(v39943) NULLS FIRST, X('x') NULLS FIRST)
CREATE INDEX v39979 ON v39856 USING hash(v39819 x2 NULLS FIRST) WITH (not_existing_option=2)
/* round-trip tests */ WITH RECURSIVE x1 AS (SELECT * FROM (VALUES (CAST('0' AS DECIMAL)), ('1'), ('2'), ('4.2'), ('inf'), ('nan')) AS x2) SELECT * FROM (VALUES (CAST(NULL AS TIME)), (4472406533629990550)) AS x0 LIMIT UNNEST(GENERATE_SERIES(1, 3))
UPDATE v39913 AS x1 SET v39914 = -v39914[1] WHERE NOT v39914 IS NULL
CREATE TABLE v39980 (v39981 INT PRIMARY KEY)
CREATE TABLE v39982 (v39983 INET, v39984 INET, PRIMARY KEY (v39983 NULLS FIRST, v39984 NULLS FIRST), FOREIGN KEY (x3, x4) REFERENCES x7 (x8, x9))
UPDATE v39958 AS x1 SET v39960 = -v39961[1] WHERE v39961 = 'foo'
CREATE VIEW v39985 AS SELECT x5.v39820, CAST(x5.v39819 AS DECIMAL), x5.v39819, x5.v39819 FROM v39856 AS x5
CREATE VIEW v39986 AS SELECT x2.v39905 FROM v39903 AS x2 WHERE x2.v39905 < 995 ORDER BY x2.v39904 NULLS FIRST FETCH FIRST (NULL + 1) ROWS ONLY
CREATE TABLE v39987 (v39988 INT UNIQUE NULLS NOT DISTINCT)
CREATE TABLE v39989 (v39990 TEXT, v39991 TEXT)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39992 AS SELECT * FROM v39856 AS x7(x8) NATURAL JOIN v39927 AS x9 NATURAL JOIN v39857 AS x10(x11, x12)
CREATE VIEW v39993 AS SELECT * FROM v39846 AS x2 WHERE x2.v39849 < 256
INSERT INTO v39962 (v39964, v39965) VALUES (1, 'b')
CREATE INDEX v39994 ON v39859((v39861 || v39860) NULLS FIRST)
CREATE INDEX v39995 ON v39903(JSON_QUERY(v39906, '$.a ? (@.datetime("HH:MI TZH") < $.datetime("YY-MM-DD HH:MI"))') NULLS FIRST)
INSERT INTO v39846 (v39847, v39849) VALUES (3, 'bar')
INSERT INTO v39942 ("v39943") VALUES ('three')
CREATE TABLE v39996 (CHECK ( >= CAST('2006-03-01' AS DATE) AND  < CAST('2006-04-01' AS DATE))) WITH (autovacuum_analyze_scale_factor=TRUE)
CREATE TABLE v39997 (v39998 INT, v39999 anyarray) PARTITION OF x3 FOR VALUES FROM (1) TO (10) PARTITION BY LIST(x4)
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
/* This'd be an infinite loop, but outside query reads only as much as needed */ WITH RECURSIVE x2 AS (INSERT INTO x1 VALUES (41), (42), (43) RETURNING *) SELECT * FROM (VALUES (100), (300), (500)) AS x0 LIMIT 66
SELECT x4.v39890 FROM v39889 AS x4 JOIN v39942 AS x5 ON (x4.v39890 = CAST('bytea' AS REGTYPE) AND NOT x4.v39890)
CREATE VIEW v40000 AS SELECT * FROM v39954 AS x3
SELECT * FROM (VALUES (CAST('true' AS JSONB)), ('false'), ('"null"')) AS x0
SELECT * FROM (VALUES (CAST(NULL AS INTERVAL)), (CAST('3 days' AS INTERVAL)), (CAST('infinity' AS TIMESTAMPTZ) - CURRENT_TIMESTAMP), (CAST('6 days' AS INTERVAL)), (CAST('-infinity' AS INTERVAL))) AS x0
CREATE VIEW v40001 AS SELECT * FROM v39989 AS x1 WHERE x1.v39990 > 10
CREATE INDEX v40002 ON v39951 USING gist2(v39952 NULLS FIRST)
CREATE INDEX v40003 ON v39920(LEFT(v39921, 3) NULLS FIRST)
SELECT x2.v39956, x2.v39955 FROM v40000 AS x2 TABLESAMPLE SYSTEM (0) REPEATABLE (1)
SELECT * FROM v39989 AS x0 TABLESAMPLE SYSTEM (100)
SELECT * FROM v39915 AS x0 TABLESAMPLE BERNOULLI (5.5) REPEATABLE (0)
CREATE TEMPORARY TABLE v40004 (v40005 INT)
CREATE TABLE v40006 (v40007 INT) RETURNS TABLE (x3 TEXT, x4 INT, x5 TEXT, x6 INT, x7 TEXT, x8 INT[], x9 INT, x10 TEXT, x11 INT[], x12 INT, x13 TEXT, x14 INT[]) LANGUAGE 'sql' STRICT
SELECT * FROM v39942 AS x1
SELECT * FROM (VALUES (1, NULL), (2, 600), (3, 470), (4, 170), (5, 430), (6, 300)) AS x0
CREATE VIEW v40008 AS SELECT * FROM v39954 AS x2 ORDER BY x2.v39957 + x2.v39955 NULLS FIRST
CREATE VIEW v40009 AS SELECT COUNT(*) FROM v39980 AS x1
INSERT INTO v39856 (v39819, v39820) VALUES (1343554297, 10)
CREATE TABLE v40010 (v40011 INT PRIMARY KEY, v40012 VARCHAR(15))
CREATE TABLE v40013 (v40014 TIMESTAMPTZ[])
CREATE TABLE v40015 (v40016 INT, v40017 posint2, v40018 INT CHECK (v40018 < 10), v40019 INT REFERENCES x5 ON UPDATE CASCADE)
CREATE TABLE v40020 (v40021 INT, v40022 INT, v40023 INT UNIQUE, PRIMARY KEY (v40023 NULLS FIRST, v40021 NULLS FIRST))
CREATE INDEX v40024 ON v39856 USING hash(v39819 x2 NULLS FIRST) WITH (pages_per_range=100)
CREATE INDEX v40025 ON v39864(JSON_QUERY(v39865, '$.a ? (@.date() < $.datetime("HH:MI TZH"))') NULLS FIRST)
CREATE INDEX v40026 ON v39930 USING spgist((v39931 + 1) NULLS FIRST)
DROP TABLE v40000
DROP TABLE v40000
DROP TABLE v39932
DROP TABLE v39846
CREATE TABLE v40027 (v40028 INT REFERENCES x4 (x5)) AS SELECT x2 FROM x3 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE TABLE v40029 (v40030 macaddr8, v40031 TEXT UNIQUE)
UPDATE v39954 AS x1 SET v39956 = DATEMULTIRANGE(DATERANGE('2020-01-01', '2021-01-01')) RETURNING *, v39957 * 2
SELECT * FROM v39856 AS x1
SELECT * FROM v39913 AS x1
CREATE TABLE v40032 (v40033 BIGINT REFERENCES x2)
CREATE TABLE v40034 (v40035 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40036 TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP)
CREATE VIEW v40037
CREATE VIEW v40038 /* fail, disallowed        CREATE TABLE abc (               a serial,               b int UNIQUE        ) */
CREATE INDEX v40039 ON v39951(v39953 NULLS FIRST, v39953 NULLS FIRST) INCLUDE (x2, x3)
CREATE INDEX v40040 ON v39987 USING spgist(v39988 NULLS FIRST) WITH (autovacuum_enabled=4 /* Boolean */)
DROP TABLE v39903
DROP TABLE v39930
SELECT * FROM (VALUES (2, 3.0), ('123_.456'), ('my first manga')) AS x0(x1)
SELECT * FROM (VALUES (1, 1), (2, 2)) AS x0
CREATE TABLE v40041 (v40042 TSVECTOR, v40043 REAL)
CREATE TABLE v40044 (v40045 gtest31_1, v40046 CHAR(4096) DEFAULT (UNNEST(GENERATE_SERIES(1, 3))))
UPDATE v39864 AS x0 SET v39865 = CAST(HASHINETEXTENDED(v39865, 1) AS BIT(32)) RETURNING *, CAST(x0.v39865 AS REGCLASS), CASE MERGE_ACTION() WHEN 'INSERT' THEN 'Inserted ' || v39865 WHEN 'UPDATE' THEN 'Added ' || v39865 || ' to balance' WHEN 'DELETE' THEN 'Removed ' || v39865 END AS x3
UPDATE v40010 AS x1 SET v40011 = CAST('192.168.1.0/24' AS cidr) RETURNING x1.v40011, x1.v40012, x1.v40011
CREATE TABLE v40047 (v40048 gtest31_1)
CREATE TABLE v40049 (v40050 ENUM_TEST REFERENCES x2 ON delete SET DEFAULT)
CREATE INDEX v40051 ON v39889(TEXTCAT(v39890, v39890) NULLS FIRST)
CREATE INDEX v40052 ON v39951 USING gist(v39953 NULLS FIRST) WITH (fillfactor=9)
CREATE INDEX v40053 ON v40010((v40011 + 1) NULLS FIRST)
CREATE TABLE v40054 (v40055 CIDR)
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40056 (v40057 TEXT GENERATED BY DEFAULT AS (COALESCE(v40057, 100)))
CREATE TABLE v40058 (v40059 INT COLLATE "x3", v40060 TEXT)
CREATE TABLE v40061 (v40062 INT, v40063 VARCHAR(10), v40064 CHAR)
SELECT * FROM (VALUES (0), (1.149484958), (17.149484958), (42.149484958), (149484958.550273), (2071124898672)) AS x0
UPDATE v39987 AS x1 SET v39988 = TO_TSQUERY('$[*].ceiling().abs()', CAST('heaptable' AS rgb)) WHERE v39988 = 'WS.001.2b'
UPDATE v39859 AS x1 SET v39862 = TO_TSQUERY('$[*].ceiling().abs()', CAST('2009-07-25' AS foodomain)) WHERE v39863 IS NULL
INSERT INTO v39864 (v39865) VALUES (35)
SELECT * FROM (VALUES (CAST('0' AS DECIMAL)), ('1'), ('-1'), ('4.2'), ('-7.777'), ('1e340'), ('-1e340'), ('inf'), ('-inf'), ('nan'), ('inf'), ('-inf'), ('nan')) AS x0
SELECT * FROM (VALUES (CAST(NULL AS pg_lsn)), ('16/B374D84'), ('30/B374D84'), ('255/B374D84'), ('25/B379D90'), ('900/F37FD90')) AS x0
SELECT x4.v39953, x4.v39953 FROM v39951 AS x4
SELECT x3.v39865, x3.v39865 FROM v39864 WITH ORDINALITY AS x3
CREATE TABLE v40065 (v40066 INT NOT NULL CHECK (v40067 >= 1 AND  <= 10), v40067 INT NOT NULL, v40068 USER-DEFINED[], CONSTRAINT x5 CHECK ( > 3 AND  <> 'check failed' AND v40068 < 7), CHECK (v40066 < 10))
CREATE TABLE v40069 (v40070 INT REFERENCES x2 (x3) PRIMARY KEY)
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
INSERT INTO v40041 (v40043) VALUES (0), (1), (20), ('.41357483778485235518'), (20), ('aa')
CREATE TABLE v40071 (v40072 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40073 INT UNIQUE NULLS NOT DISTINCT)
CREATE TABLE v40074 (v40075 anyrange, v40076 CHAR(3) CHECK (v40075 < 5))
CREATE INDEX v40077 ON v40010(v40011 NULLS FIRST) WITH (x3.x4=2)
CREATE INDEX v40078 ON v39980(v39981 NULLS FIRST) INCLUDE (x1)
SELECT * FROM (VALUES (8, '    ', '{{"a"},{"c"}}'), ('	  15 	  '), (1, 1, 0, '1')) AS x0(x1, x2, x3)
SELECT * FROM (VALUES ('x'), ('x'), ('x')) AS x0(x1)
CREATE TABLE v40079 (v40080 testdomain_sv)
CREATE TABLE v40081 (v40082 pg_snapshot)
CREATE TABLE v40083 (v40084 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY, v40085 INT, v40086 TEXT, v40087 TEXT, CONSTRAINT x5 FOREIGN KEY (x6) REFERENCES x7)
CREATE TABLE v40088 (v40089 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40090 INT DEFAULT NEXTVAL('truncate_a_id1'))
UPDATE v40009 AS x1 SET count = count || 'v3' WHERE FALSE RETURNING count + 1 AS x3
UPDATE v40061 AS x1 SET v40062 = '70' WHERE v40062 = 'PS.base.a3' RETURNING *
CREATE VIEW v40091 AS SELECT x4.v39929, x4.v39928 FROM v39927 AS x4 TABLESAMPLE X (5.500000) REPEATABLE (1) ORDER BY x4.v39929 NULLS FIRST, POINT(0.101, 0.101) <-> x4.v39929 NULLS FIRST, SUM(x4.v39928) + SUM(x4.v39929) NULLS FIRST OFFSET 990
CREATE TABLE v40092 (v40093 INT CONSTRAINT x2 CHECK (v40093 > 0) ENFORCED)
CREATE TABLE v40094 (v40095 TEXT REFERENCES x2 INITIALLY DEFERRED)
UPDATE v39954 AS x1 SET v39955 = v39956 * -3
UPDATE v40010 AS x1 SET v40011 = 'bd'
CREATE TABLE v40096 (v40097 INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL, v40098 INT) PARTITION OF x3 FOR VALUES FROM (1, 10) TO (1, 20)
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
CREATE TABLE v40099 (v40100 xid DEFAULT 'tutu', v40101 CHAR(3) COLLATE v40101, v40102 INT DEFAULT 5, FOREIGN KEY ("x4") REFERENCES x10 ON update CASCADE ON delete CASCADE, FOREIGN KEY (x5, x6) REFERENCES x11 ON UPDATE SET NULL ON DELETE SET NULL, FOREIGN KEY (x7, "x8") REFERENCES x12 MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL) PARTITION OF x9 FOR VALUES IN (CAST('(1,2)' AS partitioned))
INSERT INTO v39989 ("v39991") VALUES ('Dec 31 17:32:01 2000')
CREATE TABLE v40103 (v40104 INT, v40105 INT, v40106 INT, v40107 INT, v40108 INT, v40109 INT, v40110 INT, v40111 INT)
CREATE TABLE v40112 (v40113 INT, v40114 VARCHAR, v40115 INT, UNIQUE (x4, x5))
CREATE INDEX v40116 ON v39927(v39928 NULLS FIRST)
CREATE INDEX v40117 ON v39856((v39819 || v39820) x2 NULLS FIRST)
SELECT x2.v40030, x2.v40031 FROM v40029 AS x2 TABLESAMPLE X (5.500000) REPEATABLE (5)
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39812 AS x0
SELECT * FROM v39987 AS x0
SELECT * FROM (VALUES (1, 1)) AS x0(x1, x2)
SELECT * FROM (VALUES (1), (2), (NULL), (4)) AS x0
CREATE TABLE v40118 (v40119 INT, v40120 NAME, v40121 TEXT)
CREATE TABLE v40122 (v40123 INT UNIQUE, v40124 TEXT)
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY['foo', 'bar'], ARRAY['hidden'])
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY[ROW(1, ROW(2), ARRAY[ROW(3)], ROW(ROW(4))), ROW(2, ROW(3), ARRAY[ROW(4)], ROW(ROW(5)))], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])
UPDATE v40009 AS x1 SET (count, count, count) = ('x', count + 1, count) WHERE count = 'new'
UPDATE v40118 AS x0 SET v40120 = TO_TSQUERY('$.decimal(1,12345678901)', CAST(18446744073709551616 AS DECIMAL)) WHERE v40119 = 'neptun'
CREATE TABLE v40125 (v40126 INT DEFAULT NEXTVAL('truncate_a_id1'), "v40127" BOOLEAN, v40128 posint[])
CREATE TABLE v40129 (v40130 DECIMAL(9, 2), v40131 BOOLEAN, v40132 VARCHAR(20))
INSERT INTO v39812 (v39813) VALUES ('\x666f6f')
INSERT INTO v40129 (v40132) VALUES ('-0')
CREATE INDEX v40133 ON v39980(v39981 DESC NULLS LAST, v39981 ASC NULLS FIRST, v39981 NULLS FIRST, v39981 NULLS FIRST)
CREATE INDEX v40134 ON v40000(ABS(v39956) NULLS FIRST)
CREATE TABLE v40135 (v40136 VARCHAR(10)) PARTITION OF x2 FOR VALUES FROM (22, '{2, 3}') TO ('ccc', 100000)
CREATE TABLE v40137 (v40138 INT NULL GENERATED ALWAYS AS IDENTITY) PARTITION OF x2 FOR VALUES FROM (x4.x3) TO ('2019-01-01')
CREATE VIEW v40139 AS WITH RECURSIVE x2 AS (SELECT * FROM (VALUES (X(1, 1)), (X(1, 1)), (X(1, 1))) AS x6(x7) WHERE x1.v40055 > '3d914f93-48c9-cc0f-f8a7-9716700b9fcd' UNION ALL SELECT x1.v40055 FROM x4 AS x9, x5 AS x10 WHERE x1.v40055 = x1.v40055) SELECT * FROM v40054 AS x1
CREATE VIEW v40140 AS SELECT x4.v40119, x4.v40120 FROM v40118 AS x4
SELECT * FROM (VALUES (ARRAY[1, 2]), (ARRAY[1, 3])) AS x0
SELECT * FROM (VALUES (CAST('-infinity' AS TIMESTAMP)), (CAST('1995-08-06 12:30:15' AS TIMESTAMP)), (CAST('infinity' AS TIMESTAMP))) AS x0
SELECT * FROM (VALUES (CAST(NULL AS INET)), ('192.168.100.128/25'), ('192.168.100.0/8'), ('172.168.10.126/16'), ('172.18.103.126/24'), ('192.188.13.16/32')) AS x0
SELECT * FROM (VALUES (CAST('(1111,3333),(2222,4444)' AS polygon)), (1, DATERANGE('2018-01-02', '2018-02-03')), ('2016-08-5', 'from pitest2'), (CAST('127.127.127.127/0' AS INET)), (1275068416)) AS x0(x1)
UPDATE v40122 AS x1 SET v40123['a'] = CAST('[1, 2, 3]' AS JSONB) RETURNING v40123
UPDATE v39859 AS x1 SET v39862 = v39862 || ' notes added by merge9 ' RETURNING x1.v39863
UPDATE v39920 AS x0 SET v39921 = '[4,5)'
UPDATE v40071 AS x1 SET v40072 = v40073 * 10
SELECT * FROM (VALUES (CAST('{1,2}' AS INT[])), (CAST('{3,4}' AS INT[]))) AS x0
INSERT INTO v40118 (v40121) VALUES (x2)
INSERT INTO v39980 ("v39981") VALUES ('5')
INSERT INTO v39987 (v39988) VALUES (1)
UPDATE v39864 AS x1 SET v39865 = 66766766 WHERE NOT v39865 IS NULL
SELECT * FROM (VALUES (CAST(NULL AS macaddr8)), ('08:00:2b:01:02:04:36:49'), ('08:00:2b:01:02:04:f0:e8'), ('e2:7f:51:3e:70:49:16:29'), ('d6:a9:4a:78:1c:d5:47:32'), ('ea:29:b1:5e:1f:a5')) AS x0
SELECT * FROM (VALUES (1), (1), (1), (1), (1), (1)) AS x0(x1)
CREATE INDEX v40141 ON v39920(v39921 COLLATE "x1" NULLS FIRST)
CREATE INDEX v40142 ON v39945(JSON_QUERY(v39950, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST)
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
SELECT x2.v39955, x2.v39956 FROM v40008 AS x2
CREATE INDEX v40143 ON v39958(JSON_QUERY(v39961, '$.a ? (@.time() < $.datetime("HH:MI TZH"))') NULLS FIRST)
CREATE INDEX v40144 ON v40071 USING spgist(LOWER(v40073) COLLATE "x3" x2 NULLS FIRST) WITH (oids=auto)
CREATE TABLE v40145 (v40146 domainint4, CONSTRAINT x3 FOREIGN KEY ("x4") REFERENCES x5 (x6, x7))
CREATE TABLE v40147 (v40148 INT, v40149 TEXT, CHECK (CAST((v40149, v40148) AS at_tab1) = CAST((1, '42') AS at_tab1)))
CREATE INDEX v40150 ON v39958(v39960 NULLS FIRST) WHERE v39959 >= '$123.00'
CREATE INDEX v40151 ON v39889(v39890 NULLS FIRST, v39890 NULLS FIRST) WITH (fillfactor=10)
CREATE TABLE v40152 (v40153 INT PRIMARY KEY, v40154 VARCHAR(20))
CREATE TABLE v40155 (v40156 ddef2 DEFAULT RANDOM(), v40157 posint[], v40158 cantcompare, FOREIGN KEY (x4) REFERENCES x5)
INSERT INTO v40092 ("v40093") VALUES (5)
UPDATE v40010 AS x1 SET x1.v40012 = DATERANGE('2020-01-01', '2018-03-01')
UPDATE v40009 AS x1 SET count[1].x2 = -1
SELECT * FROM (VALUES (CAST('{[1,2]}' AS NUMMULTIRANGE)), (CAST('{[2,3]}' AS NUMMULTIRANGE))) AS x0
INSERT INTO v40118 (v40121) VALUES ('4.31')
INSERT INTO v40071 ("v40072") VALUES (0.75)
SELECT * FROM (VALUES ('id', 1, 'email', TRUE, 11, TRUE), (CAST('0.0.0.0/1' AS INET)), (1), (CAST(42 AS inotnull))) AS x0(x1)
SELECT * FROM (VALUES (CAST(0 AS DECIMAL)), (2, 'Record should go to rtest_t4'), (CAST(17 AS jsonpath)), (CAST('{3,60,200}' AS TIME(8)))) AS x0(x1, x2)
INSERT INTO v39958 (v39960, v39959) VALUES (9, 8)
INSERT INTO v39927 ("v39928") VALUES (4854880398305394687)
UPDATE v40034 AS x1(x3 USER-DEFINED(RAINBOW), x4 ARRAY, x5 CHAR) SET v40036 = 100
UPDATE v40010 AS x1 SET v40012 = '5'
INSERT INTO v39942 (v39944) VALUES ('[1,2)')
INSERT INTO v40118 (v40119, v40120) VALUES ('00:01 PDT', '[2010-01-02 11:00, 2010-01-02 12:00)')
SELECT * FROM (VALUES (CAST('[a,c]' AS textrange)), (CAST('[b,b]' AS textrange)), (CAST('[c,f]' AS textrange)), (CAST('[g,h)' AS textrange)), (CAST('[h,j)' AS textrange))) AS x0
UPDATE v39927 AS x1 SET v39928 = 'EU' RETURNING MERGE_ACTION()
UPDATE v40034 AS x1 SET v40036 = 5 RETURNING MERGE_ACTION()
CREATE VIEW v40159 AS SELECT DATE(x5.v39988) AS x2, x5.v39988 AS x3, x5.v39988 AS x4 FROM v39987 AS x5
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
INSERT INTO v40103 (v40106) VALUES ('1') ON CONFLICT(x2, x3) DO UPDATE SET x4 = x6.x5 + '[3,4)'
UPDATE v39915 AS x0 SET v39917 = 70 WHERE x0.v39917 = '{"pos":98, "line":371, "node":"CBA", "indexed":true}'
UPDATE v40013 AS x1(x2) SET v40014 = 'wiecx' WHERE v40014 = CAST('comment_test_child' AS REGCLASS)
SELECT x3.v39957, x3.v39956 FROM v39954 AS x3 TABLESAMPLE X (200)
CREATE INDEX v40160 ON v39942 USING dummy_index_am(v39943 NULLS FIRST) WITH (option_bool=FALSE, oids=auto, option_real=3.1, IDENTITY=130, fillfactor=50, option_string_null='val')
CREATE INDEX v40161 ON v39980(v39981 NULLS FIRST) WITH (fillfactor=30)
SELECT * FROM v39989 AS x0
CREATE TABLE v40162 (v40163 INT UNIQUE, v40164 box, EXCLUDE USING gist(v40163 NULLS FIRST WITH &&)) PARTITION OF x3 FOR VALUES IN ('AAA1', 'AAA2')
CREATE TEMPORARY TABLE v40165 (v40166 INT)
SELECT * FROM v40071 AS x1(x2 ARRAY, x3 insert_pos_ints, x4 DECIMAL(64, 60), x5 ARRAY)
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS TEXT), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS varbit), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) WITH ORDINALITY AS x1
CREATE VIEW v40167 AS SELECT FROM v40122 AS x1
INSERT INTO v40000 (v39957) VALUES (8)
CREATE TABLE v40168 (v40169 INT, v40170 INT, v40171 INT DEFAULT 0)
CREATE TABLE v40172 (v40173 LSEG)
CREATE TABLE v40174 (v40175 multitextrange1[], v40176 INT, v40177 float8multirange, v40178 int8alias1)
CREATE TABLE v40179 (v40180 TEXT, v40181 DECIMAL, v40182 INT, v40183 VARCHAR, v40184 DATE, v40185 INT, v40186 TEXT, v40187 INT[])
CREATE VIEW v40188 AS SELECT x4.v39921, x4.v39921 FROM v39920 AS x4
CREATE INDEX v40189 ON v39951(WRAP_DO_ANALYZE(v39952) NULLS FIRST)
CREATE INDEX v40190 ON v39818 USING brin(v39820 NULLS FIRST) WHERE v39820 = 2
CREATE INDEX v40191 ON v39856 USING gist(v39819 NULLS FIRST) WITH (fillfactor=9)
DROP TABLE v39920
DROP TABLE v40009
DROP TABLE v40013
DROP TABLE v40172
CREATE TABLE v40192 (v40193 bogus REFERENCES x3, v40194 testdomain_p REFERENCES x4 ON update RESTRICT ON delete RESTRICT)
UPDATE v40010 AS x0 SET v40012 = x0.v40012 - x0.v40012 RETURNING MERGE_ACTION()
UPDATE v39962 AS x1 SET v39963 = 'PS.base.a6' RETURNING MERGE_ACTION()
SELECT * FROM v40129 AS x1(x2 ARRAY, x3 insert_pos_ints, x4 DECIMAL(64, 60), x5 ARRAY)
SELECT * FROM (VALUES (CAST('{1,2,3,4,5,6}' AS xy_tuple[])), ('{1,2}'), ('[10:16]={1,2,3,4,5,6,7}'), ('[-15:-10]={1,2,3,4,5,6}'), ('{{1,10},{2,20},{3,30},{4,40}}')) AS x0
CREATE TABLE v40195 (v40196 LSEG)
CREATE TABLE v40197 (v40198 rposint)
CREATE VIEW v40199
CREATE VIEW v40200
CREATE INDEX v40201 ON v39864 USING gin(v39865 NULLS FIRST)
CREATE INDEX v40202 ON v40168 USING spgist((v40171 > 456) NULLS FIRST)
CREATE INDEX v40203 ON v40140 USING spgist(JSON_QUERY(v40119, '$') NULLS FIRST)
DROP TABLE v39889
DROP TABLE v39980
SELECT * FROM (VALUES (7000000000005), (7000000000007)) AS x0
CREATE TABLE v40204 (LIKE x1 INCLUDING STORAGE)
CREATE TABLE v40205 (v40206 INT, v40207 INT DEFAULT NEXTVAL('truncate_a_id1'))
CREATE TABLE v40208 (v40209 tab1 GENERATED ALWAYS AS (v40209 * '1e200'))
CREATE TABLE v40210 (v40211 INT REFERENCES x3 MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE, v40212 INT)
CREATE INDEX v40213 ON v40092(v40093 NULLS FIRST) WHERE v40093 % 2 = 0
CREATE INDEX v40214 ON v40029(v40030 NULLS FIRST, ABS(v40030) NULLS FIRST, v40031 NULLS FIRST)
CREATE INDEX v40215 ON v40061 USING brin(v40064 NULLS FIRST, v40064 NULLS FIRST)
CREATE INDEX v40216 ON v39864(v39865 NULLS FIRST) WHERE v39865 = 2
CREATE TABLE v40217 (v40218 path)
CREATE TABLE v40219 (v40220 TEXT GENERATED BY DEFAULT AS IDENTITY)
CREATE TABLE v40221 (v40222 intdom1, v40223 TEXT)
CREATE TABLE v40224 (v40225 INT GENERATED ALWAYS AS IDENTITY (START WITH 44))
DROP TABLE v40009
DROP TABLE v40010
SELECT * FROM (VALUES ('1'), ('infinity')) AS x0
CREATE TABLE v40226 (v40227 DECIMAL DEFAULT CAST((RANDOM() * 10000) AS INT))
CREATE TABLE v40228 (v40229 INT COLLATE "x3", v40230 TEXT)
CREATE TABLE v40231 (v40232 INT DEFAULT 2501, v40233 INT DEFAULT 142857)
CREATE TABLE v40234 (LIKE x1 INCLUDING STORAGE)
CREATE TABLE v40235 (v40236 INT, v40237 INT, v40238 INT CONSTRAINT x4 CHECK (v40238))
CREATE TABLE v40239 (v40240 INT[], v40241 USER-DEFINED[])
CREATE TABLE v40242 (v40243 dcomptype UNIQUE, v40244 VARBIT(16), v40245 recur1[], v40246 xid, CHECK (CAST((v40246, v40243) AS at_tab1) = CAST((1, '42') AS at_tab1)))
CREATE TABLE v40247 (v40248 TEXT DEFAULT 'text', v40249 INT UNIQUE)
SELECT * FROM (VALUES (-CAST(61866666 AS INT), CAST(6410818 AS INT)), (CAST('ffff:8566:f84:5867:47f1:7867:d2ba:8a1a/69' AS INET))) AS x0
SELECT * FROM v40195 AS x0
SELECT * FROM (VALUES ('PS.base.b6', 'PF0_1', '', 'WS.002.3b'), (ROW(1, 2, 3)), ('"null"')) AS x0(x1, x2, x3)
SELECT * FROM v40071 AS x0
SELECT * FROM (VALUES (CAST('-infinity' AS TIMESTAMP)), (CAST('1995-08-06 12:30:15' AS TIMESTAMP)), (CAST('infinity' AS TIMESTAMP))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST(10994579406848 AS DECIMAL))) AS x0
CREATE TABLE v40250 (v40251 anyarray, v40252 BIT, v40253 VARCHAR(32) NOT NULL, v40254 INT NULL /* NOT NULL in the domain cannot be overridden */, v40255 INT CHECK (NOT v40251 IS NULL AND v40252 = 7))
CREATE TABLE v40256 (v40257 INT, v40258 VARCHAR(71), v40259 CHAR(30), v40260 DECIMAL(9, 2), v40261 SMALLINT, v40262 BIGINT, v40263 DOUBLE PRECISION, v40264 TIME, v40265 TIMETZ, v40266 TIMESTAMP, v40267 TIMESTAMPTZ, v40268 DATE, v40269 xml, v40270 testxmldomain, v40271 BOOLEAN, v40272 BYTEA, v40273 TEXT)
CREATE INDEX v40274 ON v40000(ABS(v39955) NULLS FIRST) WHERE v39955 % 2 = 0
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM v39885 AS x1
SELECT * FROM (VALUES (CAST(NULL AS INTERVAL)), ('5 month 7 day 46 minutes'), ('1 year 7 day 46 minutes'), ('1 year 7 month 20 day 46 minutes'), ('5 month'), ('17 year 11 month 7 day 9 hours 46 minutes 5 seconds')) AS x0
SELECT * FROM UNNEST(ARRAY[1.0]) AS x0(x1)
SELECT * FROM (VALUES (CAST(NULL AS macaddr)), ('08:00:2b:01:02:04'), ('08:00:2b:01:02:04'), ('e2:7f:51:3e:70:49'), ('d6:a9:4a:78:1c:d5'), ('ea:29:b1:5e:1f:a5')) AS x0
SELECT * FROM (VALUES (TWO_INTS_MULTIRANGE(TWO_INTS_RANGE(ROW(1, 2), ROW(3, 4)))), (TWO_INTS_MULTIRANGE(TWO_INTS_RANGE(ROW(5, 6), ROW(7, 8))))) AS x0
SELECT * FROM (VALUES ('oidcol', 'oid', '{>, >=, =, <=, <}', '{0, 0, 8800, 9999, 9999}', '{100, 100, 1, 100, 100}'), (1, 10, 'tgt1'), ('h7', 'forbidden'), (3, 5, '-60302029489319384367663884408738513110.66683195868931664491302527038538338065260819361151478340212147889934633981101279593065290940544218360883531149731823374304151252289014494378769385157204705433009477214625880056478643611622410268943757215673170753460135411513114716313801477916713433956086133878890802448531292334570886746283905390661877220497842493537338035961123751393889400517474762491881277080205381424363695095196058838349029211365212855028824622924678684631803808000307050416047072513406855040715556454205065332997338225626635780147287003130754254277103928406089109802521803537038957372612837169223905290912251006321930223154562110264217937')) AS x0
CREATE INDEX v40275 ON v40129((SRO_IFUN(v40132) + SRO_IFUN(0)) NULLS FIRST)
CREATE INDEX v40276 ON v39818(v39820 x1 NULLS FIRST)
SELECT * FROM (VALUES (CAST('foocover' AS REGCLASS))) AS x0
CREATE INDEX v40277 ON v40247((v40248 * v40249) NULLS FIRST)
CREATE INDEX v40278 ON v39987 USING gist(v39988 NULLS FIRST) WITH (fillfactor=9)
CREATE INDEX v40279 ON v39859(X('x') NULLS FIRST)
CREATE INDEX v40280 ON v39915(v39916 NULLS FIRST) WHERE PREDICATE_STABLE()
SELECT * FROM (VALUES (66, 1, TRUE), ('77504.53913926', '[(1,2),(1,2)]', 4950912855330343670), (45678, FALSE, 42)) AS x0
SELECT * FROM (VALUES (1), (1), (1), (1)) AS x0(x1)
SELECT * FROM UNNEST(CAST('{"", "a", "ab", "abc", "abcd", "b", "A", "AB", "ABC", "ABc", "ABcD", "B"}' AS TEXT[])) WITH ORDINALITY AS x0(x1)
SELECT * FROM (VALUES (2, 20), ('dddd'), (1036831949), (1, 1, 0, '1'), (4, 'c么t茅'), ('valid, needs mapping function to convert to GB18030')) AS x0
SELECT * FROM (VALUES (1, 2), (2, 3)) AS x0
CREATE TABLE v40281 (v40282 INT REFERENCES x3 ON DELETE CASCADE, v40283 INT)
CREATE TABLE v40284 (v40285 INT, "v40286" dcheck_ign_err2, v40287 INT)
CREATE INDEX v40288 ON v40195((v40196 = 1) NULLS FIRST)
CREATE INDEX v40289 ON v40008((v39957 = 1) NULLS FIRST)
CREATE INDEX v40290 ON v40122(LEFT(v40123, 3) NULLS FIRST)
CREATE INDEX v40291 ON v39945((v39947 * 3) NULLS FIRST)
SELECT * FROM UNNEST(CAST('{"", "a", "ab", "abc", "abcd", "b", "A", "AB", "ABC", "ABc", "ABcD", "B"}' AS TEXT[])) WITH ORDINALITY AS x0(x1)
SELECT * FROM (VALUES (ROW(1, 2)), (ROW(3, 4))) AS x0
CREATE INDEX v40292 ON v39818(v39819 NULLS FIRST) WHERE v39819 <> '11111111111111111111111111111111'
CREATE INDEX v40293 ON v40034(JSON_QUERY(v40036, '$.a ? (@.time() < $.time_tz())') NULLS FIRST)
CREATE INDEX v40294 ON v39856 USING spgist(TEXTCAT(v39819, v39820) NULLS FIRST) WITH (oids=auto)
CREATE INDEX v40295 ON v39962(v39964 NULLS FIRST, (v39963 + v39963) NULLS FIRST, v39965 NULLS FIRST)
CREATE TABLE v40296 (v40297 test_typex CHECK ((v40298).x4 > 0), v40298 dcheck_ign_err2)
CREATE TABLE v40299 (v40300 VARCHAR(4))
CREATE TABLE v40301 (v40302 INT, v40303 TEXT COLLATE v40302 REFERENCES x4 (x5) ON UPDATE CASCADE)
CREATE TABLE v40304 (v40305 rposint GENERATED BY DEFAULT AS IDENTITY (START WITH 5 INCREMENT BY 5))
UPDATE v39958 AS x1 SET x4.x1.v39961 = 1 WHERE v39960 IN (1, 2)
UPDATE v40054 AS x1 SET v40055 = x1.v40055 WHERE x1.v40055 IN ('idxpart1_c', 2)
UPDATE v40081 AS x1 SET v40082 = 11 WHERE (COUNT(*) FILTER(WHERE v40082 < 0.01)) > 1000
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40071 AS x0 SET v40072 = GREATEST(x0.v40073, x0.v40073) WHERE COALESCE(x0.v40073, 1) > 0
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v40140 AS x1 SET v40120[-4] = 'stats_ext_tbl' WHERE v40120 = 'tree'
UPDATE v39818 AS x0 SET x0.v39820['a']['0'][-8] = '1' WHERE v39819 > 116
UPDATE v40029 AS x0 SET v40031[1] = '2.2'
SELECT * FROM (VALUES (11, 12), (13, 15), (16, 20)) AS x0
CREATE TABLE v40306 (v40307 INT NOT NULL GENERATED ALWAYS AS IDENTITY) PARTITION BY RANGE(x2, ABS(x4), x3)
CREATE TABLE v40308 (v40309 INT, v40310 INT, v40311 INT CHECK (v40311 < 5), PRIMARY KEY (v40309 NULLS FIRST, v40310 NULLS FIRST)) PARTITION BY LIST((CAST(ROW(x7, x8) AS partitioned)))
SELECT * FROM v40226 AS x0
UPDATE v39987 AS x1 SET v39988[NULL : 1] = '{"can''t assign"}'
UPDATE v39864 AS x1 SET ('bugle', v39865 + 11, v39865) = (x1.v39865)
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v40299 AS x1 SET v40300 = CAST('2' AS INT) * CAST('2' AS SMALLINT) WHERE v40300 = 'Europe'
UPDATE v39980 AS x1 SET v39981 = DATERANGE('2018-01-02', '2018-02-20') WHERE v39981 = 2
CREATE VIEW v40312 AS SELECT x6.v40093, SIN(x6.v40093) AS x3, x6.v40093, COS(x6.v40093) AS x5 FROM v40092 AS x6 WHERE x6.v40093 <> 0 ORDER BY ABS(x6.v40093) NULLS FIRST
CREATE VIEW v40313 AS SELECT * FROM (VALUES (1, ARRAY[10, 20]), (2, ARRAY[20, 30])) AS x2
CREATE VIEW v40314 /* fail, disallowed        CREATE TABLE abc (               a serial,               b int UNIQUE        ) */ AS SELECT * FROM v40247 AS x1 WHERE SNOOP(x1.v40249)
SELECT * FROM (VALUES (CAST('2014-10-26 02:00:00 Europe/Moscow' AS BIGINT)), (953267988), ('London', 7556900), ('\x92bedd', 'valid (in SHIFT_JIS)'), (CAST(10736893951 AS BIGINT)), (CAST(10736893952 AS BIGINT(TIMESTAMP))), (0, 20), ('+ infinity'), (CAST(x2 AS TIMESTAMP)), (CAST('-4' AS SMALLINT))) AS x0(x1)
SELECT * FROM (VALUES (4607182418800017394), (CAST('1 2' AS BIGINT)), (5, 9, '-35812445701642379.972368737320206275515144213236752803936806738624588812089615098329765811617509505790110909629109400553415312470540217508070421816878544125783329593128638405659896184248784794258084116406472768709113030915308410565617764394827427154923321461158387012978726512246146545834669665093228316853342805604075936530371665576147966721599968786161939347726656168798065647411457701453987215491345496003650288850096338695703984042549594979897253521041581573388369367579323607093487743440894765114619634001789457486407909224339065748496715380572175183589195611952939575073075140094901024063428239223964510824958346570603142906309198033196987949067156046076497974760641964978711558209708743776024313916111738542765749928287600981397080809041007714387564206594515733287925008053261840295560398311905155157989225181164097547541'), (CAST(10485248 AS CHAR(100))), (1342577734), (14076000635346485252), (7, 9, '-107955289.045047420'), ('2016-08-4', 'from pitest2'), (CAST('{[3,12]}' AS NUMMULTIRANGE)), (8, 5, '-13.017101389051085341042057308965769356145255575582875626848796382322826525772114256699384710400140437710569924703769685567402446691691210934185000959063158239023412379691360587119206695513775971704926722817528818197919265145207032750407924774510773427697188520818450702875142190949766251178733262143962213111236591970766836685919581025629742334704854852196126735685421250263035895756028805974153787560164935038227108975229771590754808331856162035119882347418116049174638416621093907738608991987582465865527947015457540650512339263071898410531735438556948115098562123055444965056347091625748703503220861221718449714020622377233272042277814766996198081939221253025243417993701684007826177845003391944496774674489538520354606358872276671998045196738090133576377830721671972381371985771591052597345572374064920279182')) AS x0(x1, x2)
DROP TABLE v40103
DROP TABLE v40041
UPDATE v39818 AS x1 SET v39820 = v39819 || ' notes added by merge8 '
UPDATE v39856 AS x1(x3 domain4, x4 insert_pos_ints, x5 domain4) SET v39819 = 'WS.not.there'
CREATE VIEW v40315 AS SELECT SUM(x3.v39991) AS x2 FROM v39989 AS x3
CREATE VIEW v40316 AS SELECT CAST(x1.v40218 AS dom) FROM v40217 AS x1
UPDATE v40008 AS x1 SET v39955 = v39957 * v39957 WHERE COALESCE(v39956, v39957) = 4
UPDATE v39962 AS x0 SET v39963 = 'zzzzz' WHERE v39965 = '[5,6)' AND v39964 = DATERANGE('2018-02-01', '2018-03-01')
UPDATE v39818 AS x1 SET v39820 = DATERANGE('2000-01-01', '2000-04-01') WHERE v39820 = 'toasttest'
UPDATE v40081 AS x1 SET v40082 = v40082 * -1 WHERE x1.v40082 = 3 AND x1.v40082 = x1.v40082 AND x1.v40082 = x1.v40082 AND F_LEAK(x1.v40082) AND F_LEAK(x1.v40082)
CREATE INDEX v40317 ON v40122(v40124 NULLS FIRST, (v40123 + v40123) NULLS FIRST, v40123 NULLS FIRST)
CREATE INDEX v40318 ON v40122(JSON_QUERY(v40123, 's8') NULLS FIRST)
UPDATE v40054 AS x1 SET v40055 = GREATEST(v40055, x1.v40055) WHERE v40055 > CAST('1997-01-02' AS TIMESTAMP)
UPDATE v40008 AS x1(x3 ARRAY, x4 ARRAY, x5 ARRAY) SET v39957 = GREATEST(x1(x3 ARRAY, x4 ARRAY, x5 ARRAY).v39957, x1(x3 ARRAY, x4 ARRAY, x5 ARRAY).v39955) WHERE v39957 > -2147483647
UPDATE v39859 AS x0 SET v39862 = '{[2020-01-01,2021-01-01)}' WHERE x0.v39863 = 0
UPDATE v39942 AS x1 SET v39944 = CAST('9223372036854773760' AS INT) * CAST(CAST(8e18000 - CAST(1 AS DOUBLE PRECISION) / 9e9000 - 1 AS INT) AS DECIMAL) WHERE v39944 > 100
CREATE INDEX v40319 ON v40224(JSON_QUERY(v40225, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST)
CREATE INDEX v40320 ON v39958((CAST(1 AS DOUBLE PRECISION) / v39960) NULLS FIRST) WHERE v39959 >= CAST('456' AS SMALLINT)
SELECT x2.v39988, x2.v39988 FROM v39987 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT x2.v39813, x2.v39813 FROM v39812 AS x2
SELECT * FROM (VALUES (1, ARRAY[10, 20]), (2, ARRAY[20, 30])) AS x0
SELECT * FROM v39915 AS x0
CREATE TEMPORARY TABLE v40321 (v40322 SMALLINT)
CREATE TEMPORARY TABLE v40323 (v40324 DECIMAL(0, 0), v40325 VARCHAR(800)) AS SELECT X(x3, x4, x5) FROM (VALUES (CAST(1 AS DOUBLE PRECISION)), (3), (5), (7)) AS x6
SELECT * FROM (VALUES (CAST(0 AS INT), CAST(0 AS INT)), (CAST(0 AS INT), CAST(6410818 AS INT)), (CAST(61866666 AS INT), CAST(6410818 AS INT)), (-CAST(61866666 AS INT), CAST(6410818 AS INT)), (CAST((-2147483648) AS INT), CAST(1 AS INT)), (CAST((-2147483648) AS INT), CAST(2147483647 AS INT)), (CAST((-2147483648) AS INT), CAST(1073741824 AS INT))) AS x0
CREATE VIEW v40326 AS SELECT x5.v40124, x5.v40123 FROM v40122 AS x5
INSERT INTO v40118 (v40119, v40120) VALUES (5, 3)
CREATE TABLE v40327 (v40328 TEXT UNIQUE, LIKE x2 INCLUDING INDEXES)
CREATE TABLE v40329 (v40330 TEXT DEFAULT 'testing')
CREATE VIEW v40331 AS SELECT x5.v40300, x5.v40300 FROM v40299 AS x5
CREATE VIEW v40332 AS SELECT x4.v40218, UPPER(x4.v40218) FROM v40217 AS x4
CREATE INDEX v40333 ON v40009((1 - count) NULLS FIRST)
CREATE INDEX v40334 ON v40299 USING brin(JSON_QUERY(v40300, '$.timestamp()') NULLS FIRST) WITH (oids=auto)
CREATE INDEX v40335 ON v39958 USING brin(v39960 NULLS FIRST) WITH (option_enum='two')
CREATE INDEX v40336 ON v40168(v40170 COLLATE "x1" NULLS FIRST)
DROP TABLE v39927
DROP TABLE v40129
DROP TABLE v40226
DROP TABLE v39857
CREATE TABLE v40337 (v40338 INT8RANGE[], v40339 INT REFERENCES x4 DEFERRABLE)
CREATE TABLE v40340 (v40341 INT, v40342 INT)
UPDATE v39942 AS x1 SET v39943 = -85 RETURNING RW_VIEW1_AA(v39943)
UPDATE v40195 AS x0 SET v40196 = -10
SELECT * FROM (VALUES (CAST(NULL AS pg_lsn)), ('16/B374D84'), ('30/B374D84'), ('255/B374D84'), ('25/B379D90'), ('900/F37FD90')) AS x0
SELECT * FROM (VALUES (1, 1e20), (2, 1)) AS x0
CREATE TABLE v40343 (v40344 INT DEFAULT 55)
CREATE TABLE v40345 (v40346 ENUM_TEST GENERATED ALWAYS AS IDENTITY)
CREATE VIEW v40347
CREATE VIEW v40348
CREATE INDEX v40349 ON v40122 USING hash(v40124 NULLS FIRST)
CREATE INDEX v40350 ON v40140 USING brin(BRINTEST_FUNC() NULLS FIRST)
CREATE INDEX v40351 ON v40343(v40344 NULLS FIRST, v40344 NULLS FIRST) INCLUDE (x2, x3)
DROP TABLE v39818
DROP TABLE v40329
SELECT * FROM (VALUES (CAST(NULL AS macaddr)), ('08:00:2b:01:02:04'), ('08:00:2b:01:02:04'), ('e2:7f:51:3e:70:49'), ('d6:a9:4a:78:1c:d5'), ('ea:29:b1:5e:1f:a5')) AS x0
SELECT * FROM (VALUES (1, 1, 10), (1, 1, 11), (1, 2, 12), (1, 2, 13), (1, 3, 14), (2, 3, 15), (3, 3, 16), (3, 4, 17), (4, 1, 18), (4, 1, 19)) AS x0
CREATE TABLE v40352 (v40353 INT, v40354 BIGINT, v40355 SMALLINT)
CREATE TABLE v40356 (v40357 INT, v40358 CHAR(15) COLLATE "x3")
CREATE TABLE v40359 (v40360 CHAR(2) DEFAULT LEFT(CAST(RANDOM() AS TEXT), 3) /* table rewrite should happen */)
CREATE TABLE v40361 (v40362 TEXT, v40363 INT)
CREATE INDEX v40364 ON v40061(v40063 NULLS FIRST) WHERE (UPPER('x') LIKE ('x' || (CAST('[0,1]' AS INT4RANGE))) AND (v40063 IN (0, 1) OR v40063))
CREATE INDEX v40365 ON v39856(JSON_QUERY(v39819, '$.a ? (@ < $.datetime())') NULLS FIRST)
CREATE INDEX v40366 ON v39859(v39862 NULLS FIRST) WHERE v39860 % 2 = 0
CREATE TABLE v40367 (v40368 TEXT GENERATED BY DEFAULT AS IDENTITY)
CREATE TABLE v40369 (v40370 POINT)
CREATE TABLE v40371 (v40372 INT PRIMARY KEY, v40373 INT, v40374 VARCHAR(10))
CREATE TABLE v40375 (v40376 USER-DEFINED(RAINBOW) /* fail */)
SELECT * FROM (VALUES ('a' COLLATE "x1"), ('b')) AS x0
SELECT * FROM (VALUES (CAST('1.2e3' AS jsrec)), ('12_000_000_000'), ('00:00'), ('(1.9999996,1.9999996),(1,1)'), (CAST(NULL AS OID))) AS x0(x1, x2, x3)
CREATE TABLE v40377 (v40378 INT REFERENCES x3 MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE, v40379 INT)
CREATE TABLE v40380 (v40381 VARCHAR(20) DEFAULT 3 /* fails */)
CREATE TABLE v40382 (v40383 UUID, v40384 INT PRIMARY KEY)
CREATE TABLE v40385 (v40386 SMALLINT GENERATED BY DEFAULT AS IDENTITY (START WITH 7 INCREMENT BY 5), v40387 TEXT) PARTITION OF x3 FOR VALUES FROM ('true', 'false', 0) TO ('true', 'false', 100)
CREATE TABLE v40388 (LIKE x1 INCLUDING ALL)
CREATE TABLE v40389 (LIKE x1 INCLUDING CONSTRAINTS)
CREATE TABLE v40390 (v40391 ddef5, v40392 rf_bug_status, FOREIGN KEY (x4, x5) REFERENCES x6 (x7, x8, x9))
CREATE TABLE v40393 (v40394 mycomptype, v40395 ddef2, FOREIGN KEY (x4, x5) REFERENCES x6 (x7))
CREATE TABLE v40396 (v40397 TEXT COLLATE "x5" GENERATED ALWAYS AS (v40400 COLLATE PG_UNICODE_FAST), v40398 line, v40399 VARCHAR(60), v40400 xid, CHECK (v40398 = 1 OR v40397 = NULL))
CREATE TABLE v40401 (v40402 INT, v40403 INT, v40404 CHAR(8), v40405 CHAR)
SELECT * FROM (VALUES ('day', '1 d'), ('hour', '1 h'), ('minute', '1 m'), ('second', '1 s'), ('millisecond', '1 ms'), ('microsecond', '1 us')) AS x0
SELECT * FROM (VALUES (CAST('0' AS DECIMAL)), ('-4.2'), ('4.2e9'), ('1.2e-5'), ('inf'), ('-inf'), ('nan')) AS x0
SELECT * FROM (VALUES (1, 'a'), (2, 'b'), (3, 'c')) AS x0
SELECT * FROM (VALUES (CAST('192.168.1.1/25' AS INET))) AS x0(x1, x2)
CREATE TABLE v40406 (v40407 TEXT, v40408 MONEY, v40409 INT GENERATED ALWAYS AS (v40410 * '1e200'), v40410 INT DEFAULT 0, v40411 myint CHECK (v40407 >= CAST('2007-01-01' AS DATE) AND v40409 < CAST('2007-02-01' AS DATE)))
CREATE TABLE v40412 (v40413 int8_tbl[], v40414 testdomain_p, v40415 DATE DEFAULT 0.2, v40416 connotnull NOT NULL, v40417 widget(18, 14))
CREATE INDEX v40418 ON v40008 USING rtree(x3.v39956 NULLS FIRST)
SELECT * FROM (VALUES (CAST('{0}' AS INT[])), ('{0,1,2,3,4}'), ('{17,18,19,20}'), ('{42,34,65,98}'), ('{550273,590027, 870273}'), ('{207112489, 807112489}')) AS x0
SELECT * FROM (VALUES ('PostgreSQL'), (1, NUMRANGE(1.1, 2.2, '()')), (66, 6, FALSE), (NULL, ROW(1, 2, 3)), (NULL, POINT(12, 12)), (CAST(10485247 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (CAST('{1,2}' AS INT[])), (CAST('{3,4}' AS INT[]))) AS x0
SELECT * FROM v40326 AS x0
SELECT * FROM (VALUES (1)) AS x0
SELECT * FROM (VALUES (-CAST(5.2 AS txid_snapshot)), (1266679808), (CAST(77 AS point)), (CAST('$.a.**{5 to last}.b' AS DOUBLE PRECISION))) AS x0
SELECT * FROM (VALUES (77, 1, FALSE), (2, 2, 1), (CAST(1000000 AS BIGINT)), (CAST(ARRAY['19620326', '19931223', '19970117'] AS TIMESTAMP[]))) AS x0
CREATE INDEX v40419 ON v40217 USING brin((SRO_IFUN(v40218) + SRO_IFUN(0)) NULLS FIRST)
CREATE INDEX v40420 ON v40352 USING spgist(v40354 NULLS FIRST) INCLUDE (x1)
SELECT * FROM (VALUES (CAST(10 AS DECIMAL)), (CAST(1000 AS DECIMAL)), (CAST(1000000 AS DECIMAL)), (CAST(1000000000 AS DECIMAL)), (CAST(1000000000000 AS DECIMAL)), (CAST(1000000000000000 AS DECIMAL)), (CAST(10.5 AS DECIMAL)), (CAST(1000.5 AS DECIMAL)), (CAST(1000000.5 AS DECIMAL)), (CAST(1000000000.5 AS DECIMAL)), (CAST(1000000000000.5 AS DECIMAL)), (CAST(1000000000000000.5 AS DECIMAL))) AS x0
SELECT * FROM (VALUES (2, 8, 0.3), (4532020583610935536, 'quince', 'Washington DC'), (BOX(TO_TSQUERY('5'), POINT(x1, x2 + 1)))) AS x0
CREATE INDEX v40421 ON v40217((v40218 || v40218) x2 NULLS FIRST)
CREATE INDEX v40422 ON v40034(v40036 NULLS FIRST) WITH (fillfactor=130)
CREATE INDEX v40423 ON v40352(v40354 NULLS FIRST) WHERE v40355 > 1000
SELECT * FROM (VALUES (1, 2, 3, 4, 5, 6)) AS x0
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[1.0])
SELECT * FROM UNNEST(ARRAY[CAST(0.36 AS TEXT), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a']) AS x0
SELECT * FROM v40000 AS x1
CREATE INDEX v40424 ON v40371(COALESCE(v40373, 1) NULLS FIRST)
SELECT * FROM (VALUES (0.25), (1, '{"b": 1}'), (1, 1, 'x'), ('Feb 29 17:32:01 1997', '31541679188064906.712574384704440356216787857626740375004266523720148374188511622980520374202725176835435173058936870163875556102907654264048353814040480579464700545975346621546520503928314632418705230212623378642743044255181848913683862360044189531298446109955034944189751302497670367665492719604026161836224535961347218522748523360100432275693829501972749859329753224444694962089604095212784768854310289429208671271394086829270986183171968944659703708706544668326267327938226750760690620258967209626420981505237183055363540806281098871221581265173394406715458619627534396065960117454160969749739483126059760636526242783235685190739315590041294766649891987044641492234243404608847939002062827210734973778130441825067858641461599799772535304379732674727995848518807202053316225824685704785148921785964036119338754973714515974054', 'x')) AS x0(x1, x2, x3)
SELECT * FROM (VALUES (CAST('2018-11-02 12:34:56' AS TIMESTAMPTZ)), ('2018-11-02 12:34:56.78'), ('2018-11-02 12:34:56.78901'), ('2018-11-02 12:34:56.78901234')) AS x0
CREATE INDEX v40425 ON v40343((CAST(ROW(v40344, v40344) AS test_type1)) NULLS FIRST)
CREATE TABLE v40426 (v40427 INT, v40428 INT, FOREIGN KEY (x3, x4) REFERENCES x5 (x6, x7))
CREATE TABLE v40429 (v40430 TEXT, v40431 INT, v40432 BOOLEAN)
CREATE TABLE v40433 (v40434 rf_bug_status DEFAULT (1 IN (1, 2)))
UPDATE v40371 AS x1 SET v40372[2] = ROW(v40373[2].x3, v40373[2].x4) WHERE x1.v40374 IN (1, 5)
UPDATE v40179 AS x1 SET v40181 = 'v' WHERE v40187 IN (CAST('parent' AS REGCLASS), CAST('child1' AS REGCLASS))
UPDATE v40081 AS x1 SET v40082 = '[4,5)' WHERE x1.v40082 = x1.v40082
UPDATE v40034 AS x0 SET x0.v40035 = GREATEST(x0.v40035, x0.v40035) WHERE v40035 < 1000
UPDATE v40122 AS x0 SET v40124 = v40123 || v40123 WHERE CAST(v40123 AS TEXT) = CAST(CAST('(10,10)' AS point) AS TEXT)
UPDATE v39987 AS x0 SET v39988 = v39988 + 1000 WHERE (COUNT(*) FILTER(WHERE v39988 < 0.01)) > '0' RETURNING x4.x0.v39988, x0.v39988, x0.v39988
CREATE TABLE v40435 (v40436 CHAR(0) CHECK (LENGTH(v40436) < 7))
CREATE TABLE v40437 (v40438 TEXT, v40439 INT NOT NULL DEFAULT 0, CONSTRAINT x3 CHECK (LENGTH(v40438) > 0))
CREATE TABLE v40440 (PRIMARY KEY ( NULLS FIRST) DEFERRABLE) RETURNS DOUBLE PRECISION LANGUAGE internal STABLE STRICT
CREATE TABLE v40441 (v40442 pg_catalog.bool)
CREATE INDEX v40443 ON v40061(COALESCE(v40064, 1) NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
CREATE INDEX v40444 ON v40382(v40384 NULLS FIRST, v40384 NULLS FIRST, v40383 NULLS FIRST)
SELECT * FROM (VALUES (CAST(NULL AS oidvector)), ('0 1 2 3 4'), ('17 18 19 20'), ('42 43 42 45'), ('550273 550273 570274'), ('207112489 207112499 21512 2155 372325 1363252')) AS x0
SELECT * FROM (VALUES ('+1'), ('+1:'), ('+1:0'), ('+100'), ('+1:00'), ('+01:00'), ('+10'), ('+1000'), ('+10:'), ('+10:0'), ('+10:00'), ('+10:00:'), ('+10:00:1'), ('+10:00:01'), ('+10:00:10')) AS x0
SELECT * FROM (VALUES (INTERVAL '-infinity'), (INTERVAL '2 MONTHS'), (INTERVAL 'infinity')) AS x0
SELECT * FROM (VALUES (CAST(ROW(CAST('10' AS varbit)) AS ct1)), (CAST(ROW(CAST('11' AS varbit)) AS ct1))) AS x0
INSERT INTO v40122 (v40124) VALUES ('')
INSERT INTO v40371 (v40373) VALUES ('0')
CREATE INDEX v40445 ON v40352(v40353 NULLS FIRST, (v40355 + v40355) NULLS FIRST, v40353 NULLS FIRST)
CREATE INDEX v40446 ON v40081((v40082 * v40082) NULLS FIRST)
CREATE INDEX v40447 ON v40343(JSON_QUERY(v40344, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST)
CREATE INDEX v40448 ON v40217(v40218 NULLS FIRST)
SELECT * FROM (VALUES (CAST(NULL AS JSONB)), ('獗ト�'), ('1997-02-10 17:32:01 PST'), (0, 6, '-93901.57763026')) AS x0(x1, x2)
CREATE INDEX v40449 ON v39859 USING spgist(v39860 NULLS FIRST) INCLUDE (x2)
CREATE INDEX v40450 ON v40081(v40082 x1 NULLS FIRST) WITH (x2.x3=2)
UPDATE v40299 AS x1 SET v40300 = v40300 * 100 WHERE v40300 = x1.v40300
UPDATE v40313 AS x1 SET column2 = 'root!' WHERE column1 = 'aaaa'
CREATE INDEX v40451 ON v39958(JSON_QUERY(v39961, '$.datetime()') NULLS FIRST)
CREATE INDEX v40452 ON v40361((v40362 * 3) NULLS FIRST)
CREATE INDEX v40453 ON v40092(v40093 NULLS FIRST, v40093 NULLS FIRST) INCLUDE (x2)
CREATE INDEX v40454 ON v39856 USING spgist(UPPER(v39820) x3 NULLS FIRST) WITH (FASTUPDATE=on)
CREATE INDEX v40455 ON v39945(v39948 NULLS FIRST, v39948 NULLS FIRST)
CREATE TEMPORARY INDEX v40456 ON v39864 USING brin(v39865 x2 NULLS FIRST, v39865 x3 NULLS FIRST, v39865 x4 NULLS FIRST, v39865 x5 NULLS FIRST, v39865 x6 NULLS FIRST, v39865 x7 NULLS FIRST, v39865 x8 NULLS FIRST, v39865 x9 NULLS FIRST, v39865 x10 NULLS FIRST, v39865 x11 NULLS FIRST, v39865 x12 NULLS FIRST, v39865 x13 NULLS FIRST, v39865 x14 NULLS FIRST, v39865 x15 NULLS FIRST, v39865 x16 NULLS FIRST, v39865 x17 NULLS FIRST, v39865 x18 NULLS FIRST, v39865 x19 NULLS FIRST, v39865 x20 NULLS FIRST, v39865 x21 NULLS FIRST) WITH (pages_per_range=1)
UPDATE v39945 AS x1 SET x5.x4.x1.v39947 = UNNEST(GENERATE_SERIES(4, 9)) WHERE x1.v39948 = 1492
UPDATE v40247 AS x1 SET v40249 = UNNEST(GENERATE_SERIES(4, 9)) WHERE v40249 = 2502
UPDATE v40029 AS x1 SET v40031 = 'x' WHERE v40030 IN (CAST(1 AS myint), CAST(2 AS myint), CAST(3 AS myint), CAST(4 AS myint), CAST(5 AS myint), NULL)
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40429 AS x1 SET v40430 = 'Japon' WHERE v40431 = 1 OR v40431 = 1
UPDATE v40313 AS x1 SET column2 = 'eee' WHERE x1.column2 = 1 AND x1.column1 = x1.column2
UPDATE v40247 AS x0 SET v40248 = 'THREE'
UPDATE v39859 AS x0 SET v39861 = TO_TSQUERY('{"a": [2, 3, 4]}', CAST(UPPER(v39863) AS DATE))
UPDATE v40008 AS x1 SET v39957 = ROW(1, 1.1)
UPDATE v39864 AS x1 SET v39865[2147483646 : 2147483647] = ARRAY[4, 2]
CREATE INDEX v40457 ON v39980(v39981 NULLS FIRST) INCLUDE (x2)
CREATE INDEX v40458 ON v40441(JSON_QUERY(v40442, 'insert_seq') NULLS FIRST)
CREATE TABLE v40459 (v40460 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40461 INT, v40462 TEXT NOT NULL DEFAULT 'stuff', v40463 TEXT, v40464 TEXT)
CREATE TABLE v40465 (v40466 INT CHECK (v40468 IN (1)), v40467 TEXT, v40468 TEXT)
SELECT * FROM v39859 AS x1
INSERT INTO v39859 (v39863) VALUES ('-.09393717604145131637')
UPDATE v40299 AS x1 SET v40300 = 'Europe/London' WHERE (v40300).x3 > 1
CREATE TABLE v40469 (v40470 int8_tbl[], v40471 INT GENERATED ALWAYS AS IDENTITY REFERENCES x6 (x7), v40472 int8alias2 DEFAULT -1 DEFAULT (v40470), CONSTRAINT x4 CHECK (v40471 > 1), CHECK (v40472 = 2))
CREATE TABLE v40473 (v40474 INT CONSTRAINT x4 CHECK (v40476 > 1), v40475 INT, v40476 INT)
SELECT * FROM (VALUES (CAST('{[1,2]}' AS NUMMULTIRANGE))) AS x0
CREATE INDEX v40477 ON v40473 USING spgist(v40476 NULLS FIRST) WITH (fillfactor=75)
CREATE INDEX v40478 ON v40231(v40232 NULLS FIRST) INCLUDE (x2, x3)
UPDATE v40359 AS x1 SET v40360[ : 3] = '{11, 12, 13}' RETURNING CAST(x1.v40360 AS OID), x1.v40360, x1.v40360, x1.v40360, CAST(x1.v40360 AS REGCLASS), x1.v40360, v40360, v40360, CAST(x1.v40360 AS TEXT) || '->' || CAST(x1.v40360 AS TEXT) AS x11
UPDATE v40118 AS x0 SET v40121 = CASE WHEN v40120 >= 3 THEN ((v40119 = 2) OR (v40121 = 2)) ELSE (RANDOM() * :maxoffset) END WHERE v40121 = 'schema_to_reindex'
INSERT INTO v40299 ("v40300") VALUES ('  123   '), ('[5,6)'), ('boxcol'), (100000007), ('+4567890123456789')
INSERT INTO v40008 (v39956) VALUES ('root'), ('4567890123456789'), ('123'), (2.3e-13), ('+4567890123456789')
SELECT * FROM (VALUES (-16379), (-16378), (-1234), (-789), (-45), (-5), (-4), (-3), (-2), (-1), (0), (1), (2), (3), (4), (5), (38), (275), (2345), (45678), (131070), (131071)) AS x0
SELECT * FROM v40231 AS x1
UPDATE v39958 AS x1(x3 ARRAY, x4 ARRAY, x5 ARRAY) SET v39960 = v39961 * 10 RETURNING 'P1:' || x1(x3 ARRAY, x4 ARRAY, x5 ARRAY).v39960, 'P2:' || x1(x3 ARRAY, x4 ARRAY, x5 ARRAY).v39960
CREATE INDEX v40479 ON v39954(JSON_QUERY(v39955, 'view_of_joins_2a') NULLS FIRST)
CREATE INDEX v40480 ON v39980 USING brin(v39981 NULLS FIRST, v39981 NULLS FIRST)
SELECT * FROM (VALUES (CAST('0' AS DECIMAL)), ('1'), ('-1'), ('4.2'), ('-7.777'), ('inf'), ('-inf'), ('nan')) AS x0
SELECT * FROM (VALUES ('a', 'b')) AS x0
UPDATE v40224 AS x1 SET v40225 = v40225 || '->P2' RETURNING v40225, v40225 + v40225
UPDATE v40081 AS x1 SET v40082 = v40082 || v40082 RETURNING 'P1:' || x1.v40082, ' trig modified' || x1.v40082
UPDATE v39942 AS x1 SET v39943 = 'Japon' WHERE v39944[2] IS NULL
UPDATE v40299 AS x0 SET v40300 = 'update 5' WHERE RW_VIEW1_AA(v40300) = 2
UPDATE v40369 AS x0 SET v40370[8] = 'eight' WHERE v40370 = 'aaaa'
CREATE INDEX v40481 ON v40299((v40300 + 3 + 1) NULLS FIRST)
CREATE INDEX v40482 ON v40401(JSON_QUERY(v40402, '$.a ? (@.timestamp(2) < $.timestamp(3))') NULLS FIRST)
CREATE TABLE v40483 (v40484 cidr, v40485 TIMESTAMP, FOREIGN KEY (x3, x4) REFERENCES x5 (x6, x7))
CREATE TABLE v40486 (v40487 posint)
SELECT x4.v40474, x4.v40474 FROM v40473 AS x4
SELECT x4(x5 ARRAY, x6 insert_pos_ints, x7 DECIMAL(64, 60), x8 ARRAY).v39914, x4(x5 ARRAY, x6 insert_pos_ints, x7 DECIMAL(64, 60), x8 ARRAY).v39914 FROM v39913 AS x4(x5 ARRAY, x6 insert_pos_ints, x7 DECIMAL(64, 60), x8 ARRAY)
CREATE TABLE v40488 (v40489 TEXT, v40490 INT, v40491 point, v40492 INT, v40493 NAME)
CREATE TABLE v40494 (v40495 TIMESTAMPTZ PRIMARY KEY)
DROP TABLE v40299
DROP TABLE v39858
CREATE TEMPORARY TABLE v40496 (v40497 NAME)
CREATE TABLE v40498 (v40499 INT, v40500 macaddr) PARTITION OF x3 FOR VALUES FROM (0) TO (250)
SELECT * FROM v40168 AS x1
SELECT * FROM UNNEST(ARRAY[CAST(0.36 AS TEXT), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a']) AS x0
CREATE VIEW v40501 AS SELECT * FROM (VALUES (1), (2), (NULL), (4)) AS x1
INSERT INTO v40313 (column2) VALUES (DATERANGE('2018-01-15', '2018-02-01')), ('[2,3)')
CREATE TABLE v40502 (v40503 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY, v40504 INT CHECK (v40504 < 10))
CREATE TABLE v40505 (v40506 BOOLEAN, v40507 INT, UNIQUE (x4, x5), v40508 DOUBLE PRECISION)
CREATE VIEW v40509 AS SELECT x6.v39956, x6.v39956 FROM v39954 AS x6
CREATE VIEW v40510 AS SELECT * FROM ROWS FROM (x2 AS x3) WITH ORDINALITY AS x1
CREATE INDEX v40511 ON v40371((v40374 COLLATE "x2") NULLS FIRST)
CREATE INDEX v40512 ON v40140 USING hash(v40119 x2 NULLS FIRST) WITH (not_existing_option=2)
CREATE INDEX v40513 ON v40029(v40030 NULLS FIRST, (v40031 + 0) NULLS FIRST) INCLUDE (x2)
DROP TABLE v40380
DROP TABLE v40122
DROP TABLE v40441
DROP TABLE v40382
CREATE TABLE v40514 (v40515 INT NOT NULL, v40516 INT, v40517 INT NOT NULL, v40518 INT)
CREATE TABLE v40519 (v40520 INT, v40521 testdomain_p)
CREATE TABLE v40522 (x1, x2)
CREATE TABLE v40523 (v40524 CHAR(10), v40525 INT)
UPDATE v39945 AS x1 SET v39946 = -v39948[1] RETURNING RW_VIEW1_AA(v39947)
UPDATE v40359 AS x0 SET v40360 = -5 RETURNING MERGE_ACTION()
SELECT * FROM v39942 AS x0
SELECT * FROM (VALUES (CAST('fooindex' AS REGCLASS))) AS x0
CREATE TABLE v40526 (v40527 rf_bug_status)
CREATE TABLE v40528 (v40529 INT PRIMARY KEY, v40530 INT REFERENCES x6 (x7), v40531 INT NOT NULL, v40532 NAME, v40533 TEXT)
CREATE TABLE v40534 (v40535 TIMESTAMPTZ(32))
CREATE TABLE v40536 (v40537 CHAR(0) REFERENCES x3 DEFERRABLE INITIALLY IMMEDIATE)
CREATE VIEW v40538
CREATE VIEW v40539
CREATE INDEX v40540 ON v40217(v40218 NULLS FIRST) WHERE v40218 = 'regress_test_inherit'
CREATE INDEX v40541 ON v40168(v40171 NULLS FIRST) WHERE v40170 > 1000
CREATE INDEX v40542 ON v40473(v40474 NULLS FIRST, v40474 NULLS FIRST) WHERE v40475 <> '3'
DROP TABLE v40247
DROP TABLE v40008
DROP TABLE v39856
DROP TABLE v40217
SELECT * FROM (VALUES (1), (1)) AS x0(x1)
SELECT * FROM (VALUES (1065353212), (1)) AS x0(x1)
SELECT * FROM (VALUES (484990182159328900690402236933516249572671683638747490717351807610531884491845416923860371219625151551889257298200816555016472471293780254009492949585031653913930735918829139712249577547959394351523545901788627247613322896296041868431769047433229466634098452564756860190085118463828382895145244362033728480588969626012192733802377468089120757046364393407262957242230928854711898925295251902007136232994524624903257456111389508582206404271734668422903183500589303866613158037169610592539145461637447957948521714058034772237111009429638870236361143304703683377693378577075353794118557951847394763531830696578809001981568860219578880229402696449243344235099860421846016326538272155937175661905904288335499593232232926636205909086901191153907183842087577811871344870731324067822883041265129394268082883745408414994.8967939438561591657171240282983703914075472645212002662497023142663831371447287624846942598424990784971781730103682951722370983277124599054059027055336437808366784501932987082321905202623642371063626378290734289114618092750984153422293450048717769065428713836637664433167768445609659527458911187829232316677137895259433038764404970599325009178297626038331436654541552998098529141205301472138026818453893127265938030066392881979113522757891639646670670272542401773230506961559808927249585675430838495658225557294666522469887436551840596777627408780618586500922973500018513068499587683746133637919751545157547095670767246977244726331271787622126889459658539988980096764323712767863722912919120929339399753431689512753214200090670880647731689804555417871258907716687575767185444541243606329768784843125926070743277339790277626515824924290352180761378846035233155198504033292692893297993698953705472933411199778880561376633444249703838589180474329586470353212010427945060694794274109764269805332803290229, 1864.3702986939570026328504202935192533137907736189919154633800554877738455118081651650863235106905871352085850240570561347180517240105510505203972860921397909573687877993477806728098306202020229409548306695695574102950949468160529713610952021974630774784174851619325758380143625473386495586347322798415543385655090746985183329114860118551572428921774322172798724455202876781611633419444058398798142214904998877857425038669920064728855823072107227506485770367799671977282350083029452784747350395161797215115525867416898416360638482342253129160308632504217096916335590470843180746834864303790913372081974355613359678634194879425862536147988835528973291020680020540866655622823550861337486588647231688134992810403147262346312159819432914207194632564009749236609081399504118359354620598232725290537215007867979331582119891661859015726276335168158288396939655310210558566592649049602925182137256134162660116182293851038854455437841571331011002023088829768308520393956515509475418031437505751407687618234418262), (87190145885430429849953615409019208993240447426362428988181639909267773304254748257120061524000254226856815085523676417146197197996896030672521334101413071112068202429835905642444187493717977611730127126387257253646790849384975208460867137315507010888782632024640844766297185244443116696943912406389670302370461137850160539373600494054874979342373255280815156048999900951842673141766630630919020492255966628630634124452614590400422133958133100159154995520080124736657520969784129924799670552560034302960877087853678350801769339861812435411200669026902417951572668727488315537985378304242438181615160041688723201917323705450185975141141262578884689500612295576288125956289035673242989906973367691922065122033180281670221390667818909912035903387888639331486823729897326624516015340.0330856710565117793999512551468220085711713631167607285185762046751452975325645379302403715842570486302993296501788672462090620871511446272026693318239212657949496275318383141403236705902077406660768573015707706831878445598837931116223956945944726162551477136715847593742032488181481888084716920605114101902724395659898621880016853548602514706686907951229872573180602614761229992106144727082722940736406782659562775289407005631298246624198606031298081220736931229256511054595028182057216042683060059115371651410352645266000330509331097811566633211452233019461903115970558624057877018778178814946285827512359903934291318219271464841957435711594154280905473802599888081783098187210283997106131616471807951265003903143099667366508222327805543948921694362089860577380749774036318574113007382111997454202845559941557812813566442364810680529092880773126707073967537693927177460459341763934709686530005721141046645111784404932103241501569571235364365556796422998363930810983452790309019295181282099408260156, 1793.5767085750017553306932533574391150814202249805881581227430032600579405884415934520704053351781361105595296647510475380766428668443641914861849764330704062323054023252886955844207807229267936432730818329225450152491146839618683772020068682795388746108876393249306737841247788224204701299467519965182171772253974884845661168860422489046657965359832930382114760565628765599962013955588754803194908990025689040598990346417563277021386852342928910383706995866844541160576254266641602065102228267316550706943783591722246885978355472097314691737807509436806788803362444745551013400341861820755594413819894154786253014501454443272120342005711761286524843010157182464200556865694401941794983935172457481497909987740544409272349152397774548604845897687504977786762391359552407068124283290504752932824699865504970420939586707791994870941813718246825616335675307740641350673558328821461530563823677144691877374809441673507467507447891562257806191361453045937798278733402269265623588493124129181374135958668436774), (93936642222690597390233191619858485419795942047468396309991947772747208870873993801669373075421461116465960407843923269693395211616591453397070258466704654943689268224479477016161636938138334729982904232438440955361656138189836032891825113139184685132178764873033678116450665758561650355252211196676137179184043639278410827092182700922151290703747496962700158844772453483316974221113826173404445159281421213715669245417896170368554410830320000019029956317336703559699859949692222685614036912057150632902650913831404804982509990655560731349634628713944739168096272097122388116038119844786988276635032016787352796502360718569977397214936366251320294621522016.6483354941025384161536675750898007896744690911429670830432784905421638721478353275821072200938900938046264210604940707974410950770029535636602548377806284157951164875821446035013896786653932045182167021839184824627082391478016195098055107001433336586881395912782883663046617432598969149948351689103230162742769845955320418573803127107923535948653168889411316007796459064267436246637115946581149511513369842911210359447262641996566147462977170742544980481275049898092152042927981394239266559286915303786701737610786594006685748456635797125029722684151298695274097006242412384086302106763844070230264910503179385988626477852818174114043927841085089058972074427820150462261941575665882880501074676800316585217150509780489224388148722603385921057007086785238310735038314861960410473809826927329368597558806004392175746233568789445929554890241140656324160187253042639339549705859147930476532359840809944163908006480881926041259363654863689570520534301207043189181147254153307163555433328278834311658232337, 1510.4332713542154696529645934345554302578243896764921637693542962119938599884313210100957753316832762996428481801312323020427109678979117469716796746760060470871840325255146954580681101106876674367471955788143763250819168311353856748872452260808797135108102729064040463343792765872545182299889360257515315869180266759715933989413256377582681707188367254513700731642913479683031478361835565783219287780434673712341147656477670848734998849030451414278832848680301511646182446524915091598080243532068451726548537866633622180283865668708517173065893429240665300584705585310049892047293928733753369421499719516009692095913169665213597158441636480707309244604139865130782756488091268094213446272360006907802989573582755585110277620911226015342778471352130366770729972784317323917141031824334355639769512749560550167491709646539950725523461943580211843652293561678342656010571108219244870234329176123205423872844099992204896411752620881541000940129833754169391528449211839693800724450201835161044717173715867437)) AS x0
SELECT * FROM (VALUES ('1'), ('"err"')) AS x0
CREATE TABLE v40543 (v40544 INT4RANGE, v40545 INT4RANGE, v40546 INT4RANGE)
CREATE TABLE v40547 (v40548 INT, v40549 INT, v40550 TEXT, v40551 INT)
CREATE TABLE v40552 (v40553 INT, v40554 CHAR)
CREATE TABLE v40555 (v40556 INT PRIMARY KEY, v40557 TEXT DEFAULT 'Unspecified', v40558 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL)
CREATE INDEX v40559 ON v40514(X('x') NULLS FIRST)
CREATE INDEX v40560 ON v39989 USING btree(JSON_QUERY(v39990, '$.time_tz()') NULLS FIRST, (v39991 + v39990) NULLS FIRST)
CREATE INDEX v40561 ON v40231((v40233 || v40233) NULLS FIRST)
CREATE INDEX v40562 ON v40502(v40504 NULLS FIRST) WHERE v40503 < 0
CREATE TABLE v40563 (v40564 TEXT[] COLLATE v40564)
CREATE TABLE v40565 (v40566 INT, v40567 TIMESTAMPTZ)
CREATE TABLE v40568 (v40569 bogus REFERENCES x2)
CREATE TABLE v40570 (v40571 JSONB CHECK (LENGTH(v40573) < 7), v40572 rf_bug_status, v40573 CHAR(3) CHECK (LENGTH(v40571) < 7))
CREATE TABLE v40574 (v40575 INT, v40576 BIGINT, v40577 SMALLINT)
CREATE TABLE v40578 (v40579 UNKNOWN /* fail */)
SELECT * FROM (VALUES (-16379), (-16378), (-1234), (-789), (-45), (-5), (-4), (-3), (-2), (-1), (0), (1), (2), (3), (4), (5), (38), (275), (2345), (45678), (131070), (131071)) AS x0
CREATE TABLE v40580 (v40581 domaintext)
CREATE TABLE v40582 (v40583 XML)
CREATE TABLE v40584 (LIKE x1 INCLUDING INDEXES)
CREATE TABLE v40585 (v40586 INT NOT NULL, v40587 INT PRIMARY KEY)
CREATE TABLE v40588 (v40589 INT, LIKE x2, CONSTRAINT x3 CHECK (NOT  IS NULL AND v40589 = 1))
CREATE TABLE v40590 (v40591 DATE NOT NULL, v40592 BIGINT, v40593 BIGINT)
SELECT * FROM (VALUES (1, 1.5), (2, 2.5), (3, NULL), (4, NULL)) AS x0
SELECT * FROM v40054 WITH ORDINALITY AS x1
SELECT * FROM (VALUES (CAST('{[1,2]}' AS NUMMULTIRANGE)), (CAST('{[2,3]}' AS NUMMULTIRANGE))) AS x0
SELECT * FROM (VALUES (1, 2, 3), (4, 5, 6)) AS x0
SELECT * FROM v40547 AS x1
SELECT * FROM (VALUES (CAST(10239 AS DECIMAL)), (CAST(10240 AS DECIMAL)), (CAST(10485247 AS DECIMAL)), (CAST(10485248 AS DECIMAL)), (CAST(10736893951 AS DECIMAL)), (CAST(10736893952 AS DECIMAL)), (CAST(10994579406847 AS DECIMAL)), (CAST(10994579406848 AS DECIMAL)), (CAST(11258449312612351 AS DECIMAL)), (CAST(11258449312612352 AS DECIMAL)), (CAST(11528652096115048447 AS DECIMAL)), (CAST(11528652096115048448 AS DECIMAL))) AS x0
CREATE TABLE v40594 (v40595 INT CHECK (v40597 IN (1)), v40596 TEXT, v40597 TEXT)
CREATE INDEX v40598 ON v40029(v40031 DESC NULLS LAST)
SELECT * FROM (VALUES (1, INT4RANGE(124, 124, '[]')), (1, ROW(NULL, NULL)), ('<(100,200),10> x'), (NULL, DATEMULTIRANGE(DATERANGE('2018-01-02', '2018-04-01'))), (4, '7799461.4119'), (NULL, NULL)) AS x0(x1, x2)
SELECT * FROM (VALUES ('+1'), ('+1:'), ('+1:0'), ('+100'), ('+1:00'), ('+01:00'), ('+10'), ('+1000'), ('+10:'), ('+10:0'), ('+10:00'), ('+10:00:'), ('+10:00:1'), ('+10:00:01'), ('+10:00:10')) AS x0
SELECT * FROM v40152 AS x1
SELECT * FROM (VALUES (CAST('{[1,2]}' AS NUMMULTIRANGE))) AS x0
SELECT * FROM v40343 AS x1
CREATE INDEX v40599 ON v40473(v40474 NULLS FIRST, v40474 NULLS FIRST, (3) NULLS FIRST)
CREATE INDEX v40600 ON v40371 USING btree(v40373 NULLS FIRST, v40374 NULLS FIRST, v40374 NULLS FIRST, v40372 NULLS FIRST)
CREATE INDEX v40601 ON v40122(JSON_QUERY(v40124, '$.timestamp()') NULLS FIRST)
CREATE INDEX v40602 ON v40009 USING gist(count NULLS FIRST, count NULLS FIRST)
CREATE INDEX v40603 ON v40514(v40518 NULLS FIRST, v40517 NULLS FIRST, v40518 NULLS FIRST)
CREATE INDEX v40604 ON v40179(v40187 NULLS FIRST, v40184 NULLS FIRST) INCLUDE (x2, x3)
SELECT * FROM UNNEST(ARRAY[CAST(0.36 AS TEXT), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a']) AS x0
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY['foo', 'bar'], ARRAY[1.0])
SELECT * FROM (VALUES ('-1.kb'), ('16/B374D84'), ('30/B374D84'), ('zzz'), ('\xfa9a9a8a8a'), ('900/F37FD90')) AS x0(x1)
SELECT * FROM (VALUES (1, 1), (1, 1), (1, 1), (1, 1)) AS x0(x1, x2)
CREATE INDEX v40605 ON v40361(JSON_QUERY(v40362, '$.a ? (@.timestamp(2) < $.timestamp(3))') NULLS FIRST)
CREATE INDEX v40606 ON v39987(v39988 NULLS FIRST) WHERE v39988 > 0
SELECT * FROM (VALUES (CAST(ROW(CAST('10' AS varbit), 'aaa') AS hash_test_t2))) AS x0
SELECT * FROM (VALUES (CAST(NULL AS macaddr)), ('08:00:2b:01:02:04'), ('08:00:2b:01:02:04'), ('e2:7f:51:3e:70:49'), ('d6:a9:4a:78:1c:d5'), ('ea:29:b1:5e:1f:a5')) AS x0
CREATE INDEX v40607 ON v40008(JSON_QUERY(v39957, '$') NULLS FIRST)
CREATE INDEX v40608 ON v40488(LEFT(v40490, 3) NULLS FIRST)
CREATE TABLE v40609 (v40610 INT DEFAULT 0, v40611 BPCHAR)
CREATE TABLE v40612 (v40613 INT DEFAULT (x5.v40614), v40614 anycompatible)
CREATE TABLE v40615 (v40616 domainchar4arr DEFAULT '1')
CREATE TABLE v40617 (v40618 INET REFERENCES x3)
UPDATE v40361 AS x1 SET v40362 = 'sl7' WHERE v40362 % 10 IN (2, 3, 4, 6, 7, 9)
UPDATE v40224 AS x1 SET v40225[-3] = 'minus-three' WHERE v40225 = 40
UPDATE v40343 AS x1 SET x5.x4.x1.v40344 = v40344 WHERE v40344 = 'new'
UPDATE v40502 AS x0 SET x3.x0.v40504 = GREATEST(x0.v40503, x0.v40504) WHERE x0.v40503 IS NULL
UPDATE v39915 AS x1 SET v39917 = CAST('0123456789abcdef' AS NAME) WHERE v39917 > NUMRANGE(-1001.0, -1000.0, '[]')
UPDATE v40054 AS x1 SET v40055[8] = 8 WHERE v40055 > v40055
UPDATE v40361 AS x1 SET v40363[1].x2 = v40362[1].x3 - 1 WHERE (COUNT(*) FILTER(WHERE v40362 > 0.99)) > '3d914f93-48c9-cc0f-f8a7-9716700b9fcd'
UPDATE v40008 AS x1 SET v39956[15 : 16] = ARRAY[NULL, 26] WHERE v39956 > 1
UPDATE v40152 AS x1 SET v40154[1] = -v40153[1] WHERE v40154 IN (1, 42, 7) AND v40154 > 42
CREATE TABLE v40619 (v40620 TEXT COLLATE "x3", v40621 TEXT COLLATE "x4")
CREATE TABLE v40622 (v40623 INT REFERENCES x2 ON update NO ACTION ON delete NO ACTION)
CREATE TABLE v40624 (v40625 INT DEFAULT 2501, v40626 INT DEFAULT 142857)
CREATE TABLE v40627 (v40628 INTERVAL)
CREATE INDEX v40629 ON v40179(v40185 COLLATE "x4" x3 NULLS FIRST)
CREATE TABLE v40630 (v40631 DECIMAL, v40632 INT GENERATED ALWAYS AS IDENTITY NULL, v40633 INT[] UNIQUE, v40634 TIMETZ DEFAULT 50, CHECK (NOT v40631 IS FALSE AND v40632 = 1))
CREATE TABLE v40635 (v40636 INT, v40637 INT, PRIMARY KEY (v40637 NULLS FIRST, v40636 NULLS FIRST), FOREIGN KEY (x3, x4) REFERENCES x7 (x8, x9))
SELECT * FROM (VALUES ('1'), ('123bYteS'), ('1kb'), ('1mb'), (' 1 Gb'), ('1.5 gB '), ('1tb'), ('3000 tb'), ('1e6 mb'), ('99 pb')) AS x0
SELECT * FROM (VALUES (CAST(NULL AS INTERVAL)), ('5 month 7 day 46 minutes'), ('1 year 7 day 46 minutes'), ('1 year 7 month 20 day 46 minutes'), ('5 month'), ('17 year 11 month 7 day 9 hours 46 minutes 5 seconds')) AS x0
SELECT * FROM (VALUES (0, 9998), (1, 1000)) AS x0
CREATE INDEX v40638 ON v40590((v40593 + 0) NULLS FIRST)
CREATE INDEX v40639 ON v40371(JSON_QUERY(v40372, '$.date()') NULLS FIRST)
CREATE INDEX v40640 ON v40140 USING btree(v40120 NULLS FIRST, v40120 NULLS FIRST) INCLUDE (x2, x3)
SELECT * FROM (VALUES (ARRAY['hello', 'world'])) AS x0
SELECT * FROM (VALUES (CAST(NULL AS JSONB)), ('{"a": "aaa bbb ddd ccc", "b": ["eee fff ggg"], "c": {"d": "hhh iii"}}'), ('{"foo": [true, "bar"], "tags": {"e": 1, "f": null}}'), (0.000007654)) AS x0(x1, x2)
CREATE INDEX v40641 ON v40590 USING spgist(v40592 NULLS FIRST) WITH (buffering=pages_per_range)
CREATE INDEX v40642 ON v40543 USING gist(v40546 NULLS FIRST) WITH (FASTUPDATE=on)
UPDATE v40092 AS x1 SET x1.v40093 = '{11, 12, 13, 14, 15}' FROM (VALUES (1, 1, 10), (1, 1, 11), (1, 2, 12), (1, 2, 13), (1, 3, 14), (2, 3, 15), (3, 3, 16), (3, 4, 17), (4, 1, 18), (4, 1, 19)) AS x4 WHERE v40093 = 'clstr_tst' AND v40093 = DATEMULTIRANGE(DATERANGE('$.timestamp(10)', '2018-03-01'))
UPDATE v40071 AS x1 SET v40072 = v40073 + 2 WHERE v40073 = 'gs_data_1'
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
UPDATE v40473 AS x1 SET v40474 = 30 WHERE v40475 = 57
CREATE TABLE v40643 (v40644 VARBIT, v40645 BIGINT NOT NULL DEFAULT '1', "v40646" CHAR(16))
CREATE TABLE v40647 (v40648 anycompatiblemultirange, v40649 BIGINT NOT NULL DEFAULT 999999, v40650 CHAR(25))
CREATE TABLE v40651 (v40652 INT4RANGE) PARTITION BY HASH(TRIM(LEADING 'xyz' FROM x3.x2))
CREATE TABLE v40653 (v40654 INT REFERENCES x3 ON UPDATE CASCADE) PARTITION OF x2 FOR VALUES IN (TRUE)
SELECT * FROM (VALUES (2, 'veintinueve'), ('once', DATERANGE(1.1, '2018-02-03')), ('123            5'), (4696837146684686337), (93953443), (CAST('pg_database' AS REGCLASS), CAST(2.5 AS DOUBLE PRECISION)), (CAST('0.0' AS DOUBLE PRECISION), CAST(4611686018427387904 AS BIGINT))) AS x0(x1, x2)
SELECT * FROM (VALUES (CAST('{[2,3]}' AS NUMMULTIRANGE)), ('93897.26763026', DATERANGE('2018-01-02', '2018-02-03')), (1, 20), (-3, CAST('255.255.255.001/32' AS INET)), ('infinity'), (CAST((-9223372036854775808) AS BIGINT), CAST(9223372036854775807 AS test_type3)), (CAST('J2452271T040506.789+08' AS NUMMULTIRANGE), CAST('pg_proc' AS REGCLASS))) AS x0(x1, x2)
CREATE TABLE v40655 (v40656 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40657 UUID, v40658 UUID, v40659 UUID, v40660 UUID) PARTITION OF x6 FOR VALUES IN ('green') WITH (FORMAT=heap)
CREATE TABLE v40661 (v40662 ddtest1d, v40663 INT REFERENCES x6 INITIALLY DEFERRED, v40664 cantcompare UNIQUE NULLS NOT DISTINCT, v40665 VARCHAR(16) DEFAULT NEXTVAL('functest1') NULL /* NOT NULL in the domain cannot be overridden */ CHECK (v40665 > 1) DEFAULT 'hello', v40666 ddef3) RETURNS anycompatiblerange LANGUAGE sql
CREATE INDEX v40667 ON v40071(v40073 ASC NULLS FIRST)
CREATE INDEX v40668 ON v40523(v40525 NULLS FIRST, v40524 NULLS FIRST) WITH (fillfactor=10)
INSERT INTO v40081 (v40082) VALUES (DEFAULT), ('More'), (UPPER('more'))
SELECT * FROM v40361 AS x0 TABLESAMPLE BERNOULLI (1000 * 3)
DROP TABLE v39864
DROP TABLE v40118
UPDATE v40340 AS x0 SET v40341['a']['b'][1] = '1'
UPDATE v40437 AS x1 SET v40438 = TRUE
CREATE VIEW v40669 PARTITION OF x4 FOR VALUES FROM ('-Infinity') TO (0) PARTITION BY RANGE(x8) AS SELECT x7(x9 USER-DEFINED(RAINBOW), x10 ARRAY, x11 CHAR).v40593, ROUND(x7(x9 USER-DEFINED(RAINBOW), x10 ARRAY, x11 CHAR).v40593, 30) AS x2 FROM v40590 AS x7(x9 USER-DEFINED(RAINBOW), x10 ARRAY, x11 CHAR)
UPDATE v40008 AS x1 SET v39956 = UNNEST(GENERATE_SERIES(4, 9)) WHERE v39956 = 'b' AND v39956 > 10 AND v39957 >= 96
UPDATE v40152 AS x1 SET v40154 = 'HS.base.hub1.1' WHERE v40154 = 2501
SELECT * FROM (VALUES (CAST(NULL AS macaddr8)), ('08:00:2b:01:02:04:36:49'), ('08:00:2b:01:02:04:f0:e8'), ('e2:7f:51:3e:70:49:16:29'), ('d6:a9:4a:78:1c:d5:47:32'), ('ea:29:b1:5e:1f:a5')) AS x0
SELECT * FROM (VALUES (1, 600), (2, 470), (3, 170), (4, 430), (5, 300)) AS x0
/* fail */ WITH x3 AS (INSERT INTO x2 VALUES (20, 'Success') RETURNING *) SELECT * FROM v40195 AS x1 LIMIT 3
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY['foo', 'bar'], ARRAY[1.0]) AS x0
SELECT * FROM v40352 AS x1
SELECT x0.pg_restore_attribute_stats('oid', CAST('1995-08-06 12:12:12' AS DOUBLE PRECISION[]), 'attname', CAST('{"a":[1,2,{"c":3,"x":4}],"c":"b"}' AS information_schema.cardinal_number), '>>%10L<<', CAST(4.0 AS DOUBLE PRECISION), '"pg_class : pg"', CAST('functest_A_1' AS REGPROC), '$.a ? (@.timestamp_tz() < $.datetime("HH:MI TZH"))', CAST('mer' AS TEXT), 'most_common_elem_freqs', CAST('bpchar' AS REGTYPE)), (TEST_CONV(CAST(REPEAT('.', 64) AS BYTEA) || x3(x4 USER-DEFINED(RAINBOW), x5 ARRAY, x6 CHAR).v40055 || CAST(REPEAT('.', 3) AS BYTEA), 'utf8', 'utf8')).x1 FROM v40054 AS x3(x4 USER-DEFINED(RAINBOW), x5 ARRAY, x6 CHAR) TABLESAMPLE SYSTEM (0) REPEATABLE (1)
UPDATE v40359 AS x1 SET v40360[-5 : -3] = ARRAY[-15, -14, -13] WHERE v40360 = 'car' AND x1.v40360 = 20 RETURNING *, v40360 + 1
UPDATE v39856 AS x1 SET v39819[3 : ] = '{23, 24, 25}' WHERE v39819 BETWEEN 201 AND 1000 RETURNING *
UPDATE v39818 AS x1 SET v39820 = 'bar'
UPDATE v40494 AS x1 SET v40495 = x1.v40495 + x1.v40495
UPDATE v40565 AS x1 SET v40566 = 'Tokyo' WHERE NOT v40567 IS NULL
UPDATE v39915 AS x0 SET v39917 = 30 WHERE v39917 = 142857
CREATE INDEX v40670 ON v40179(v40186 NULLS FIRST) WHERE v40187 = 1
SELECT x5.v39944, x5.v39944 FROM ROWS FROM (x3, x4 AS x6) WITH ORDINALITY AS x5
SELECT x3.column1, x3.column1 FROM v40501 AS x3
SELECT * FROM (VALUES (CAST(NULL AS INTERVAL)), ('5 month 7 day 46 minutes'), ('1 year 7 day 46 minutes'), ('1 year 7 month 20 day 46 minutes'), ('5 month'), ('17 year 11 month 7 day 9 hours 46 minutes 5 seconds')) AS x0
CREATE TEMPORARY TABLE v40671 (v40672 INT, v40673 test_type1)
CREATE TEMPORARY TABLE v40674 (v40675 recur1)
SELECT * FROM (VALUES (1), (1)) AS x0(x1)
SELECT * FROM v40071 AS x0
CREATE VIEW v40676 AS SELECT * FROM v40122 AS x2
CREATE VIEW v40677 AS SELECT * FROM v40029 AS x2 NATURAL JOIN v40494 AS x3
INSERT INTO v40401 (v40404, v40405) VALUES (42, 'new2')
INSERT INTO v40459 ("v40460", "v40461") VALUES ('[INV]\[INV][INV][INV]~', 10)
CREATE TABLE v40678 (v40679 ddtest1d)
CREATE TABLE v40680 (LIKE x1 INCLUDING IDENTITY)
INSERT INTO v40122 (v40124, v40123) VALUES (99, 99)
CREATE VIEW v40681 AS SELECT x4.v40119, x4.v40120 FROM v40118 AS x4
CREATE INDEX v40682 ON v39989 USING brin(v39991 NULLS FIRST) WHERE v39991 = CAST('1997-01-02' AS TIMESTAMPTZ)
CREATE INDEX v40683 ON v40034 USING brin(v40035 x2 NULLS FIRST, v40035 x3 NULLS FIRST, v40036 x4 NULLS FIRST, v40035 x5 NULLS FIRST, v40036 x6 NULLS FIRST, v40036 x7 NULLS FIRST, v40035 x8 NULLS FIRST, v40035 x9 NULLS FIRST, v40035 x10 NULLS FIRST, v40035 x11 NULLS FIRST, v40036 x12 NULLS FIRST, v40035 x13 NULLS FIRST, v40035 x14 NULLS FIRST, v40035 x15 NULLS FIRST, v40036 x16 NULLS FIRST, v40035 x17 NULLS FIRST, v40036 x18 NULLS FIRST, v40035 x19 NULLS FIRST, v40035 x20 NULLS FIRST, v40036 x21 NULLS FIRST, v40036 x22 NULLS FIRST, v40035 x23 NULLS FIRST, v40036 x24 NULLS FIRST) WITH (GIN_PENDING_LIST_LIMIT=128)
CREATE INDEX v40684 ON v40369((v40370 + 1) NULLS FIRST)
CREATE INDEX v40685 ON v39958 USING brin(v39959 NULLS FIRST)
DROP TABLE v40494
DROP TABLE v40224
DROP TABLE v40195
DROP TABLE v40585
CREATE TABLE v40686 (v40687 INT, v40688 TEXT COLLATE "x3" NOT NULL)
CREATE TABLE v40689 (v40690 INT4MULTIRANGE, v40691 ddef1 REFERENCES x4 DEFERRABLE)
UPDATE v40179 AS x0 SET v40185[0 : 2] = ARRAY[10, 11, 12] RETURNING *, CAST(x0.v40185 AS REGCLASS)
UPDATE v39989 AS x1 SET v39991 = -5 RETURNING MERGE_ACTION()
CREATE TABLE v40692 (v40693 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY, v40694 TEXT NOT NULL) WITH (autovacuum_analyze_scale_factor=110.0)
CREATE TEMPORARY TABLE v40695 (v40696 orderedpair) INHERITS (x2)
SELECT * FROM v39951 AS x1(x2 ARRAY, x3 ARRAY, x4 ARRAY)
SELECT * FROM v39954 AS x0 TABLESAMPLE SYSTEM (100)
CREATE TABLE v40697 (v40698 SMALLINT[])
CREATE TABLE v40699 (v40700 VARCHAR(1000) REFERENCES x2 ON UPDATE CASCADE ON DELETE SET NULL)
CREATE VIEW v40701
CREATE VIEW v40702
CREATE INDEX v40703 ON v39942((v39944 >= '(1000,0)') NULLS FIRST)
CREATE INDEX v40704 ON v40340 USING brin(JSON_QUERY(v40342, '$.a[0]') NULLS FIRST)
CREATE INDEX v40705 ON v40624(JSON_QUERY(v40626, '$.a ? (@.datetime("HH:MI TZH") < $.datetime("HH:MI TZH"))') NULLS FIRST)
DROP TABLE v39858
DROP TABLE v40054 (BOOLEAN, DOUBLE PRECISION)
SELECT * FROM (VALUES (0, NULL), (1, 600), (2, 470), (3, 170), (4, 430), (5, 300)) AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
SELECT * FROM v39858 AS x0
CREATE TABLE v40706 (v40707 INT GENERATED ALWAYS AS IDENTITY (START WITH 44), v40708 int8_tbl[], v40709 pp_colors)
CREATE TABLE v40710 (v40711 SMALLINT, v40712 INT, v40713 BIGINT)
CREATE TABLE v40714 (v40715 INT NOT NULL PRIMARY KEY)
CREATE TABLE v40716 (v40717 TEXT COLLATE v40717 PRIMARY KEY)
CREATE INDEX v40718 ON v40697(X('latin1') NULLS FIRST) WHERE (x3.v40698 <-> x5.v40698) > 0
CREATE INDEX v40719 ON v40494(v40495 NULLS FIRST, v40495 COLLATE "x3" NULLS FIRST)
CREATE TABLE v40720 (v40721 dcheck_ign_err2, v40722 INT REFERENCES x6 (x7) ON UPDATE CASCADE, v40723 fullname, v40724 int8_tbl, v40725 tab1)
CREATE TABLE v40726 (v40727 INT PRIMARY KEY, v40728 VARCHAR(20))
UPDATE v40514 AS x1 SET v40517 = 'ROW 3' WHERE x1.v40515 = 'd' AND x1.v40517 IS DISTINCT FROM x1.v40515
UPDATE v40034 AS x1 SET x1.v40035 = 'lz4' WHERE x1.v40036 = 'one' AND v40036 = v40035
SELECT x4.v39916, x4.v39917 FROM v39915 AS x4
CREATE TABLE v40729 (x1, x2) PARTITION BY RANGE(x4.x3, x5, x7.x6)
CREATE TABLE v40730 (v40731 TEXT COLLATE v40731) PARTITION BY RANGE(x2, x3, x4.*)
CREATE TABLE v40732 (v40733 INT PRIMARY KEY, v40734 INT GENERATED ALWAYS AS IDENTITY GENERATED BY DEFAULT AS IDENTITY)
CREATE TABLE v40735 (v40736 INT[], v40737 price_input[][], v40738 DOUBLE PRECISION[])
CREATE INDEX v40739 ON v40437(v40439 NULLS FIRST, LOWER(v40438) NULLS FIRST) WHERE v40438 < 5
CREATE INDEX v40740 ON v40473((-v40474) NULLS FIRST, v40474 NULLS FIRST)
UPDATE v40710 AS x1 SET v40711 = 95 WHERE v40711 = '[21,22)'
UPDATE v39987 AS x1(x3 ARRAY) SET v39988 = v39988 || '_updt' WHERE v39988 = 'gs_data_1'
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE VIEW v40741 AS SELECT DISTINCT ON (x5.v39961, x5.v39960, x5.v39960) x5.v39959, x5.v39961 FROM v39958 AS x5 TABLESAMPLE BERNOULLI (1000 * 3)
CREATE TABLE v40742 (v40743 INT, v40744 INT, v40745 TEXT, PRIMARY KEY (v40745 NULLS FIRST, v40743 NULLS FIRST, v40744 NULLS FIRST))
CREATE TABLE v40746 (v40747 DECIMAL(14, 128), v40748 int8alias1 REFERENCES x3 ON update RESTRICT ON delete RESTRICT DEFAULT 'Table default')
CREATE TABLE v40749 (v40750 INT DEFAULT -1)
CREATE TABLE v40751 (v40752 INT4MULTIRANGE)
UPDATE v40714 AS x1 SET v40715 = x1.v40715 || ' updated again by merge'
UPDATE v40534 AS x1 SET v40535 = v40535 || '->P1'
SELECT * FROM (VALUES ('aaaa'), (NULL), ('bbbb'), ('cccc')) AS x0
CREATE INDEX v40753 ON v40627(JSON_QUERY(v40628, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST)
CREATE INDEX v40754 ON v40429(BTREE_TEST_FUNC() NULLS FIRST, JSON_QUERY(v40430, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST) WHERE x4.x3.v40431 > '(1,4)'
SELECT * FROM v39980 AS x1
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
SELECT * FROM v40008 AS x2 CROSS JOIN v40168 AS x3
UPDATE v40501 AS x1 SET column1 = CAST('0123456789abcdef' AS NAME) WHERE column1 = '[5,6)' AND column1 = DATERANGE('2018-02-01', '2018-03-01')
UPDATE v40681 AS x1 SET v40120 = 5 WHERE SNOOP(v40119)
SELECT * FROM (VALUES (CAST('0' AS DECIMAL)), ('-4.2'), ('4.2e9'), ('1.2e-5'), ('inf'), ('-inf'), ('nan')) AS x0
SELECT * FROM v40502 AS x1 WHERE x1.v40504 = 'rainbow'
CREATE VIEW v40755 AS SELECT *, 1 + 1 AS x1 FROM v40437 AS x3
CREATE VIEW v40756 AS SELECT DISTINCT x6.v40119, x6.v40120 FROM v40140 AS x6 TABLESAMPLE SYSTEM (1000 * 3)
CREATE INDEX v40757 ON v39989(v39991 NULLS FIRST)
CREATE INDEX v40758 ON v40029 USING gist2(v40030 NULLS FIRST)
SELECT x2.v40119, x2.v40119 FROM v40140 AS x2
SELECT x3.v40035, x3.v40035 FROM v40034 AS x3
SELECT * FROM v40624 AS x0
SELECT * FROM (VALUES (484990182159328900690402236933516249572671683638747490717351807610531884491845416923860371219625151551889257298200816555016472471293780254009492949585031653913930735918829139712249577547959394351523545901788627247613322896296041868431769047433229466634098452564756860190085118463828382895145244362033728480588969626012192733802377468089120757046364393407262957242230928854711898925295251902007136232994524624903257456111389508582206404271734668422903183500589303866613158037169610592539145461637447957948521714058034772237111009429638870236361143304703683377693378577075353794118557951847394763531830696578809001981568860219578880229402696449243344235099860421846016326538272155937175661905904288335499593232232926636205909086901191153907183842087577811871344870731324067822883041265129394268082883745408414994.8967939438561591657171240282983703914075472645212002662497023142663831371447287624846942598424990784971781730103682951722370983277124599054059027055336437808366784501932987082321905202623642371063626378290734289114618092750984153422293450048717769065428713836637664433167768445609659527458911187829232316677137895259433038764404970599325009178297626038331436654541552998098529141205301472138026818453893127265938030066392881979113522757891639646670670272542401773230506961559808927249585675430838495658225557294666522469887436551840596777627408780618586500922973500018513068499587683746133637919751545157547095670767246977244726331271787622126889459658539988980096764323712767863722912919120929339399753431689512753214200090670880647731689804555417871258907716687575767185444541243606329768784843125926070743277339790277626515824924290352180761378846035233155198504033292692893297993698953705472933411199778880561376633444249703838589180474329586470353212010427945060694794274109764269805332803290229, 1864.3702986939570026328504202935192533137907736189919154633800554877738455118081651650863235106905871352085850240570561347180517240105510505203972860921397909573687877993477806728098306202020229409548306695695574102950949468160529713610952021974630774784174851619325758380143625473386495586347322798415543385655090746985183329114860118551572428921774322172798724455202876781611633419444058398798142214904998877857425038669920064728855823072107227506485770367799671977282350083029452784747350395161797215115525867416898416360638482342253129160308632504217096916335590470843180746834864303790913372081974355613359678634194879425862536147988835528973291020680020540866655622823550861337486588647231688134992810403147262346312159819432914207194632564009749236609081399504118359354620598232725290537215007867979331582119891661859015726276335168158288396939655310210558566592649049602925182137256134162660116182293851038854455437841571331011002023088829768308520393956515509475418031437505751407687618234418262), (87190145885430429849953615409019208993240447426362428988181639909267773304254748257120061524000254226856815085523676417146197197996896030672521334101413071112068202429835905642444187493717977611730127126387257253646790849384975208460867137315507010888782632024640844766297185244443116696943912406389670302370461137850160539373600494054874979342373255280815156048999900951842673141766630630919020492255966628630634124452614590400422133958133100159154995520080124736657520969784129924799670552560034302960877087853678350801769339861812435411200669026902417951572668727488315537985378304242438181615160041688723201917323705450185975141141262578884689500612295576288125956289035673242989906973367691922065122033180281670221390667818909912035903387888639331486823729897326624516015340.0330856710565117793999512551468220085711713631167607285185762046751452975325645379302403715842570486302993296501788672462090620871511446272026693318239212657949496275318383141403236705902077406660768573015707706831878445598837931116223956945944726162551477136715847593742032488181481888084716920605114101902724395659898621880016853548602514706686907951229872573180602614761229992106144727082722940736406782659562775289407005631298246624198606031298081220736931229256511054595028182057216042683060059115371651410352645266000330509331097811566633211452233019461903115970558624057877018778178814946285827512359903934291318219271464841957435711594154280905473802599888081783098187210283997106131616471807951265003903143099667366508222327805543948921694362089860577380749774036318574113007382111997454202845559941557812813566442364810680529092880773126707073967537693927177460459341763934709686530005721141046645111784404932103241501569571235364365556796422998363930810983452790309019295181282099408260156, 1793.5767085750017553306932533574391150814202249805881581227430032600579405884415934520704053351781361105595296647510475380766428668443641914861849764330704062323054023252886955844207807229267936432730818329225450152491146839618683772020068682795388746108876393249306737841247788224204701299467519965182171772253974884845661168860422489046657965359832930382114760565628765599962013955588754803194908990025689040598990346417563277021386852342928910383706995866844541160576254266641602065102228267316550706943783591722246885978355472097314691737807509436806788803362444745551013400341861820755594413819894154786253014501454443272120342005711761286524843010157182464200556865694401941794983935172457481497909987740544409272349152397774548604845897687504977786762391359552407068124283290504752932824699865504970420939586707791994870941813718246825616335675307740641350673558328821461530563823677144691877374809441673507467507447891562257806191361453045937798278733402269265623588493124129181374135958668436774), (93936642222690597390233191619858485419795942047468396309991947772747208870873993801669373075421461116465960407843923269693395211616591453397070258466704654943689268224479477016161636938138334729982904232438440955361656138189836032891825113139184685132178764873033678116450665758561650355252211196676137179184043639278410827092182700922151290703747496962700158844772453483316974221113826173404445159281421213715669245417896170368554410830320000019029956317336703559699859949692222685614036912057150632902650913831404804982509990655560731349634628713944739168096272097122388116038119844786988276635032016787352796502360718569977397214936366251320294621522016.6483354941025384161536675750898007896744690911429670830432784905421638721478353275821072200938900938046264210604940707974410950770029535636602548377806284157951164875821446035013896786653932045182167021839184824627082391478016195098055107001433336586881395912782883663046617432598969149948351689103230162742769845955320418573803127107923535948653168889411316007796459064267436246637115946581149511513369842911210359447262641996566147462977170742544980481275049898092152042927981394239266559286915303786701737610786594006685748456635797125029722684151298695274097006242412384086302106763844070230264910503179385988626477852818174114043927841085089058972074427820150462261941575665882880501074676800316585217150509780489224388148722603385921057007086785238310735038314861960410473809826927329368597558806004392175746233568789445929554890241140656324160187253042639339549705859147930476532359840809944163908006480881926041259363654863689570520534301207043189181147254153307163555433328278834311658232337, 1510.4332713542154696529645934345554302578243896764921637693542962119938599884313210100957753316832762996428481801312323020427109678979117469716796746760060470871840325255146954580681101106876674367471955788143763250819168311353856748872452260808797135108102729064040463343792765872545182299889360257515315869180266759715933989413256377582681707188367254513700731642913479683031478361835565783219287780434673712341147656477670848734998849030451414278832848680301511646182446524915091598080243532068451726548537866633622180283865668708517173065893429240665300584705585310049892047293928733753369421499719516009692095913169665213597158441636480707309244604139865130782756488091268094213446272360006907802989573582755585110277620911226015342778471352130366770729972784317323917141031824334355639769512749560550167491709646539950725523461943580211843652293561678342656010571108219244870234329176123205423872844099992204896411752620881541000940129833754169391528449211839693800724450201835161044717173715867437)) AS x0
CREATE TEMPORARY TABLE v40759 (v40760 INT NOT NULL CHECK (v40760 >= 1 AND  <= 10))
CREATE TABLE v40761 (v40762 CHAR(500)) PARTITION BY LIST(x2, x3)
SELECT * FROM v40547 AS x0
CREATE VIEW v40763
CREATE TABLE v40764 (v40765 recur1[])
CREATE TABLE v40766 (v40767 xml, v40768 TEXT)
CREATE VIEW v40769 AS SELECT x3.v40628 AS x1, -x3.v40628 AS x2 FROM v40627 AS x3
CREATE INDEX v40770 ON v40555((v40557 + v40556) NULLS FIRST) WHERE v40556 > 1
CREATE INDEX v40771 ON v39954(BIT_LENGTH('') NULLS FIRST)
CREATE INDEX v40772 ON v40473((CAST((v40476 + v40476) AS DOUBLE PRECISION) / 2) NULLS FIRST)
CREATE INDEX v40773 ON v40340 USING spgist(JSON_QUERY(v40341, '$.a ? (@.time() < $.time())') NULLS FIRST)
DROP TABLE v39885
DROP TABLE v40352
DROP TABLE v40502
DROP TABLE v40677
CREATE TABLE v40774 (v40775 INT DEFAULT 5, v40776 TEXT DEFAULT 'initial_default')
CREATE TABLE v40777 (v40778 VARCHAR(10) PRIMARY KEY, v40779 dcomptype[] NOT NULL)
SELECT * FROM v40565 AS x0
CREATE TABLE v40780 (v40781 INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL, v40782 INT)
CREATE TABLE v40783 (v40784 ddef3 GENERATED ALWAYS AS IDENTITY (START WITH 44))
CREATE VIEW v40785
CREATE VIEW v40786
CREATE INDEX v40787 ON v40488(v40490 COLLATE "x3" x2 NULLS FIRST)
CREATE INDEX v40788 ON v40543((v40544 * v40545) NULLS FIRST)
CREATE INDEX v40789 ON v40359(v40360 NULLS FIRST, LOWER(v40360) NULLS FIRST) WHERE v40360 < 5
DROP TABLE v40514
DROP TABLE v40751
SELECT * FROM (VALUES (-CAST(2.5 AS DECIMAL)), (-CAST(1.5 AS DECIMAL)), (-CAST(0.5 AS DECIMAL)), (CAST(0.0 AS DECIMAL)), (CAST(0.5 AS DECIMAL)), (CAST(1.5 AS DECIMAL)), (CAST(2.5 AS DECIMAL))) AS x0
CREATE TABLE v40790 (v40791 domainint4arr, v40792 domainchar4arr)
CREATE TABLE v40793 (v40794 TEXT, LIKE x2 INCLUDING INDEXES, PRIMARY KEY (v40794 NULLS FIRST))
CREATE TABLE v40795 (v40796 USER-DEFINED(RAINBOW) DEFAULT 1)
CREATE TABLE v40797 (v40798 CHAR(71) GENERATED ALWAYS AS (v40798 * '1e200'))
CREATE INDEX v40799 ON v40676(LOWER(v40124) COLLATE "x2" NULLS FIRST, UPPER(v40124) x3 NULLS FIRST)
CREATE INDEX v40800 ON v39954 USING btree(JSON_QUERY(v39956, '$.a ? (@.timestamp_tz() < $.datetime("HH:MI"))') NULLS FIRST, v39955 NULLS FIRST)
CREATE INDEX v40801 ON v40009 USING brin(count NULLS FIRST, count NULLS FIRST) INCLUDE (x1, x2)
CREATE INDEX v40802 ON v40501(column1 COLLATE test0 NULLS FIRST)
CREATE TABLE v40803 (v40804 VARCHAR(4))
CREATE TABLE v40805 (v40806 INT NOT NULL PRIMARY KEY, v40807 TEXT, v40808 INT, v40809 point)
CREATE TABLE v40810 (v40811 widget(18, 14))
CREATE TABLE v40812 (v40813 DATE NOT NULL, v40814 TEXT)
SELECT * FROM (VALUES (CAST(NULL AS macaddr8)), ('08:00:2b:01:02:04:36:49'), ('08:00:2b:01:02:04:f0:e8'), ('e2:7f:51:3e:70:49:16:29'), ('d6:a9:4a:78:1c:d5:47:32'), ('ea:29:b1:5e:1f:a5')) AS x0
CREATE TABLE v40815 (v40816 dcheck CHECK (v40816 IN ('c', 'd')))
CREATE TABLE v40817 (v40818 TEXT REFERENCES x2)
CREATE TABLE v40819 (v40820 stats_import.complex_type, v40821 DECIMAL(9, 2))
CREATE TABLE v40822 (v40823 inotnull, v40824 TEXT COLLATE v40823 DEFAULT CURRENT_TIMESTAMP)
CREATE TABLE v40825 (LIKE x1 INCLUDING CONSTRAINTS)
CREATE TABLE v40826 (LIKE x1 INCLUDING CONSTRAINTS)
CREATE TABLE v40827 (v40828 intdom1, v40829 INET, FOREIGN KEY (x3, x4) REFERENCES x5 (x6, x7))
CREATE TABLE v40830 (v40831 xid8)
SELECT * FROM v39856 AS x0 TABLESAMPLE X (5.500000) REPEATABLE (1)
SELECT * FROM (VALUES (ARRAY[1, 2]), (ARRAY[1, 4])) AS x0
SELECT * FROM (VALUES (NULL), (NULL)) AS x0
CREATE TABLE v40832 (v40833 xy_tuple[])
CREATE TABLE v40834 (v40835 recur1, v40836 INT NOT NULL CHECK (v40835 >= 1 AND v40839 < 1), v40837 DATE CHECK (v40836 > 3), v40838 BIT(14), v40839 INT CHECK ((v40838).x7 > 0))
CREATE INDEX v40840 ON v40009(JSON_QUERY(count, '$.a ? (@.time() < $.datetime("HH:MI TZH"))') NULLS FIRST)
CREATE INDEX v40841 ON v40369 USING dummy_index_am(v40370 NULLS FIRST) WITH (option_bool=FALSE, oids=auto, option_real=3.1, IDENTITY=130, fillfactor=50, option_string_null='val')
SELECT * FROM (VALUES (NULL)) AS x0
SELECT * FROM v40009 AS x1(x2 USER-DEFINED(RAINBOW), x3 ARRAY, x4 CHAR)
SELECT * FROM (VALUES (CAST(NULL AS TIME)), ('11:09:59'), ('1:09:59'), ('11:59:59'), ('7:9:59'), ('5:15:59')) AS x0
SELECT * FROM (VALUES (-CAST(5.2 AS mydomain)), (CAST('::4:3:2:0/24' AS INET)), (4876203697187506177), (0, '-infinity', '-infinity', '-infinity')) AS x0
CREATE INDEX v40842 ON v40749((v40750 > 456) NULLS FIRST)
CREATE INDEX v40843 ON v40313 USING spgist(column2 x2 NULLS FIRST) WITH (STORAGE=4096)
CREATE INDEX v40844 ON v40547 USING brin(v40548 x1 NULLS FIRST)
CREATE INDEX v40845 ON v40710(JSON_QUERY(v40712, '$.time_tz()') NULLS FIRST)
CREATE INDEX v40846 ON v40326(v40123 NULLS FIRST) WHERE COALESCE(x4.v40123, 1) > 35
SELECT * FROM UNNEST(ARRAY[x0 * 10, x1 * 20, x2 * 30], ARRAY['foo', 0.350000], ARRAY[0.300000])
SELECT * FROM UNNEST(ARRAY[10, 20], ARRAY[30, 'bar'], ARRAY[CAST('{"b":[2,3]}' AS JSONB)])
SELECT * FROM (VALUES ('timetzcol', 'timetz', '{>, >=, =, <=, <}', '{01:30:20+02, 01:30:20+02, 01:35:50+02, 23:55:05+02, 23:55:05+02}', '{99, 100, 2, 100, 100}'), (1203982335), ('.000_000_000_123e1_0'), ('255/B374D84'), ('25/B379D90'), ('((-8, 2), (-2, -10))')) AS x0
SELECT * FROM v39858 AS x0 TABLESAMPLE FOOBAR (99)
CREATE INDEX v40847 ON v40609(COALESCE(v40611, 0) NULLS FIRST)
CREATE INDEX v40848 ON v40488(JSON_QUERY(x2.v40490, '       $.datetime("dd-mm-yyyy HH24:MI").type()') NULLS FIRST)
SELECT * FROM (VALUES (456, 2)) AS x0
SELECT * FROM (VALUES ('4567890123456789', '123'), (CAST('ffff:ffff:ffff:fffd::/128' AS INET))) AS x0(x1)
SELECT * FROM (VALUES (1, '83122386.57763026', 'row5'), (5, 8, '-58483.961509'), (1, 1, 'x'), ('Gotham', '(1000,34),(1100,334)', '123456,127,-1000,6789')) AS x0(x1, x2, x3)
SELECT * FROM (VALUES (1, 3, 'foo'), (0, NULL, NULL), (2, 2, 'bar'), (3, 1, 'baz')) AS x0
CREATE INDEX v40849 ON v40369 USING gist(CIRCLE(v40370, 1) NULLS FIRST, v40370 NULLS FIRST)
CREATE INDEX v40850 ON v40081(JSON_QUERY(x3.v40082, '$.a ? (@.date() < $.time())') NULLS FIRST)
CREATE INDEX v40851 ON v39954(v39956 NULLS FIRST)
CREATE TABLE v40852 (v40853 TEXT DEFAULT 'xyzzy' NOT NULL, v40854 serial8)
CREATE TABLE v40855 (v40856 INT REFERENCES x4 (x5), v40857 TEXT, v40858 INT)
SELECT x2.v40495 FROM v40494 AS x2
CREATE TABLE v40859 (v40860 INT, v40861 INT, CHECK (v40860 = 1))
CREATE TABLE v40862 (v40863 INT)
UPDATE v40231 AS x1 SET x1.v40232 = 1 WHERE v40232 IN ('concur_temp_ind_1', 'concur_temp_ind_1')
UPDATE v40710 AS x0 SET v40713 = v40712 || ' notes added by merge5 ' WHERE CAST(v40713 AS REGCLASS) IN ('a_star', 'c_star')
UPDATE v40862 AS x1 SET x5.x4.x1.v40863 = GREATEST(x1.v40863, x1.v40863) WHERE v40863 > 1
UPDATE v39945 AS x0 SET v39949 = GREATEST(x0.v39948, x0.v39946) WHERE v39950 = 1500
UPDATE v39989 AS x0 SET v39990 = DATEMULTIRANGE(DATERANGE('2018-01-01', '2018-03-01')) WHERE x0.v39990 > '1234'
UPDATE v40676 AS x0 SET v40124 = v40123 || ' notes added by merge6 ' WHERE x0.v40124 > CAST('0' AS INT)
UPDATE v40749 AS x0 SET v40750 = NORMALIZE(v40750, NFC) WHERE v40750 = 5 AND v40750 = 10
UPDATE v39945 AS x1 SET v39949 = NORMALIZE(v39946, nfd) WHERE v39948 = CAST('tt23v' AS REGCLASS) AND SNOOP(v39946)
CREATE TABLE v40864 (v40865 BIT(14))
CREATE TABLE v40866 (v40867 anycompatiblearray)
CREATE TABLE v40868 (v40869 INT[] UNIQUE)
CREATE INDEX v40870 ON v40624(v40626 NULLS FIRST, v40626 COLLATE "x4" x3 NULLS FIRST)
CREATE INDEX v40871 ON v39818(COALESCE(v39820, '%') NULLS FIRST)
SELECT * FROM (VALUES ('-1'), ('-123bytes'), ('-1kb'), ('-1mb'), (' -1 Gb'), ('-1.5 gB '), ('-1tb'), ('-3000 TB'), ('-10e-1 MB'), ('-99 PB')) AS x0
SELECT * FROM (VALUES (CAST('pg_constraint' AS REGCLASS)), (11004, '((-infinity,100),(-infinity,500))'), (4, 6, '5329378275943663322215245.20238058768123314540388318253964726313120648232235700755866801918195710344138369800874235399515094124581615597720798385015942389765692769739983054442503547211560297249686289665792078548480268091496050883021187158502798880896590227542729659940394038802461081290690995869705131152889309663639310553909874081663091069118126221594338242710530718836025225507189149221049928936955230868771875644038572888630664890573507822342998964954667474300944699078658989010257103569231493090050659723450626338923049035040974032671138430612839043269997482582763267536489504794826476836323549796385028155416935072959933315468068930689064483178204550825728947252440604703474049780550458442808479096492346910001692358508618202898514895453589357'), ('4.2'), (955252736), ('-inf'), (250)) AS x0
SELECT * FROM (VALUES (INTERVAL '1 HOUR'), (-1.2e-17), ('123', '456')) AS x0(x1)
CREATE INDEX v40872 ON v40859(v40861 NULLS FIRST) WITH (fillfactor=30)
CREATE INDEX v40873 ON v39812(v39813 NULLS FIRST, JSON_QUERY(v39813, '$.a ? (@.timestamp_tz() < $.timestamp_tz())') NULLS FIRST, CIRCLE(v39813, 1) NULLS FIRST)
CREATE INDEX v40874 ON v40643 USING btree(v40645 x2 NULLS FIRST) WHERE v40645 < 22
CREATE INDEX v40875 ON v40780 USING dummy_index_am(v40781 NULLS FIRST)
CREATE INDEX v40876 ON v40609 USING gist(v40611 NULLS FIRST, v40611 NULLS FIRST)
CREATE INDEX v40877 ON v40574(JSON_QUERY(v40576, '$.a ? (@.time() < $.datetime("HH:MI TZH"))') NULLS FIRST)
SELECT * FROM (VALUES (CAST('192.168.1.1/6' AS INET)), (x1), ('2016-07-5', 'from pitest3_p1'), ('float4')) AS x0
SELECT * FROM (VALUES (NULL)) AS x0
SELECT * FROM v39987 AS x1
CREATE INDEX v40878 ON v39915 USING gist(LEFT(v39916, 3) NULLS FIRST) WITH (GENERATED=STORAGE)
CREATE INDEX v40879 ON v39856 USING gist2(v39820 NULLS FIRST) WITH (buffering=fastupdate)
UPDATE v40864 AS x1 SET x1.v40865 = v40865 + 10 WHERE x1.v40865 = 'JBAAAA' AND x1.v40865 = x1.v40865
CREATE INDEX v40880 ON v39856 USING brin(v39819 NULLS FIRST, v39819 NULLS FIRST) INCLUDE (x1, x2)
CREATE INDEX v40881 ON v40029(v40030 NULLS FIRST) INCLUDE (x2, x3)
CREATE INDEX v40882 ON v40803(v40804 NULLS FIRST) WHERE v40804 = 'regress_test_inherit'
CREATE INDEX v40883 ON v40401 USING rtree(JSON_QUERY(v40402, '$.a ? (@.timestamp(2) < $.timestamp(3))') NULLS FIRST) INCLUDE (x2, x3)
CREATE INDEX v40884 ON v40000 USING brin(v39957 x3 NULLS FIRST) WITH (pages_per_range=1)
CREATE INDEX v40885 ON v39913(JSON_QUERY(v39914, '$.a ? (@.datetime("HH:MI") < $.datetime("YY-MM-DD HH:MI"))') NULLS FIRST)
CREATE INDEX v40886 ON v40547 USING gin(v40549 NULLS FIRST)
CREATE INDEX v40887 ON v40681 USING gist(x5.v40120 NULLS FIRST, JSON_QUERY(v40120, '$.timestamp()') NULLS FIRST) INCLUDE (x2, x3)
UPDATE v40152 AS x1 SET v40153 = UNNEST(GENERATE_SERIES(4, 9)) WHERE v40154 = 'c'
UPDATE v40766 AS x0 SET v40768 = v40767 || ' not matched by source' WHERE v40767 = 6
UPDATE v40488 AS x1 SET v40490[3 : ] = '{23, 24, 25}' WHERE NOT v40492 IN (31, 'd', 'p')
UPDATE v40473 AS x1 SET v40475 = ALL('{1,2,3}') WHERE NOT EXISTS(SELECT 1 FROM x3 AS x5 WHERE x1.v40475 = x1.v40476)
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39945 AS x1 SET v39946 = 'Japon' WHERE ARRAY_LOWER(v39948, 1) <> 0 OR ARRAY_UPPER(v39947, 1) <> v39946 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39948 - 1 OR ARRAY_LOWER(v39947, 1) <> 0 OR ARRAY_UPPER(v39948, 1) <> v39949 - 1 OR ARRAY_LOWER(v39950, 1) <> 0 OR ARRAY_UPPER(v39950, 1) <> v39950 - 1
UPDATE v39962 AS x1 SET v39964 = 'extremely_skewed' WHERE v39965 = 'car'
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40361 AS x1 SET v40363 = HASHFLOAT8(CAST('NaN' AS DOUBLE PRECISION)) WHERE NOT x1.v40362 ~* x1.v40362
UPDATE v40543 AS x1 SET v40544 = DATEMULTIRANGE(DATERANGE('2018-01-02', '2018-02-20')) WHERE NOT v40544 IN (CAST(0 AS myint), CAST(2 AS myint), CAST(3 AS myint), CAST(4 AS myint), CAST(5 AS myint), CAST(6 AS myint), CAST(7 AS myint), CAST(8 AS myint), CAST(9 AS myint), NULL)
CREATE TABLE v40888 (v40889 TIMESTAMP NOT NULL DEFAULT '2022-07-05', v40890 mytype, v40891 domain4, v40892 USER-DEFINED(RAINBOW) DEFAULT CURRENT_TIMESTAMP CHECK (v40889 >= 0), v40893 TEXT) PARTITION OF x7 FOR VALUES IN (0, NULL) AS x0
CREATE TABLE v40894 (v40895 INT REFERENCES x7 DEFERRABLE INITIALLY DEFERRED DEFAULT RANDOM(), "v40896" INT, v40897 VARCHAR(32), v40898 BYTEA DEFAULT 0.2 DEFAULT -1, v40899 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL)
CREATE TABLE v40900 (v40901 INT, v40902 TEXT, v40903 DOUBLE PRECISION)
CREATE TABLE v40904 (v40905 INT REFERENCES x3, v40906 dnull NOT NULL)
INSERT INTO v40677 (v40031) VALUES ('P0123456789abcde')
INSERT INTO v40697 (v40698) VALUES (12), (13)
SELECT * FROM (VALUES (FALSE), (TRUE)) AS x0
SELECT * FROM (VALUES ('bpcharcol', ARRAY[CAST(ARRAY[42] AS dposinta)], '192.168.1.226')) AS x0
CREATE TABLE v40907 (v40908 TEXT DEFAULT 'xyzzy' NOT NULL, v40909 at_tab1, v40910 INT GENERATED ALWAYS AS IDENTITY)
CREATE TABLE v40911 (v40912 testdomain_p COLLATE "x4", v40913 posint, v40914 domainint4)
DROP TABLE v40590
DROP TABLE v40029
SELECT * FROM v40534 AS x1(x2 ARRAY, x3 domain4, x4 DECIMAL(64, 60), x5 ARRAY)
SELECT * FROM UNNEST(CAST('base:7 hidden:6 rebel:1 spaceship:2,33A,34B,35C,36D strike:3' AS tsvector))
CREATE TABLE v40915 (v40916 testdomain_sv, v40917 TSQUERY CHECK (v40917 > 1) DEFAULT 0, v40918 CHAR NOT NULL DEFAULT (AVG(v40916))) PARTITION BY LIST((x5 % 7))
CREATE TABLE v40919 (v40920 INT, v40921 TEXT COLLATE v40920 REFERENCES x4 (x5) ON UPDATE CASCADE) PARTITION BY RANGE((x6 + x7))
UPDATE v39958 AS x1 SET v39959 = DATERANGE('2018-01-01', '2018-03-01')
UPDATE v40755 AS x1 SET v40439 = TRUNC(5e-16383, 16383)
SELECT * FROM (VALUES (0), (1), (17), (42), (550273), (207112489)) AS x0
UPDATE v39945 AS x1 SET v39946 = CASE WHEN LOWER(v39948) = '2018-01-01' THEN DATEMULTIRANGE(DATERANGE('2018-01-01', '2018-01-05')) WHEN LOWER(v39949) = '2018-02-01' THEN DATEMULTIRANGE(DATERANGE('2018-01-05', '2018-03-01')) END
UPDATE v39980 AS x0 SET v39981 = CASE WHEN 0 THEN CAST('doh!' AS TEXT) ELSE (2 * v39981) END
CREATE VIEW v40922 AS SELECT * FROM v40523 AS x2 WHERE x2.v40524 = 256
CREATE VIEW v40923 AS SELECT * FROM v40034 AS x4(x5, x6) INNER JOIN v40609 AS x3 ON x4(x5, x6).v40036 = x4(x5, x6).v40035 AND x4(x5, x6).v40035 = x4(x5, x6).v40036
CREATE INDEX v40924 ON v40862(v40863 NULLS FIRST, v40863 NULLS FIRST) INCLUDE (x2, x3)
CREATE INDEX v40925 ON v40369((v40370 + v40370) NULLS FIRST) WHERE v40370 > 1
UPDATE v40313 AS x1 SET column1[2] = ROW(column1[2].x3, column1[2].x4) RETURNING MERGE_ACTION()
UPDATE v40118 AS x1 SET v40119 = 88 RETURNING x1.v40119, v40121 AS "x5"
INSERT INTO v40000 (v39957, v39955) VALUES (UUIDV7(INTERVAL '1 DAY'), DATEMULTIRANGE(DATERANGE('2018-02-01', '2018-03-01')))
INSERT INTO v39989 (v39991, "v39990") VALUES ('10,-10 ,-5,-4', '9.1.2.3/8')
UPDATE v40830 AS x1 SET v40831['f6'] = INTERVAL_HASH(CAST('1 month' AS INTERVAL)) RETURNING v40831 + 1 AS x2
UPDATE v40565 AS x1 SET (v40567[2])[1] = ROW(1, 1.100000) RETURNING SUBSTRING(CAST('01010101' AS varbit) FROM 1 FOR 2)
CREATE TABLE v40926 (v40927 INT, v40928 TEXT, v40929 path) PARTITION BY LIST(x4, x5)
CREATE TABLE v40930 (v40931 TEXT, v40932 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40933 SMALLINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40934 serial2, v40935 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v40936 serial8) PARTITION BY RANGE(x8 COLLATE "x7")
SELECT * FROM UNNEST(CAST('base hidden rebel spaceship strike' AS tsvector))
SELECT * FROM UNNEST(CAST(ARRAY['clusterable', 'index_scan', 'bitmap_scan', 'backward_scan', 'bogus'] AS TEXT[])) WITH ORDINALITY AS x0(x1)
CREATE TABLE v40937 (v40938 INT, v40939 INT[], v40940 TEXT)
CREATE TABLE v40941 (v40942 NAME, v40943 INT, v40944 TEXT)
CREATE TABLE v40945 (v40946 domaintext DEFAULT 3 /* fails */, CONSTRAINT x3 PRIMARY KEY (v40946 NULLS FIRST,  NULLS FIRST))
CREATE TABLE v40947 (v40948 DECIMAL)
CREATE VIEW v40949 AS SELECT 'foo' LIKE '__%' AS x1, POLYF(ARRAY[4.5, 7.7]) AS x2, SIND(x9.v39820) IN (-1, -0.5, 0, 0.5, 1) AS x3, 'merge source InitPlan' AS x4 FROM v39856 AS x9 JOIN ROWS FROM (x7, x8) WITH ORDINALITY AS x10(x12 ARRAY, x13 ARRAY, x14 ARRAY) ON (x9.v39819 = x9.v39819 AND x9.v39819 = x9.v39819)
CREATE VIEW v40950 AS SELECT (0.5 * POWER(10, x6.v40768)) AS x1, CAST('{nan, 1, nan}' AS line) = CAST('{nan, 2, nan}' AS line) AS x2, NOT 'hawkeye' LIKE 'H%' AS x3, X('x', 'x', 'x') IS NULL AS x4 FROM v40766 AS x6 TABLESAMPLE SYSTEM (100)
SELECT x3.v40853 FROM v40852 AS x3, LATERAL PG_GET_INDEXDEF(x5.x4)
UPDATE v40547 AS x1(x2) SET x5.x1(x2).v40551 = GREATEST(x1(x2).v40548, x1(x2).v40548) WHERE x1(x2).v40549 LIKE 'newschema_'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40812 AS x0 SET v40813 = UUID_EXTRACT_TIMESTAMP('017F22E2-79B0-7CC3-98C4-DC0C0C07398F') WHERE v40814 = '08:00:2b:01:02:03:04:05'
UPDATE v40061 AS x1 SET v40064 = DATEMULTIRANGE(DATERANGE('2020-01-01', '2021-01-01')) WHERE v40062 < 10
CREATE INDEX v40951 ON v39945((v39950 || v39950) NULLS FIRST)
SELECT * FROM v40852 AS x1(x2 ARRAY, x3 ARRAY, x4 ARRAY)
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM ROWS FROM (UNNEST(ARRAY[CAST(0.36 AS VARCHAR(3)), '$ ? (@ like_regex "pattern" flag "a")', '@ + 1', '00', '1a'], ARRAY[CAST('[1,2,2]' AS tid), CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)], ARRAY[CAST('{"lectures": [{"id": "1"}]}' AS TIMESTAMPTZ)])) AS x1
SELECT * FROM (VALUES ('infinity'), ('infinity')) AS x0
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40952 ON v40359(v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST, (CAST(1 AS DOUBLE PRECISION) / v40360) NULLS FIRST, v40360 NULLS FIRST, COALESCE(v40360, 1) NULLS FIRST, v40360 NULLS FIRST, (v40360 > 0) NULLS FIRST, (v40360 > 456) NULLS FIRST, v40360 x10 NULLS FIRST, LOWER(v40360) COLLATE "x23" x11 NULLS FIRST, (1) NULLS FIRST, JSON_QUERY(v40360, '$.date()') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 2 + 1) NULLS FIRST, v40360 NULLS FIRST, INT4RANGE(v40360, v40360 + 10) NULLS FIRST, v40360 NULLS FIRST, JSON_QUERY(v40360, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40360 NULLS FIRST, (v40360 + 0) NULLS FIRST, v40360 DESC NULLS LAST, v40360 NULLS FIRST, v40360 x18 NULLS FIRST, WRAP_DO_ANALYZE(v40360) NULLS FIRST, v40360 NULLS FIRST, v40360 NULLS FIRST)
CREATE INDEX v40953 ON v40231 USING brin(x5.v40233 NULLS FIRST, v40233 NULLS FIRST, COALESCE(v40233, 1) NULLS FIRST, v40232 NULLS FIRST, v40232 NULLS FIRST, v40233 NULLS FIRST, (CAST(ROW(v40232, v40233) AS test_type1)) NULLS FIRST, JSON_QUERY(v40232, '$.a ? (@.timestamp() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40233 NULLS FIRST, (v40232 + 0) NULLS FIRST, v40232 NULLS FIRST, (v40233 > 456) NULLS FIRST, v40233 x12 NULLS FIRST, (CAST(ROW(v40232, v40232) AS test_type1)) NULLS FIRST, v40233 x13 NULLS FIRST, JSON_QUERY(v40233, '$.a ? (@.timestamp() < $.datetime("HH:MI"))') NULLS FIRST, v40233 NULLS FIRST, JSON_QUERY(v40233, '$.a ? (@.timestamp_tz() < $.datetime("HH:MI TZH"))') NULLS FIRST, v40233 NULLS FIRST, (v40233 + v40232) NULLS FIRST, v40232 NULLS FIRST, LOWER(v40232) COLLATE "x26" x17 NULLS FIRST, JSON_QUERY(v40233, '$.date()') NULLS FIRST, (JSON_EXTRACT_PATH(v40232, 'array')) NULLS FIRST, (v40233 > 0) NULLS FIRST, v40232 NULLS FIRST, (v40233 || v40232) x19 NULLS FIRST, (1 - v40232) NULLS FIRST, LEFT(v40232, 3) NULLS FIRST, JSON_QUERY(v40232, '$.a ? (@.time() < $.time())') NULLS FIRST) INCLUDE (x2, x3) WITH (pages_per_range=1)
UPDATE v40340 AS x1 SET v40341[-4] = '1' WHERE v40342 = 'temporal_fk_rng2rng_fk'
UPDATE v40627 AS x1 SET v40628 = 0 WHERE v40628 = '===' AND v40628 = DATEMULTIRANGE(DATERANGE('$.s <= $s', '$.decimal(-6, +2)'))
INSERT INTO v40168 (v40171) VALUES (4)
UPDATE v40054 AS x0 SET v40055 = 'regress_test_superuser'
SELECT * FROM (VALUES (TO_TSVECTOR('Lore ipsam')), ('99999999')) AS x0(x1)