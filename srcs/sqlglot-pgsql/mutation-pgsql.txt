SELECT x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
SELECT x FROM x AS x;
CREATE TABLE v0 (x INT);
INSERT INTO x.x (x) VALUES ('����ԥ�`���ǥ����ץ쥤');
CREATE TABLE x (x INT);
INSERT INTO x VALUES ('��A01��', '����ԥ�`���ץ�����ީ`');
CREATE VIEW x AS SELECT * FROM x;
REINDEX client_min_messages;
CREATE TABLE x (x INT[]) RETURNS INT[] LANGUAGE sql IMMUTABLE;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x BYTEA);
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x.x (v1) VALUES ('��Z01�E');
CREATE TABLE x.x (v1 INT, x INT);
SELECT * FROM x AS $�p��;
CREATE TABLE x (v1 NAME);
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM v0;
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX table v0;
CREATE VIEW v2;
INSERT INTO x (v1, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM v0;
ALTER TABLE x RENAME TO x;
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
REINDEX ��ٸ����;
CREATE TABLE v0 (v1 TIMESTAMPTZ, x CHAR(16), x TEXT, x INT PRIMARY KEY);
INSERT INTO v0 VALUES ('����ͼ��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (v1 TIMESTAMP);
SELECT v1 FROM x AS $�p��;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (v1 DECIMAL);
CREATE TABLE x (x BYTEA, x INT, x CHAR(16));
CREATE TABLE v0 (x BYTEA);
INSERT INTO x (x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p��;
SELECT v1 FROM x AS x;
SELECT x FROM x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT * FROM v0;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO x.x VALUES ('��Z01Ħ');
SELECT x;
CREATE TABLE x.x (x NAME);
CREATE TABLE v0 (x INT);
CREATE TABLE x (x TIMESTAMP, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX ���������;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE v0 RENAME TO x;
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
SELECT v1 FROM x AS $�p��;
INSERT INTO x (v1) VALUES ('ho there');
CREATE TABLE x (x INT, x TIMESTAMP, v3 CHAR);
CREATE TABLE v0 (x INT[], x CHAR(16));
INSERT INTO x VALUES (123, 456, 789);
UPDATE x SET x.x = 'name_ops_old';
CREATE TABLE x (x TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v3 TEXT);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x, x FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x VARCHAR, v2 NAME);
INSERT INTO x.x (x, v4) VALUES (10, '�����');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (1, 12);
CREATE TABLE x (x BYTEA);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT[]);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE v0 (x INT[]);
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM x AS x;
CREATE TABLE v0 (x INT PRIMARY KEY);
UPDATE v0 SET x = 'first, modified once' WHERE x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
INSERT INTO x.x VALUES ('�q���~');
CREATE TABLE x (x TIMESTAMP, x INT PRIMARY KEY);
INSERT INTO x VALUES (1);
SELECT v1 FROM v0 UNION SELECT x FROM x AS x;
CREATE VIEW v2 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x (x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT[]);
REINDEX ���������;
SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET v1 = 1 WHERE x = 3;
ALTER TABLE x RENAME TO x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE VIEW x;
SELECT x FROM x AS x;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
INSERT INTO v2 (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (v1 INT, x INT[], x BYTEA);
SELECT * FROM x;
UPDATE x SET v1 = 3;
SELECT x FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x INT[]);
CREATE INDEX v1 ON x USING dummy_index_am(x);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x INT);
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x VARCHAR, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES (1, '�_A01��');
INSERT INTO x (x, x) VALUES (1, 'joe''s place');
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES ('��A01��', 1);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TEXT);
UPDATE v0 SET x.x = 'warning' /* Silence validation checks for strings */ WHERE x = '��Z01Ħ';
ALTER TABLE x RENAME TO x;
SELECT v1 FROM v0 UNION SELECT x FROM x;
CREATE TABLE v0 (v1 INT[], x INT PRIMARY KEY);
SELECT x, x FROM x AS x;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
SELECT x FROM x AS x;
INSERT INTO x.x (v1) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) PARTITION BY RANGE(x);
CREATE INDEX x ON x USING btree(x);
INSERT INTO v0 (x, v2) VALUES (1, 789);
CREATE TABLE x (x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE VIEW x AS SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX table v0;
REINDEX 計算機用語;
INSERT INTO x (x, v4) VALUES ('��Z01Ħ', 'duck');
CREATE TABLE x (x INT PRIMARY KEY, x TEXT);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v2 (v1) VALUES (10);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) INHERITS (x) AS 'MODULE_PATHNAME';
CREATE TABLE v0 (x TIMESTAMP);
CREATE VIEW v2 AS SELECT v1, v2 FROM x;
CREATE TABLE x (x INT, x TEXT);
SELECT v1, v2 FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = 3;
SELECT x FROM v0 UNION SELECT v2 FROM x AS $�p��;
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT x FROM v0 UNION SELECT x FROM x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('������');
UPDATE x SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX �t�Ӹ��;
SELECT v1 FROM v2;
CREATE TABLE v0 (v1 INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT[], x CHAR(16), v3 TIMESTAMP);
CREATE TABLE x (x BYTEA, x INT);
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT v1, x FROM x AS $�p��;
CREATE INDEX x ON x USING hash(x);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
ALTER TABLE v0 RENAME TO x;
SELECT x, v2 FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x.x (x TEXT, x BYTEA);
CREATE TABLE v0 (x INT[]);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x UNION SELECT v2 FROM x;
UPDATE x SET x = 'first, modified once' WHERE x % 2 = 0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
UPDATE x SET x = 'first, modified once';
ALTER TABLE x RENAME TO x;
CREATE INDEX x ON x USING hash(x);
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x BYTEA, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x AS x UNION SELECT x FROM x;
SELECT v1 FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES ('�\���~');
CREATE TABLE x.x (v1 BYTEA);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (v1, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT x, x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', 'duck');
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x VALUES (456);
SELECT v1 FROM x UNION SELECT x FROM v0;
SELECT * FROM x AS x;
INSERT INTO x VALUES (1, 2, 3);
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO v0 (v1, v2) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x.x (x INT, x DECIMAL, v3 DOUBLE PRECISION, x TEXT);
SELECT x FROM x;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x NAME);
CREATE TABLE x.x (x INT, x VARCHAR(16), x CHAR);
INSERT INTO v2 VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x.x VALUES (1);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT);
SELECT x FROM x AS x;
REINDEX ��ٸ����;
SELECT v1, x FROM v0;
INSERT INTO x.x VALUES (1);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 'dummy_test_idx';
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
ALTER TABLE x RENAME TO x;
SELECT v1, x FROM x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x;
INSERT INTO v0 VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x.x (v1) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR(16), x INT);
UPDATE x SET x = 'dummy_test_idx' WHERE x = 1;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x.x (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO x (v1) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES (10);
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.v0 (v1 CHAR(16));
CREATE TABLE v0 (x BYTEA);
CREATE TABLE v0 (v1 INT, x INT, x INT);
CREATE TABLE x (x NAME, v2 VARCHAR, x INT PRIMARY KEY);
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE INDEX x ON x(x) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x VALUES (1);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x VARCHAR, x INT, x VARCHAR(16), v4 TEXT);
CREATE VIEW x.x AS SELECT * FROM v0 AS x;
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���');
CREATE TABLE x (v1 INT, x VARCHAR(16));
CREATE TABLE x.x (x CHAR(16));
CREATE TABLE x (x CHAR(16));
CREATE TABLE x (x INT, v2 TIMESTAMP, v3 INT[]);
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16), v4 CHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM x AS x;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x.x (x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (v1 TIMESTAMPTZ);
INSERT INTO x.x (v1, x) VALUES ('�_A01��', 'ơA01��');
SELECT v1 FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('人Z01下');
CREATE TABLE x (x INT, v2 NAME);
CREATE INDEX x ON x(x);
CREATE VIEW v5 AS SELECT * FROM v0;
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x;
CREATE TABLE x (x INT[]);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT[], x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v3 DOUBLE PRECISION, x VARCHAR);
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x.x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM v0;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX table v0;
CREATE INDEX x ON x USING btree(x ~ x);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x.x;
CREATE TABLE x (x NAME);
SELECT x, v2 FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x INT[]);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE TABLE x.x (x TIMESTAMPTZ) WITH (autovacuum_enabled=off);
CREATE TABLE v0 (v1 INT, x INT PRIMARY KEY, v3 VARCHAR(16));
CREATE VIEW v2 AS SELECT * FROM x;
SELECT * FROM v0;
INSERT INTO v5 (v3, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO v2 VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TEMPORARY TABLE x (x TEXT);
CREATE TABLE v0 (x CHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE VIEW x AS SELECT x, x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x.x = 1 WHERE x = '��Z01Ħ';
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE v0 DROP COLUMN v1;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
SELECT * FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO v2;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (v1 INT, x NAME);
CREATE TABLE x (x INT[]);
SELECT x FROM v0 UNION SELECT x FROM x AS $�p��;
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
ALTER TABLE v0 DROP COLUMN x;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('������', 'duck');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x (v1, v3) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET x = 'first, modified once';
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX client_min_messages;
INSERT INTO x VALUES (1);
INSERT INTO v2 (v1) VALUES ('����ԥ�`���ǥ����ץ쥤');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (x BYTEA, x VARCHAR(16));
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x, x FROM x AS $�p��;
SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE v0 (v1 INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x VARCHAR(16), v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
UPDATE x SET x = 'first, modified once' WHERE x % 2 = 0;
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
CREATE VIEW x AS SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE VIEW x AS SELECT * FROM x;
CREATE VIEW v2 AS SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x.x (v1 INT, v2 INT);
INSERT INTO x.x VALUES ('�F�F���', '���Գ���Ա');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (10);
CREATE INDEX x ON x.x(ABS(x));
UPDATE x SET x = 'first, modified once' WHERE x = 3;
SELECT v1 FROM x UNION SELECT v2 FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
INSERT INTO v0 (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM v0 UNION SELECT x FROM x;
SELECT v1 FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES (1);
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE INDEX x ON v0(x);
ALTER TABLE x DROP COLUMN x;
INSERT INTO v2 VALUES (1, 1);
CREATE TABLE x (v1 INT, x BYTEA);
CREATE TABLE x.x (v1 INT, x TEXT, x TEXT, v4 INT);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
SELECT x FROM x AS x;
CREATE TABLE x (x CHAR(16), x INT);
CREATE TABLE v0 (x VARCHAR);
UPDATE x SET x = 'first, modified once' WHERE x = '��Z01��';
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x VARCHAR(16));
INSERT INTO v0 (v1, x) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x AS x;
SELECT x FROM v2;
CREATE TABLE v0 (x VARCHAR, x VARCHAR);
CREATE TABLE v0 (v1 NAME);
INSERT INTO v2 (v1) VALUES ('���Գ���Ա', '��Z01��');
SELECT x FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
CREATE TABLE v0 (x TEXT);
CREATE TABLE x.x (v1 INT, x INT, x NAME, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO v0 (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (x, x) VALUES ('joe''s place');
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x FROM x AS x UNION SELECT x FROM x;
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT x, x FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW x.x AS SELECT * FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE INDEX v3 ON x USING hash(x);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT PRIMARY KEY, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT, x TEXT);
CREATE TEMPORARY TABLE x (x VARCHAR);
INSERT INTO x VALUES (1, 'first');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x;
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x DECIMAL, v2 TEXT);
SELECT x FROM v0;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x VALUES (12);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
SELECT x FROM x;
CREATE TABLE v0 (v1 INT);
SELECT * FROM x AS $�p��;
SELECT x FROM x;
CREATE TABLE v0 (v1 INT, x TIMESTAMP, v3 CHAR);
INSERT INTO x.x (v1, x) VALUES (1, 2, 3);
CREATE TABLE x.x (x BYTEA, x TEXT);
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x DOUBLE PRECISION);
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 (v1, v2) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
SELECT x, x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x.x AS SELECT * FROM x;
SELECT x, v2 FROM x;
SELECT * FROM x;
INSERT INTO x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x (x INT[]);
INSERT INTO v0 VALUES (1);
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
REINDEX table v0;
CREATE TABLE v0 (x VARCHAR(16), v2 NAME, x CHAR);
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO v2;
REINDEX table v0;
SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT PRIMARY KEY, x TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 TEXT[], v3 NAME);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES (1, 1);
CREATE TABLE v0 (v1 TEXT[]);
SELECT * FROM v2;
CREATE INDEX v3 ON x USING spgist(x) INCLUDE (x, x);
CREATE UNIQUE TABLE x.x (x VARCHAR(16), x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x TIMESTAMPTZ, v2 VARCHAR, x CHAR(16));
INSERT INTO v0 (v1) VALUES ('\000\001\002\003\004');
INSERT INTO x (x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x VALUES (34);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 BYTEA);
CREATE TABLE x (x INT PRIMARY KEY);
CREATE UNIQUE TABLE v0 (x BYTEA);
INSERT INTO x.x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT);
CREATE INDEX x ON x USING btree(x);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = '��Z01��' WHERE x = '人Z01下';
CREATE TABLE x (x CHAR(16), x TEXT);
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (v1, x) VALUES (10, 10);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN v1;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON x.x(x);
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
CREATE INDEX x ON x.x(x);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE VIEW x.x PARTITION BY RANGE(x) AS SELECT * FROM x;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x VARCHAR(16));
UPDATE v0 SET x = 'name_ops' WHERE x = 3;
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x, v2 FROM x;
CREATE TABLE x (x INT[]);
CREATE INDEX v3 ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x INT[]);
UPDATE x SET v1 = 1 WHERE x = 1;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x VARCHAR(16));
SELECT * FROM x;
CREATE TABLE v0 (x VARCHAR);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TIMESTAMP, x BYTEA);
SELECT x FROM x AS $�p��;
ALTER TABLE x RENAME TO x;
INSERT INTO x (v1, v3) VALUES (10, '人Z01下');
INSERT INTO x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM v2;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x, v3) VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */ WHERE x = '��Z01��';
CREATE INDEX v3 ON x.x(x);
SELECT x FROM x AS x;
REINDEX table v0;
SELECT v1 FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x UNION SELECT x FROM v0;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x;
INSERT INTO x VALUES ('機A01上');
CREATE INDEX x ON v0(ABS(x));
INSERT INTO x VALUES ('������ʾ��', '��A01��');
REINDEX table v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT);
INSERT INTO v2 VALUES (1, 'コンピュータグラフィックス');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON v0(ABS(x)) WHERE x % 2 = 0;
INSERT INTO x.x VALUES (1, 'first');
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = 'name_ops';
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TEMPORARY TABLE x (x TEXT);
CREATE TABLE v0 (x DOUBLE PRECISION);
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX table v0;
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x AS SELECT * FROM x;
ALTER TABLE x RENAME TO x;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x BYTEA, x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x, x FROM x;
ALTER TABLE v0 DROP COLUMN v1;
REINDEX table v0;
INSERT INTO x.x VALUES ('ơA01��');
CREATE TABLE x.x (x TIMESTAMP);
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v0 (v1, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 'first, modified once' WHERE x = '��Z01��';
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (v1 INT, x TEXT);
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (v1 INT);
SELECT * FROM v0;
SELECT * FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT);
INSERT INTO x.x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (v1 INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x TIMESTAMP);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT x, x FROM x AS x;
CREATE INDEX v1 ON x(x);
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x (v1) VALUES ('�]���������q');
CREATE TABLE v0 (v1 INT, x INT, x BYTEA);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
INSERT INTO x VALUES ('joe''s place', 1);
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM v0;
SELECT x, x FROM x;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x AS $�p��;
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x NAME);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (v1 DECIMAL, v2 INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT PRIMARY KEY);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x TEXT);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x NAME, x INT, x TEXT);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
REINDEX �׻����Ѹ�;
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x) VALUES (123, 456, 789);
CREATE TABLE x (x NAME, v2 NAME);
UPDATE x SET x = 3;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (v1 INT);
CREATE VIEW x AS SELECT * FROM x AS x;
ALTER TABLE x RENAME TO x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
INSERT INTO x VALUES (12);
UPDATE x SET x.x = 1 WHERE x = 1;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM v0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x INT);
ALTER TABLE v0 RENAME TO v2;
CREATE INDEX v1 ON x(x x);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT[]);
SELECT x FROM x AS x UNION SELECT x FROM x;
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x, v4) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM x UNION SELECT x FROM x;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x(v1);
CREATE INDEX x ON v0(x);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE v0 (x TEXT, x INT PRIMARY KEY);
REINDEX table v0;
UPDATE v0 SET x.x = 'dummy_test_idx';
CREATE TABLE v0 (x BYTEA, v2 VARCHAR(16));
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM x;
ALTER TABLE v0 RENAME TO v2;
INSERT INTO x (v1) VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT x FROM x;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x.x (x INT);
CREATE TABLE x (x INT[], x VARCHAR, x VARCHAR);
CREATE TABLE x (x BYTEA, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x.x (x VARCHAR(16), v2 TIMESTAMPTZ, x DOUBLE PRECISION, x INT);
INSERT INTO x.x VALUES (1, 2, 3);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX table v0;
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE x DROP COLUMN v1;
SELECT x FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p��;
INSERT INTO x (x) VALUES ('�����', '������', 'ơA01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v2 AS SELECT * FROM x;
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x, x FROM x;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16));
SELECT v1 FROM v0;
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x AS x;
CREATE INDEX x ON x(x ~ x);
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX �v�Z�@�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT * FROM x AS x;
UPDATE x SET x.x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */ WHERE x = 3;
SELECT * FROM x AS $�p��;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TEXT[], x INT);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x VARCHAR(16));
INSERT INTO v2 (v1) VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT x, x FROM v0;
CREATE TABLE v0 (x BYTEA);
INSERT INTO x VALUES (456, 1);
UPDATE x SET x = 1 WHERE x = 1;
REINDEX client_min_messages;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x.x VALUES ('�\���~');
SELECT * FROM x AS $�p��;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
SELECT x FROM x;
CREATE TABLE x (v1 INT, x BYTEA);
CREATE TABLE v0 (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v2 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE TABLE v0 (x TEXT);
REINDEX client_min_messages;
CREATE TABLE x (v1 INT);
INSERT INTO x (x, x) VALUES (10);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT[]);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM v2;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x UNION SELECT v2 FROM x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (x INT[]);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
SELECT v1 FROM x;
CREATE TABLE x (x TEXT, x INT PRIMARY KEY) RETURNS TEXT LANGUAGE plsample AS $$SELECT 4$$;
ALTER TABLE x DROP COLUMN x;
SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM x;
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET x = 'first, modified once' WHERE x = 3;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x;
REINDEX table v0;
REINDEX 計算機用語;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (v1 TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TEXT);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
SELECT * FROM x AS $�p�� WHERE x LIKE '_Z%';
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
SELECT x FROM x AS x;
INSERT INTO x (v1) VALUES (10);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x;
UPDATE x SET x = 'first, modified once';
REINDEX table v0;
INSERT INTO x.x VALUES (1, 2, 3);
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
REINDEX table v0;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
INSERT INTO x.x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (x VARCHAR, v2 TIMESTAMPTZ);
ALTER TABLE x RENAME TO x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES (1, 1);
INSERT INTO v2 VALUES ('機A01上', 1);
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x TEXT);
CREATE TABLE x.x (x INT, x INT);
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT, v2 INT);
SELECT x FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x UNION SELECT x FROM x;
REINDEX table v0;
CREATE TEMPORARY TABLE x (v1 VARCHAR);
CREATE TABLE x (x TIMESTAMP, v2 INT);
SELECT x FROM v0 UNION SELECT v2 FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x INT[]) RETURNS trigger LANGUAGE plsample;
CREATE TABLE x (x INT, x INT, x CHAR(16), x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT[]);
CREATE INDEX x ON x USING hash(x);
CREATE INDEX x ON v0(ABS(x));
INSERT INTO x.x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO x (v1, v2) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x VARCHAR);
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS x;
CREATE TEMPORARY TABLE x (x INT);
INSERT INTO v0 (x) VALUES ('�s�y�~');
REINDEX table v0;
INSERT INTO v0 VALUES ('��B10��');
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (v1 DOUBLE PRECISION);
SELECT v1, x FROM x;
SELECT x FROM x;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
INSERT INTO v2 VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x AS SELECT * FROM x AS $�p��;
REINDEX table v0;
SELECT * FROM x;
CREATE TABLE x.x (v1 INT);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW x.x AS SELECT * FROM x AS x;
REINDEX track_commit_timestamp;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES (123, 456, 789);
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x.x (x, x) VALUES (1, '�q���~');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x;
CREATE INDEX x ON x.x(ABS(x));
UPDATE x SET x.x = 1 WHERE x = 1;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE INDEX x ON v0 USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x VARCHAR);
REINDEX table v0;
CREATE TABLE x (v1 DOUBLE PRECISION);
CREATE INDEX v1 ON x USING btree(x);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES (1);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x, x) VALUES (12, 34, 56);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT) RETURNS INT[] LANGUAGE sql;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (v1) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT * FROM x AS x;
INSERT INTO x (v1, v3) VALUES ('������ʾ��', '��A01��');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
INSERT INTO x VALUES (1, 'ơA01��');
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v0 (v1, v3) VALUES ('�����', '����ԥ�`������ե��å���');
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x.x;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (v1 VARCHAR(16), x BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x;
SELECT * FROM x;
SELECT x FROM x AS x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT[]);
INSERT INTO v0 VALUES (1);
CREATE TABLE x (v1 TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v2 AS SELECT x, x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x.x (x INT[]);
CREATE TABLE v0 (x TIMESTAMPTZ);
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX client_min_messages;
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE x.x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x INT[]);
ALTER TABLE x RENAME TO v2;
SELECT x, v2 FROM x;
INSERT INTO x.x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (x, v4) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x CHAR(16));
CREATE TABLE v0 (x INT[]);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX table v0;
ALTER TABLE x RENAME TO x;
SELECT * FROM v0;
CREATE TABLE x (v1 INT) WITH (autovacuum_enabled=off);
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x (x TEXT);
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
SELECT * FROM x AS $�p��;
UPDATE x SET x = 1 WHERE x = 1;
CREATE VIEW v2 AS SELECT x, x FROM v0;
CREATE TABLE x (v1 INT, v2 TEXT[]);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
ALTER TABLE x DROP COLUMN v1;
CREATE INDEX x ON x.x(ABS(x));
CREATE INDEX x ON x.x(ABS(x));
CREATE TEMPORARY TABLE x (x VARCHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x;
CREATE TABLE x (x INT[]);
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = 'first, modified once';
SELECT v1 FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS trigger LANGUAGE plsample;
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES (10, '��A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 'warning' /* Silence validation checks for strings */ WHERE x % 2 = 0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (x INT[]);
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE INDEX x ON x(x x);
SELECT * FROM v2;
UPDATE v0 SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x NAME, x TEXT);
CREATE TABLE x (x TEXT);
INSERT INTO x.x VALUES (1, 'first');
CREATE TEMPORARY TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX v3 ON x.x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (x INT PRIMARY KEY);
CREATE TABLE x (x BYTEA);
ALTER TABLE x DROP COLUMN v1;
SELECT * FROM v0;
CREATE TABLE x (x VARCHAR(16));
REINDEX table v0;
CREATE VIEW x AS SELECT x, x FROM x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x (x INT);
CREATE TABLE v0 (x CHAR(16), x INT PRIMARY KEY, x CHAR);
SELECT x FROM v0;
UPDATE x SET x.x = 'warning' /* Silence validation checks for strings */;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x AS $�p��;
CREATE TEMPORARY TABLE x (x BYTEA);
CREATE TABLE x (x CHAR(16));
SELECT * FROM x;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX �v�Z�@�p��;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = 'first, modified once' WHERE x = 3;
CREATE INDEX x ON x.x(x);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE v0 SET x = 'first, modified once';
INSERT INTO x VALUES (1, 'first');
SELECT * FROM x AS $�p��;
CREATE INDEX v3 ON x.x(x);
CREATE TABLE x.x (x TEXT);
SELECT x FROM x AS $�p��;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x VARCHAR(16));
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
SELECT * FROM x AS x;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x CHAR(16)) RETURNS trigger LANGUAGE plsample;
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
UPDATE x SET x.x = 1 WHERE x = 1;
UPDATE x SET x = 'first, modified once' WHERE x = 'dummy_test_idx';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x NAME, x NAME, v3 CHAR);
CREATE TABLE x (x INT);
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
INSERT INTO v0 VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x INT);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
ALTER TABLE v0 DROP COLUMN v1;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x UNION SELECT v2 FROM x;
SELECT x FROM x;
CREATE TABLE x (x NAME, x BYTEA, x BYTEA, x TIMESTAMP);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x (x TIMESTAMP, x INT, x INT);
INSERT INTO x (x, v2) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x AS x;
REINDEX 計算機用語;
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT[]);
CREATE INDEX x ON x(x ~ x);
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
SELECT x FROM v2;
CREATE INDEX x ON v0(x);
SELECT x FROM x AS $�p�� UNION SELECT x FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE v0 SET x = 'spgist' WHERE x = 'dummy_test_idx';
ALTER TABLE x RENAME TO v2;
ALTER TABLE x DROP COLUMN v1;
ALTER TABLE x DROP COLUMN v1;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT x FROM x AS x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT[], x INT, x CHAR(16));
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x.x AS SELECT * FROM x;
UPDATE v0 SET x = 1 WHERE x = '��Z01Ħ';
SELECT x FROM v0 UNION SELECT x FROM x;
REINDEX table v0;
CREATE INDEX v1 ON x.x(x ~ x);
CREATE TABLE x (x INT) PARTITION BY RANGE(x);
CREATE TABLE x (x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x DECIMAL, x BYTEA);
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN v1;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET x = 1 WHERE x.x = 'first, modified once';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT);
SELECT x, x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX SESSION AUTHORIZATION;
CREATE TABLE v0 (x VARCHAR(16), x INT);
UPDATE x SET x = 'first, modified once';
SELECT v1 FROM v0 UNION SELECT v2 FROM x;
CREATE TABLE v0 (v1 INT, x INT PRIMARY KEY);
CREATE TABLE x.x (x TEXT, x TIMESTAMP, x VARCHAR, v4 INT);
SELECT x FROM x;
CREATE TABLE x (x VARCHAR);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x.x (x VARCHAR, x INT, v3 INT);
INSERT INTO x.x VALUES (1);
CREATE TABLE x (v1 VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x VARCHAR, v2 INT);
CREATE TABLE x (x BYTEA, x INT, x CHAR(16));
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x;
INSERT INTO x (v1) VALUES (12);
UPDATE x SET x = '4MB' WHERE x = 1;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM v0;
CREATE TABLE v0 (x INT, x INT);
REINDEX �׻����Ѹ�;
SELECT x, v2 FROM v0;
INSERT INTO v0 (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES ('�CA01��');
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x UNION SELECT x FROM v0;
CREATE TABLE x (x INT[]);
SELECT v1, x FROM x;
SELECT x FROM x;
SELECT v1 FROM x;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
CREATE INDEX x ON x USING btree(x) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE TABLE x (x INT[]);
CREATE TABLE x (v1 INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX x ON v0(x);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 NAME, x INT PRIMARY KEY);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT);
CREATE TABLE x (x TIMESTAMP);
CREATE TABLE x (v1 INT);
REINDEX �׻����Ѹ�;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
INSERT INTO v0 (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX track_commit_timestamp;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x;
CREATE TABLE x (x INT(TEXT), v2 INT);
SELECT v1 FROM x AS $�p��;
CREATE TABLE x (x INT);
CREATE TABLE x.x (v1 CHAR(16), x INT PRIMARY KEY);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (v3, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE v0 (x VARCHAR(10));
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE VIEW v5 AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET v1 = 1 WHERE v1 = 'spgist';
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX �t�Ӹ��;
CREATE TABLE v0 (x BYTEA);
CREATE TABLE x.x (x BYTEA);
CREATE TABLE x (v1 INT);
SELECT x FROM v2;
CREATE TABLE x (x TEXT[]) RETURNS trigger LANGUAGE plsample;
CREATE TABLE x.v0 (x INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
SELECT * FROM x AS $�p��;
CREATE INDEX v3 ON x USING btree(x);
SELECT v1 FROM x AS $�p�� WHERE x LIKE '_Z%';
CREATE TABLE x (x INT PRIMARY KEY, x VARCHAR, x DECIMAL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE TABLE x.x (x VARCHAR(16), x BYTEA, x CHAR);
CREATE VIEW v5 AS SELECT * FROM x;
SELECT * FROM v0;
INSERT INTO x (v1, x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (v1 VARCHAR(16));
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '����ԥ塼���ǥ����ץ쥤');
CREATE TABLE x (x INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x;
INSERT INTO x (v1) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x BYTEA, x INT);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x AS $�p��;
SELECT x FROM x;
INSERT INTO x.x (v1) VALUES ('�]���������q');
SELECT x FROM v0;
INSERT INTO x VALUES ('ӡ��ϴǹȴ����Ƴ', 1);
SELECT * FROM v0;
CREATE VIEW x AS SELECT * FROM x AS x;
REINDEX client_min_messages;
CREATE TEMPORARY TABLE x (v1 INT);
CREATE TABLE x (v1 DECIMAL, v2 BYTEA);
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
SELECT * FROM x;
CREATE TABLE x (x TEXT[]) RETURNS INT[] LANGUAGE C AS $$SELECT 4$$;
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x RENAME TO v2;
SELECT * FROM x;
CREATE TABLE x (x INT);
SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE INDEX v3 ON x(x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x RENAME TO x;
REINDEX table v0;
UPDATE x SET v1 = 3;
INSERT INTO x.x (v3, v4) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE INDEX v3 ON v0(ABS(x));
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x;
SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x AS $�p��;
CREATE INDEX x ON x USING btree(x);
CREATE TABLE x (v1 TIMESTAMP, x INT, x CHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TEMPORARY TABLE v0 (v1 CHAR(16));
CREATE TABLE x (v1 INT, x TIMESTAMP) PARTITION OF x FOR VALUES FROM (1) TO (1);
REINDEX Ӌ��C���Z;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x VALUES ('�����ѥ��������q', 'first');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT, x TEXT[]);
CREATE TABLE x (x TIMESTAMP, x TIMESTAMP, x CHAR);
CREATE TABLE x (x TEXT[]);
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE v0 (x INT);
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO v0 (x) VALUES (10);
ALTER TABLE v0 RENAME TO x;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT);
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x VARCHAR(16), x TEXT[]);
INSERT INTO x (x, x) VALUES (10);
UPDATE v0 SET x = '4MB' WHERE x = 1;
INSERT INTO x (x, x) VALUES (123, 456, 789);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT PRIMARY KEY);
CREATE TABLE x (x TEXT[]);
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x (x TEXT[]);
CREATE INDEX x ON v0 USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x.x AS SELECT x, x FROM x AS $�p��;
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x INT);
INSERT INTO x.x (x) VALUES (10);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16));
CREATE VIEW x.x AS SELECT x, x FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('�q���~');
CREATE TABLE x (v1 INT);
CREATE TABLE x (x TEXT[], x CHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x BYTEA, x BYTEA, x CHAR);
SELECT * FROM x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX client_min_messages;
CREATE TABLE x.v0 (v1 INT);
SELECT x FROM x;
SELECT x FROM x;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v0 (v1, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p��;
CREATE TABLE x (x VARCHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x BYTEA);
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v0 (x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT * FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x RENAME TO x;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
REINDEX table v0;
CREATE TABLE v0 (x VARCHAR(16), x TIMESTAMP);
SELECT v1, x FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX table v0;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x TIMESTAMP, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x BYTEA);
CREATE TABLE x (v1 TIMESTAMPTZ, x TEXT[]);
CREATE TABLE x.x (x INT);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO v2 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x.x (v1 TEXT, x TEXT[], x INT PRIMARY KEY);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO v2 (v1) VALUES ('人Z01下');
SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
CREATE VIEW v5 AS SELECT * FROM x;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
CREATE VIEW v2 AS SELECT * FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW v2 AS SELECT x, x FROM v0;
UPDATE x SET x = 1 WHERE x = 'dummy_test_idx';
INSERT INTO x VALUES ('�_A01��', 1);
SELECT v1 FROM x AS x;
CREATE INDEX v3 ON x(x);
CREATE INDEX ON x USING gin(x) WITH (fastupdate=off);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x TEXT[], x INT);
INSERT INTO x (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES (1, 'first');
CREATE TABLE x (x INT);
REINDEX client_min_messages;
CREATE TABLE x.x (x INT, x INT);
CREATE TABLE x.x (x TEXT, x CHAR(16), x CHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x UNION SELECT v2 FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES (1);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v2 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE v0 (x TEXT);
CREATE VIEW x.x;
SELECT * FROM v0;
SELECT v1 FROM v0 UNION SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤');
CREATE TABLE x (x TEXT[]);
SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM x;
CREATE TABLE x.x (v1 TEXT, x INT);
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
SELECT v1, v2 FROM x;
INSERT INTO x VALUES (1, 1);
CREATE TABLE x (x NAME, x VARCHAR);
CREATE TABLE v0 (x INT PRIMARY KEY);
SELECT v1, x FROM x AS x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
SELECT v1 FROM x;
CREATE TABLE x (v1 TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT);
CREATE TABLE v0 (v1 VARCHAR, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x VARCHAR, x BYTEA, x BYTEA);
CREATE TABLE v0 (x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE v0 (x INT, x INT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TEXT[]);
UPDATE x SET x = 'first, modified once';
CREATE VIEW v5 AS SELECT * FROM x;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x.x (x INT);
SELECT * FROM x AS $�p��;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TEXT, x BYTEA);
INSERT INTO x VALUES (1, 1);
SELECT x, x FROM v0;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE x (x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX table v0;
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x VARCHAR(16));
ALTER TABLE x DROP COLUMN x;
SELECT * FROM x;
CREATE TEMPORARY TABLE v0 (x INT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x BYTEA, v2 INT, x CHAR);
REINDEX table v0;
CREATE TABLE v0 (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
UPDATE x SET x = 'first, modified once' WHERE v1 = 3;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
CREATE INDEX x ON x(x);
INSERT INTO x VALUES (1, 3);
SELECT * FROM x;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES ('\000\001\002\003\004');
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
REINDEX ��ٸ����;
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (v1 INT, x TEXT);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (v1, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE v0 (x INT) INHERITS (x);
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x.x (x, v3) VALUES (1, 'first');
CREATE UNIQUE TABLE x (x VARCHAR(16), x VARCHAR);
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x.x (v1 VARCHAR, x TIMESTAMP, x BYTEA);
SELECT * FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT);
CREATE TABLE x.x (v1 INT(16), x TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ͼ��');
CREATE INDEX v3 ON x(x x);
INSERT INTO x.x (v1, v3) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x VALUES (1);
REINDEX �׻����Ѹ�;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM v0;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT * FROM v0;
CREATE TABLE x (v1 TIMESTAMP);
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT) RETURNS TEXT LANGUAGE plsample;
INSERT INTO x.x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM v0 AS $�p�� UNION SELECT v2 FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (v1, x) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x.x VALUES (1);
CREATE TABLE v0 (x TEXT, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT PRIMARY KEY);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM v0;
SELECT * FROM x AS x;
CREATE TABLE x.x (x BYTEA, v2 TEXT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x VARCHAR(16));
REINDEX table v0;
INSERT INTO v0 VALUES (1, 'first');
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x (x) VALUES ('�����', '������', 'ơA01��');
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (v1 INT, x TEXT, x VARCHAR(16), x TEXT);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT *;
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x TEXT[]);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT);
UPDATE v0 SET x = 3;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x.x (x INT, x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES (12, 34, 56);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT v1 FROM x UNION SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (v1 DECIMAL, x TEXT);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT * FROM x;
CREATE TABLE x (v1 DOUBLE PRECISION);
CREATE INDEX v1 ON x.x USING dummy_index_am(x);
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO v2 (v1) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x CHAR(16), x INT);
CREATE VIEW x AS SELECT * FROM x;
CREATE INDEX v3 ON x.x USING dummy_index_am(x);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (x VARCHAR(16), x INT);
CREATE TABLE v0 (x VARCHAR, x INT);
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN v1;
REINDEX analyze t;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x NAME, x INT);
CREATE TABLE x (x TEXT[], x VARCHAR(16), x BYTEA, v4 INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v0 (x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x TEXT, v2 INT);
SELECT * FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x BYTEA);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1, x FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE VIEW x.x;
CREATE VIEW x AS SELECT * FROM x;
REINDEX table v0;
SELECT x FROM x;
CREATE TABLE x (x BYTEA, v2 INT);
CREATE TABLE v0 (x TEXT[]);
INSERT INTO x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 TIMESTAMPTZ, x CHAR);
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x INT);
SELECT x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
SELECT v1 FROM x UNION SELECT x FROM x;
INSERT INTO x (v3, x) VALUES (10, 123);
ALTER TABLE x DROP COLUMN x;
UPDATE v0 SET x = 3;
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x INT);
UPDATE x SET v1 = 'name_ops_old';
ALTER TABLE v0 DROP COLUMN x;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
CREATE VIEW x AS SELECT x, v2 FROM v0;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT, x INT);
CREATE TABLE x.x (x TEXT, x NAME);
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES (1);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (v1 TEXT);
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE v0 (v1 INT, x CHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT);
INSERT INTO x (x, x) VALUES (2, '���Գ���Ա');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS TEXT LANGUAGE plsample;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x, x FROM x;
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x RENAME TO x;
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x (v1 DOUBLE PRECISION);
INSERT INTO x (v3, v4) VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once';
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x, x FROM v0;
INSERT INTO x.x VALUES (1, '�q���~');
CREATE TABLE x (v1 TEXT, x VARCHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (x INT, x INT, x INT);
ALTER TABLE x DROP COLUMN v1;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
CREATE TABLE x.x (x VARCHAR(16));
INSERT INTO v0 VALUES ('���Գ���Ա', '��Z01��');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x (x, x) VALUES (34, '人Z01下');
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('��B10��', '\000\001\002\003\004');
CREATE VIEW x AS SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x BYTEA, x VARCHAR);
CREATE TABLE x.x (v1 DECIMAL, x VARCHAR(16), x CHAR);
CREATE TABLE v0 (v1 DECIMAL, x INT, x INT PRIMARY KEY);
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x.x (x DECIMAL);
SELECT x FROM x AS x UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE INDEX x ON x USING hash(x);
CREATE TABLE x (x INT);
SELECT v1, v2 FROM x AS x;
INSERT INTO v0 (v1, v2) VALUES (1, 1);
CREATE INDEX x ON x.x(x);
CREATE TABLE v0 (x TEXT, x VARCHAR);
INSERT INTO x (v1) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE v0 (x VARCHAR, v2 INT);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
SELECT * FROM x;
ALTER TABLE v0 DROP COLUMN v1;
INSERT INTO x (v1, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x VARCHAR(16), x TEXT, x TEXT[]);
UPDATE x SET x = 'first, modified once';
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
REINDEX �v�Z�@�p��;
CREATE INDEX v3 ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE v0 (v1 NAME, v2 VARCHAR);
UPDATE x SET x.x = 1 WHERE x % 2 = 0;
SELECT x, x FROM x AS $�p��;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
INSERT INTO x VALUES (1);
REINDEX table v0;
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES (1);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = 1;
SELECT * FROM x AS $�p��;
INSERT INTO v2 VALUES (2, 1);
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
SELECT x FROM x;
SELECT v1 FROM x;
CREATE INDEX ON x USING gin(x) WITH (fastupdate=off);
CREATE TABLE x (x INT);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x (v1) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x.x (v1 INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (v1 BYTEA);
ALTER TABLE v0 DROP COLUMN x;
SELECT x FROM x AS x;
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x (x INT);
REINDEX table v0;
SELECT x FROM x;
CREATE TABLE x (x DOUBLE PRECISION);
INSERT INTO x VALUES (1);
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
SELECT x, x FROM x AS $�p��;
INSERT INTO v0 (x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE VIEW x.x AS SELECT * FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('�_A01��', 'duck');
SELECT x FROM x;
CREATE TABLE x (v1 INT, x INT, x VARCHAR);
CREATE TABLE v0 (x BYTEA, x VARCHAR);
CREATE TABLE v0 (x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES (10, 10);
REINDEX analyze t;
SELECT * FROM x WHERE x ~ '����[��ش��]';
ALTER TABLE v0 DROP COLUMN x;
SELECT x FROM v0;
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT x, x FROM v0;
UPDATE x SET x = 'first, modified once';
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x (v1) VALUES (1, 'first');
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TEMPORARY TABLE x (x NAME);
CREATE TABLE x (x INT, x NAME);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX table v0;
CREATE TABLE x.x (v1 TEXT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x BYTEA, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v1 ON x(x x);
CREATE TABLE x (v1 NAME, x INT);
UPDATE v0 SET x = 'first, modified once';
SELECT * FROM x;
SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x.x AS SELECT * FROM x;
SELECT v1 FROM x AS x;
CREATE TABLE x.x (x TEXT);
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x AS $�p��;
CREATE INDEX x ON v0(x);
CREATE VIEW v5 AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT x, v2 FROM x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE v0 SET v1 = 3;
SELECT v1 FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM v0;
INSERT INTO x VALUES ('������', 1);
CREATE TABLE v0 (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT PRIMARY KEY);
CREATE TABLE x (x TEXT[]);
UPDATE v0 SET x = 3;
ALTER TABLE v0 RENAME TO x;
CREATE VIEW v2 AS SELECT x, x FROM x AS x;
INSERT INTO v2 (v1) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x TEXT);
CREATE INDEX v1 ON x USING gin(x) WITH (fastupdate=off);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
ALTER TABLE x RENAME TO v2;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW v2 AS SELECT * FROM x;
SELECT x FROM x;
SELECT x FROM x;
SELECT * FROM v2;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x;
INSERT INTO v0 (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (v1 TEXT, x TEXT);
CREATE TABLE x (x VARCHAR);
CREATE TABLE x (x VARCHAR);
SELECT * FROM x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x, x FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x NAME, x TEXT, x CHAR);
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
SELECT x FROM v0;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
REINDEX table v0;
UPDATE v0 SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x NAME);
INSERT INTO x (v1) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x VALUES ('�]���������q');
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (v1 INT, v2 CHAR(16));
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x TIMESTAMP);
INSERT INTO v2 VALUES (456, 1);
CREATE TABLE x (x TEXT[]);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR);
CREATE VIEW x AS SELECT * FROM x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x UNION SELECT x FROM x;
REINDEX Ӌ��C���Z;
CREATE VIEW v2 AS SELECT * FROM x;
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT * FROM v0;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT x FROM x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (x TIMESTAMP, x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x AS $�p��;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
SELECT v1, x FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
SELECT x FROM x AS x;
SELECT x, x FROM x;
SELECT x FROM v0;
CREATE TABLE x.x (x VARCHAR(16), x INT);
CREATE TABLE x (x NAME, v2 DECIMAL, x DOUBLE PRECISION, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX analyze t;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT);
ALTER TABLE v0 RENAME TO v2;
CREATE VIEW x;
UPDATE x SET v1 = 1 WHERE x = 'dummy_test_idx';
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x NAME, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (v1 DECIMAL);
CREATE TABLE x (x TEXT);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES (1, '������');
INSERT INTO x (v1) VALUES ('�����', '������', 'ơA01��');
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x (x VARCHAR(10));
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x = 'name_ops';
INSERT INTO x (v1) VALUES (789);
CREATE TABLE v0 (v1 INT, x VARCHAR(16), x CHAR);
CREATE TABLE v0 (x TEXT[], x NAME);
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
SELECT v1 FROM x AS x UNION SELECT v2 FROM x;
CREATE INDEX x ON x USING btree(x);
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE v0 (v1 INT, x INT);
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (x VARCHAR(16)) WITH (autovacuum_enabled=off);
SELECT x FROM x AS $�p��;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
ALTER TABLE x DROP COLUMN x;
ALTER TABLE x RENAME TO v2;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x;
CREATE TABLE x.x (x TEXT, x VARCHAR, x INT PRIMARY KEY, x BYTEA) PARTITION OF x FOR VALUES FROM (1) TO (1) AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
CREATE TABLE x (x INT);
SELECT x, x FROM x AS $�p��;
CREATE TABLE v0 (v1 INT);
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x (x INT, x INT);
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE v0 (x INT, v2 INT[], x VARCHAR);
CREATE INDEX x ON x USING btree(x);
SELECT x FROM v0 UNION SELECT v2 FROM v0;
INSERT INTO x VALUES (1, 'first');
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM x UNION SELECT x FROM x AS x;
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
SELECT v1 FROM x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX table v0;
CREATE TABLE x (x VARCHAR(16));
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (x INT);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
CREATE INDEX v1 ON x(v1);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (x, v4) VALUES ('�����', '������', 'ơA01��');
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x;
CREATE TABLE x (x INT);
REINDEX Ӌ��C���Z;
SELECT x FROM x UNION SELECT x FROM x;
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (v1 TEXT[], x VARCHAR(16));
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM x AS x;
SELECT x, v2 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
REINDEX client_min_messages;
CREATE TABLE x (v1 INT) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 INT);
CREATE TABLE v0 (x TIMESTAMP, x INT);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x.x (x BYTEA, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE v0 DROP COLUMN x;
CREATE INDEX v1 ON x.x(x);
REINDEX Ӌ��C���Z;
CREATE VIEW v2 AS SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (v1 DECIMAL, v2 INT);
INSERT INTO x (v1, x) VALUES (10, 10);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TIMESTAMP, v2 VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE VIEW x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (v1 INT, x INT, x CHAR);
UPDATE x SET x = 'first, modified once';
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x NAME, v2 INT);
CREATE TABLE v0 (x TEXT[], x INT);
UPDATE x SET x = '��Z01��' WHERE x = 1;
CREATE INDEX x ON x(x);
INSERT INTO v2 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x, x FROM v0;
ALTER TABLE v0 RENAME TO x;
INSERT INTO x (x, x) VALUES (123, 456, 789);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE x RENAME TO x;
ALTER TABLE x DROP COLUMN x;
SELECT * FROM x AS x;
CREATE TABLE x (v1 TIMESTAMP, x TEXT[]);
CREATE TABLE x (v1 INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
SELECT x, v2 FROM x AS $�p�� WHERE x ~* 'コンピュータ[デグ]';
CREATE TABLE x (v1 VARCHAR(16));
SELECT x FROM x;
SELECT v1 FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE x RENAME TO x;
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE TABLE v0 (x INT);
CREATE TABLE x (x TEXT);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
SELECT x FROM v0;
CREATE TABLE v0 (x BYTEA, v2 TEXT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x INT);
INSERT INTO v0 (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x VALUES (12, 34, 56);
INSERT INTO v0 (v1) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, x) VALUES (1, 'first');
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
REINDEX track_commit_timestamp;
REINDEX table v0;
SELECT x FROM x AS x;
CREATE INDEX x ON x(v1);
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO x (v1, v3) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW v2 AS SELECT * FROM x;
INSERT INTO v0 (x) VALUES (1, 2, 3);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE v0 (x NAME, x CHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE INDEX v1 ON x(x);
SELECT * FROM x AS x;
INSERT INTO x.x (v1) VALUES (1);
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT);
CREATE INDEX x ON x(x);
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x;
REINDEX Ӌ��C���Z;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT);
CREATE VIEW x AS SELECT x, x FROM x;
CREATE TEMPORARY TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS trigger LANGUAGE plsample AS $$SELECT 4$$;
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT[]);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
UPDATE x SET v1 = 'name_ops' WHERE x = 1;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM x UNION SELECT v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x AS x;
UPDATE v0 SET x.x = 'name_ops_old' WHERE x = 1;
SELECT v1, v2 FROM x AS $�p��;
CREATE INDEX x ON x USING hash(x);
UPDATE v0 SET x.x = 1 WHERE x = 1;
INSERT INTO v0 VALUES ('人Z01下');
SELECT x FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE v0 (v1 NAME, x INT);
REINDEX client_min_messages;
INSERT INTO x (x, x) VALUES (10, 'duck');
REINDEX analyze t;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v3, v4) VALUES (10, '機A01上');
SELECT x FROM v0;
INSERT INTO x (x) VALUES ('機A01上');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (v1 TEXT);
INSERT INTO x (v1, x) VALUES ('����ͼ��', 3);
SELECT v1 FROM x AS $�p��;
CREATE TABLE x (v1 TEXT, x INT);
SELECT v1 FROM x AS $�p��;
CREATE TABLE x (x INT);
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (x TEXT[]);
CREATE TABLE x (x TIMESTAMPTZ);
CREATE INDEX x ON v0(x);
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('ӡ��ϴǹȴ����Ƴ');
INSERT INTO v0 (v1, x) VALUES (10, '��B01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT[]);
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TEXT[]);
CREATE INDEX x ON x USING btree(x);
SELECT v1 FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x AS x;
ALTER TABLE v0 RENAME TO x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
SELECT x FROM x UNION SELECT x FROM v0;
INSERT INTO x.x (x, v3) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
ALTER TABLE x RENAME TO x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 'first, modified once' WHERE v1 = 3;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE v0 (x VARCHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON x USING btree(x ~ x);
REINDEX analyze t;
CREATE TABLE v0 (x INT, x NAME);
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 'first');
UPDATE v0 SET x = 'first, modified once';
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x.x VALUES (2, 'ho there', '\004\003\002\001\000');
ALTER TABLE x RENAME TO v2;
CREATE VIEW x.x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x) VALUES ('�_A01��');
INSERT INTO v2 VALUES ('�]���������q', '��A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT * FROM x AS $�p��;
SELECT v1 FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT[]);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
SELECT * FROM x AS x;
SELECT v1 FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX ��ٸ����;
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE INDEX x ON x(x);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x.x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT * FROM x;
CREATE TABLE x (v1 NAME, x INT);
CREATE TABLE x (x DECIMAL, x TIMESTAMP, x NAME, x INT);
SELECT * FROM v0;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
REINDEX table v0;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x INT(INT));
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE VIEW x AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT, x INT, x INT) PARTITION BY RANGE(x);
INSERT INTO x (v1) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (v1, x) VALUES ('�\���~', '��Z01Ħ');
SELECT v1 FROM x AS $�p��;
CREATE TABLE v0 (x CHAR(16), v2 INT);
CREATE TABLE x (v1 TIMESTAMP, x TEXT);
SELECT x FROM x AS x UNION SELECT x FROM v0;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
UPDATE x SET x = 'first, modified once' WHERE x % 2 = 0;
INSERT INTO x VALUES (1);
CREATE TABLE x.x (x NAME, v2 CHAR(16), x TIMESTAMP);
SELECT x FROM x AS x;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x INT, x TEXT);
SELECT x, x FROM x;
INSERT INTO x.x VALUES (56);
REINDEX table v0;
CREATE INDEX x ON x.x(ABS(x));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX client_min_messages;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT v1, x FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
REINDEX table v0;
ALTER TABLE v0 DROP COLUMN v1;
CREATE INDEX x ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x (x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES (10);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM v0;
CREATE TABLE x (x INT, x BYTEA, x CHAR);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE VIEW v5;
CREATE VIEW x AS SELECT v1, v2 FROM x;
CREATE TABLE x.x (x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1, v2 FROM x AS $�p��;
CREATE INDEX x ON x USING hash(x);
SELECT x FROM v2;
CREATE TABLE x.x (v1 DOUBLE PRECISION);
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
CREATE INDEX x ON x.x(ABS(x));
UPDATE x SET v1 = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */ WHERE x = '人Z01下';
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TIMESTAMP, v2 TEXT, x CHAR);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
UPDATE x SET x = '4MB' WHERE x.x = 1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE v0 RENAME TO x;
CREATE INDEX x ON x(x);
CREATE TABLE x (x BYTEA, x TEXT, x NAME, x VARCHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX table v0;
SELECT x FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x VARCHAR);
CREATE TABLE x (x TEXT[]);
ALTER TABLE x DROP COLUMN x;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x.x VALUES (1, '����ԥ�`���ǥ����ץ쥤');
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM x;
INSERT INTO x (x, v3) VALUES ('ʬB10��', '�\���~');
INSERT INTO x (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO v0 (v1) VALUES (10);
CREATE TABLE v0 (x BYTEA);
INSERT INTO x.x VALUES (1);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX 計算機用語;
ALTER TABLE x RENAME TO x;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v2 (x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x TIMESTAMPTZ);
SELECT v1 FROM x UNION SELECT x FROM x AS $�p��;
SELECT x;
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT, x INT PRIMARY KEY);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM v0;
UPDATE x SET x.x = '4MB' WHERE x = 'name_ops';
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM x;
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x FROM x AS x;
CREATE VIEW x AS SELECT x, x FROM x AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO v0 VALUES (1);
CREATE TABLE x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x AS x;
UPDATE v0 SET x.x = '4MB';
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT PRIMARY KEY);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x TEXT, v2 INT, x CHAR);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE TABLE x (x TEXT[]);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
SELECT * FROM x AS $�p��;
SELECT x, x FROM x AS $�p��;
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE VIEW v2 AS SELECT v1, v2 FROM x AS $�p��;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
UPDATE v0 SET x = 3;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x TIMESTAMP, x VARCHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TEXT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x VARCHAR, v2 BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
REINDEX ���������;
CREATE TABLE x (v1 TEXT, x TIMESTAMP);
ALTER TABLE v0 DROP COLUMN x;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX 計算機用語;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x VALUES (1, '分B10中');
CREATE TABLE x.x (v1 INT[], x NAME);
SELECT * FROM x AS x;
CREATE TEMPORARY TABLE x (x INT);
SELECT x, x FROM x AS x;
SELECT x FROM x;
INSERT INTO x.x (v1) VALUES ('コンピュータディスプレイ');
REINDEX ��ٸ����;
SELECT v1, x FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x, x FROM x;
CREATE TABLE x (x TEXT[]);
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16), x DOUBLE PRECISION, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
SELECT x, v2 FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (123, '������');
CREATE TABLE x.x (v1 TEXT, v2 VARCHAR, x VARCHAR) PARTITION OF x FOR VALUES FROM (1) TO (100);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 'first, modified once';
SELECT x FROM x AS x;
CREATE TABLE x (x VARCHAR, x INT);
INSERT INTO x (v1, x) VALUES (2, 'ơA01��');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT x FROM x AS $�p��;
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE INDEX x ON x.x(ABS(x));
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p��;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT v1 FROM x AS x;
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM v0;
INSERT INTO x VALUES ('分B10中');
CREATE TABLE x (x TIMESTAMP);
SELECT v1 FROM x;
CREATE VIEW x AS SELECT v1, x FROM x;
CREATE INDEX x ON x(ABS(x)) WHERE x % 2 = 0;
SELECT x FROM x UNION SELECT x FROM v0;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x VALUES (1);
INSERT INTO x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x FROM x UNION SELECT x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE v0 (v1 INT);
SELECT * FROM x WHERE x = 'dummy_test_idx';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, v4) VALUES (10, 'duck');
INSERT INTO v0 (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (v1 TEXT);
CREATE TABLE x (x TEXT);
UPDATE v0 SET x = '��Z01Ħ' WHERE x.x = 1;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT x, x FROM x;
ALTER TABLE v0 RENAME TO x;
UPDATE v0 SET x = 'spgist';
INSERT INTO x (x, x) VALUES (10, 10);
ALTER TABLE x DROP COLUMN x;
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE v0 (x BYTEA, v2 INT, x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p��;
CREATE TABLE v0 (x TEXT[]);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x;
SELECT * FROM x;
CREATE TABLE x (x INT);
SELECT x FROM v0;
UPDATE x SET v1 = '4MB';
CREATE TABLE x.x (x TEXT);
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (v1 BYTEA);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT[]);
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x VALUES (3);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT v1 FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT x, v2 FROM x AS x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (v1 INT);
CREATE TABLE x (x INT, x INT PRIMARY KEY);
CREATE TABLE x (v1 INT, v2 INT, x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM v0;
SELECT v1;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
CREATE VIEW v2 AS SELECT * FROM x;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (v1, v3) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
REINDEX Ӌ��C���Z;
CREATE TABLE v0 (x NAME, x INT PRIMARY KEY);
ALTER TABLE v0 RENAME TO x;
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
REINDEX table v0;
INSERT INTO v0 (v1) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (v1 DECIMAL, x VARCHAR);
SELECT x FROM x AS x UNION SELECT v2 FROM x;
CREATE TABLE x (x INT, x INT PRIMARY KEY);
UPDATE x SET x = '人Z01下' WHERE x.x = 1;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE INDEX x ON x.x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE INDEX x ON x.x(x);
REINDEX Ӌ��C���Z;
CREATE TABLE x.x (x TEXT[], x VARCHAR(16), x VARCHAR);
SELECT x FROM x;
CREATE TABLE x (x TEXT[]);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT);
CREATE TABLE x.x (x CHAR(16), x TEXT);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR, x CHAR);
SELECT * FROM x AS x;
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE v0 (x BYTEA, x CHAR(16));
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x.x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x, v2 FROM x AS $�p��;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE INDEX v3 ON x.x USING btree(x);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
UPDATE v0 SET x = 'first, modified once';
REINDEX table v0;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT[]);
REINDEX track_commit_timestamp;
SELECT x FROM x;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
ALTER TABLE x RENAME TO x;
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES (1, '����ԥ�`���ǥ����ץ쥤');
UPDATE x SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM x;
INSERT INTO x (x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
ALTER TABLE x DROP COLUMN v1;
SELECT x FROM x;
CREATE TABLE x (x VARCHAR(16), v2 INT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT PRIMARY KEY, x INT, x DECIMAL);
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x.x (v1) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 'first, modified once';
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT, x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO v0 VALUES (1, 'first');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x.x (x VARCHAR(16));
CREATE TABLE x (x TEXT);
CREATE TABLE x (x DECIMAL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x DROP COLUMN x;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TEMPORARY TABLE x.x (x VARCHAR);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x (x TIMESTAMP);
INSERT INTO x VALUES (1);
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 TIMESTAMPTZ, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR);
SELECT x FROM x AS x;
CREATE TABLE x.x (x INT);
SELECT * FROM x AS x;
CREATE TABLE x.x (x INT, v2 INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT[]);
SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO v0 VALUES (789);
CREATE INDEX ON x USING gin(x) WITH (fastupdate=off);
CREATE TABLE v0 (x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (v1 INT);
CREATE TABLE x.x (x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
REINDEX table v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16), v3 TEXT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x VARCHAR, x INT PRIMARY KEY);
CREATE TABLE x.x (x VARCHAR);
SELECT * FROM x AS $�p��;
SELECT x FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (v1 INT, x INT, v3 CHAR);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
UPDATE v0 SET x = 1 WHERE x.x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE VIEW x AS SELECT v1, x FROM x AS x;
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE v0 (x INT);
REINDEX SESSION AUTHORIZATION;
SELECT x FROM x UNION SELECT x FROM x;
SELECT x FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 INT, x INT);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('ʬB10��');
CREATE INDEX x ON x.x(x x);
CREATE TABLE v0 (x DOUBLE PRECISION);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE v0 (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x NAME);
SELECT * FROM x AS $�p��;
INSERT INTO v5 (x, x) VALUES (10, '���Գ���Ա');
UPDATE x SET x = 'warning' /* Silence validation checks for strings */ WHERE x % 2 = 0;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x INT);
SELECT x FROM x;
ALTER TABLE x DROP COLUMN v1;
SELECT v1 FROM x UNION SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x.x (x TIMESTAMP, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x AS x;
SELECT x, v2 FROM x;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM v0;
CREATE TABLE x (x INT);
SELECT x FROM x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TEMPORARY TABLE x (x INT);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
UPDATE v0 SET x = 'first, modified once';
INSERT INTO x (v1, v3) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (v1 TIMESTAMP, x VARCHAR(16));
SELECT x FROM x;
ALTER TABLE x DROP COLUMN v1;
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX x ON x USING hash(x);
CREATE TABLE x (x INT);
CREATE TEMPORARY TABLE x (v1 INT);
CREATE TABLE v0 (x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x, x FROM x;
INSERT INTO x (v1, v2) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT v1 FROM x AS $�p��;
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x;
SELECT x, x FROM x;
CREATE TABLE x (v1 VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE INDEX x ON x(x) WHERE x % 2 = 0;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x.x (x, v3) VALUES (10, 456);
INSERT INTO x.x (v1) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x.x (x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x) VALUES (10);
UPDATE x SET x.x = 3;
SELECT v1 FROM x UNION SELECT x FROM v0;
SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW v5 AS SELECT * FROM x;
CREATE TABLE x (x INT);
INSERT INTO v2 VALUES ('��Z01Ħ', 'ʬB10��');
REINDEX table v0;
INSERT INTO x VALUES ('��Z01Ħ');
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMP, x INT PRIMARY KEY);
CREATE INDEX x ON x USING hash(x);
CREATE VIEW v2 AS SELECT x, v2 FROM x;
CREATE VIEW x AS SELECT v1, x FROM x;
SELECT v1 FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x;
UPDATE v0 SET v1 = 1 WHERE x = 3;
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x CHAR(16), x CHAR(16));
SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES (1);
INSERT INTO x.x (x, x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE INDEX v1 ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME);
CREATE TABLE x (x TIMESTAMP, v2 INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v2 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x BYTEA, v2 INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO v2 VALUES (1, 'first');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE INDEX x ON x USING btree(x);
UPDATE x SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, v2 TEXT[]);
SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x.x (x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x INT);
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE v0 (x VARCHAR(16));
CREATE TABLE x (x DOUBLE PRECISION);
UPDATE v0 SET x.x = '��Z01��';
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT * FROM x;
CREATE VIEW x AS SELECT x, x FROM x;
ALTER TABLE v0 RENAME TO v2;
SELECT * FROM v0;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 TEXT);
UPDATE v0 SET x.x = 3;
INSERT INTO x.x VALUES ('分B10中', 1);
CREATE TEMPORARY TABLE x.x (v1 INT);
INSERT INTO v0 (v1, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x, x FROM x AS x;
CREATE INDEX x ON x USING btree(x);
CREATE VIEW x AS SELECT x, v2 FROM x;
CREATE TABLE x (v1 INT, x INT);
INSERT INTO x (v3, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
REINDEX Ӌ��C���Z;
SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT[]);
SELECT v1 FROM v0 UNION SELECT x FROM x AS $�p��;
SELECT x FROM x AS x;
CREATE VIEW v5 AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x INT, v2 INT, x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
REINDEX table v0;
INSERT INTO v0 VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x.x (x) VALUES (10);
UPDATE x SET v1 = 1 WHERE x.x = 1;
INSERT INTO x (v1, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x (v3, v4) VALUES (1, 'first');
SELECT v1 FROM x AS $�p��;
SELECT x FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE v0 (v1 INT, v2 TIMESTAMPTZ) RETURNS trigger LANGUAGE C IMMUTABLE AS $$   select array_agg(g) from generate_series($1, $2 - 1) g $$;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x BYTEA, x TEXT[]);
CREATE TABLE x.x (x INT);
INSERT INTO x (v1, v2) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TEMPORARY TABLE x (x TEXT[]);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v2 VALUES ('�����', '������', 'ơA01��');
SELECT x FROM v2;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x UNION SELECT x FROM x AS $�p��;
SELECT x, v2 FROM x;
ALTER TABLE x DROP COLUMN x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (v1 DECIMAL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX ��ٸ����;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW x AS SELECT x, v2 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (10, 'duck');
CREATE TABLE x (x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
UPDATE x SET x = 'first, modified once';
SELECT * FROM x AS $�p��;
INSERT INTO x.x VALUES (1);
CREATE VIEW x AS SELECT * FROM x;
SELECT v1 FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x.x (x VARCHAR, x INT PRIMARY KEY);
CREATE TABLE x (x CHAR(16), v2 TEXT, x TIMESTAMP, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE v0 (x INT);
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES (1, 2, 3);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
SELECT v1, x FROM x;
UPDATE x SET x.x = 1 WHERE x.x = '��Z01��';
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (v1 INT[]);
REINDEX �t�Ӹ��;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x INT);
SELECT *;
INSERT INTO x VALUES ('��A01��');
SELECT * FROM x AS $�p��;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM v0;
INSERT INTO x (v3, x) VALUES (456, 'duck');
CREATE VIEW x.x;
INSERT INTO x (v1) VALUES ('������ʾ��');
INSERT INTO v0 VALUES ('������ʾ��', '��A01��');
REINDEX Ӌ��C���Z;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN x;
SELECT * FROM x AS $�p��;
INSERT INTO v0 (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM x AS $�p��;
CREATE TABLE x (x TEXT[]);
SELECT v1 FROM x AS x UNION SELECT x FROM x;
INSERT INTO v0 (x) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO x.x (x, v4) VALUES ('�����', '������');
SELECT v1 FROM v0;
SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE TABLE x (v1 VARCHAR, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (v1, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x VARCHAR);
CREATE TABLE x.x (v1 CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x CHAR(16), x INT[], x TIMESTAMP);
SELECT x FROM x;
CREATE TABLE v0 (v1 BYTEA, x INT, v3 CHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TEMPORARY TABLE x (x INT, x TEXT);
SELECT x FROM x;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x INT, x INT);
SELECT * FROM x AS x;
CREATE TEMPORARY TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v3 ON x(x) WHERE x % 2 = 0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS trigger LANGUAGE plsample;
CREATE TEMPORARY TABLE x (x TEXT[]);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x TIMESTAMP, v2 VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO v0 (v1) VALUES (10);
SELECT v1 FROM x AS $�p��;
INSERT INTO v2 VALUES (456, '人Z01下');
INSERT INTO x (x, x) VALUES (123, 456, 789);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x, v2 FROM x AS $�p��;
INSERT INTO x (x, v4) VALUES ('分B10中', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1 FROM x AS x;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x VALUES (1);
CREATE TABLE x.v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR);
INSERT INTO x (v1) VALUES (12, 34, 56);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v0 VALUES ('����ȴ����Ƴ');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x VALUES (2);
INSERT INTO v0 VALUES (1);
SELECT x FROM x;
INSERT INTO x.x (x, v4) VALUES ('コンピュータグラフィックス', '分B10中');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT);
REINDEX ��ٸ����;
CREATE TABLE x (x BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x TIMESTAMP, x TIMESTAMP) WITH (x=3.5 /* ok */);
SELECT x, x FROM x AS x;
CREATE VIEW x.x AS SELECT v1, x FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x;
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x CHAR(16));
INSERT INTO x.x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
SELECT v1 FROM x AS $�p��;
CREATE INDEX v3 ON x.x(ABS(x));
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x BYTEA, x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x TIMESTAMP) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT, v2 VARCHAR(16), v3 CHAR);
CREATE TABLE x.x (x NAME);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX table v0;
INSERT INTO x (v3, v4) VALUES ('����ͼ��', '��B01��');
REINDEX table v0;
CREATE TABLE v0 (x NAME, x INT);
CREATE VIEW v2 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX v1 ON x.x(x);
UPDATE x SET v1 = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */ WHERE x.x = 1;
SELECT * FROM v2;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '������');
INSERT INTO x.x (x, x) VALUES ('���Գ���Ա', 2);
INSERT INTO x (v1, v2) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x BYTEA);
INSERT INTO v0 VALUES (1);
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT x, x FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x VARCHAR);
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x VARCHAR(16), x INT PRIMARY KEY);
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT, v2 INT, v3 VARCHAR);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x;
CREATE INDEX x ON x USING hash(x);
CREATE TABLE x (x TEXT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TEMPORARY TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v2 (x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
INSERT INTO x (v1) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT);
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE v0 (v1 DECIMAL, x NAME);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (v1 VARCHAR(16));
INSERT INTO x VALUES ('ӡ��ϴǹȴ����Ƴ', 3);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (x VARCHAR(16), x NAME, x CHAR);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (10);
SELECT x FROM v0 UNION SELECT v2 FROM x;
SELECT x FROM x AS $�p��;
SELECT * FROM x AS x;
CREATE TABLE x (x INT);
CREATE TABLE x.x (x NAME, x CHAR(16), v3 CHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE INDEX v1 ON v0 USING btree(x ~ x);
CREATE TABLE x (x TEXT[], x INT PRIMARY KEY, x CHAR);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT x, x FROM x;
CREATE TABLE x.x (x DECIMAL, x TIMESTAMPTZ);
UPDATE x SET x = 'first, modified once';
SELECT * FROM x;
CREATE TABLE x (x INT);
CREATE TABLE x (v1 INT[], x BYTEA, x DOUBLE PRECISION, x INT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x.x (x, v2) VALUES (1, 1);
INSERT INTO x (v1) VALUES ('������');
CREATE TABLE x (x INT, x TEXT);
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE x (x INT, x TEXT[]);
CREATE TABLE v0 (v1 CHAR(16), x VARCHAR(16), v3 INT);
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME, x DOUBLE PRECISION, x INT PRIMARY KEY);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
ALTER TABLE x RENAME TO x;
CREATE TABLE v0 (x VARCHAR(16), x INT);
INSERT INTO v0 (x, v3) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (v1 TEXT);
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
SELECT * FROM v0;
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT[]);
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT * FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT) RETURNS trigger LANGUAGE C IMMUTABLE;
SELECT v1 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (1, '�s�y�~');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x AS x;
CREATE TABLE x (x INT);
REINDEX �׻����Ѹ�;
CREATE TABLE v0 (x INT, x VARCHAR, v3 DOUBLE PRECISION, x CHAR(16));
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x;
CREATE TEMPORARY TABLE x (x VARCHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
SELECT * FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
REINDEX table v0;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x CHAR(16));
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE v0 (v1 TEXT[]);
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
UPDATE x SET x.x = 3;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE v0 (x TEXT[], v2 VARCHAR(16), x INT PRIMARY KEY);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
SELECT * FROM x;
SELECT x FROM x UNION SELECT x FROM x AS x;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
INSERT INTO v0 (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x VARCHAR(16));
SELECT x, x FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE TABLE x.x (x INT);
CREATE VIEW x AS SELECT * FROM x;
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x TIMESTAMP, x BYTEA);
CREATE VIEW x AS SELECT v1, x FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT[]);
INSERT INTO x (x, x) VALUES (10, 56);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
SELECT v1 FROM x;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT PRIMARY KEY);
CREATE TABLE x.x (x INT);
INSERT INTO x.x (v1, x) VALUES ('ʬB10��', '�_A01��');
CREATE TABLE x.x (x TIMESTAMP, x INT);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x AS $�p��;
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX table v0;
SELECT x, x FROM x AS x;
INSERT INTO x.x VALUES (1, '����');
SELECT v1 FROM x UNION SELECT v2 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES (1);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x (x) VALUES (10);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE x SET x = 1 WHERE x.x = 1;
CREATE TABLE x (v1 INT[]);
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT[]);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES (10, 123);
CREATE TABLE x (x INT);
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT);
REINDEX table v0;
SELECT x FROM x;
SELECT x FROM x AS $�p��;
INSERT INTO x.x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x (v1) VALUES (10);
ALTER TABLE x DROP COLUMN x;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO v2 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x.x (v1) VALUES ('������ʾ��', '��A01��');
INSERT INTO x VALUES (1, 'first');
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
SELECT x FROM x AS $�p��;
SELECT x, x FROM v0;
REINDEX �t�Ӹ��;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE INDEX x ON v0(x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 'name_ops_old' WHERE x.x = 1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) RETURNS trigger LANGUAGE plsample;
SELECT x FROM x;
CREATE TABLE v0 (x INT, v2 INT);
ALTER TABLE x RENAME TO v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 (x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x TEXT);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO v2 VALUES ('����ͼ��', '��B01��');
ALTER TABLE x RENAME TO v2;
REINDEX table v0;
ALTER TABLE x RENAME TO v2;
REINDEX table v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (v1) VALUES ('�����', '������', 'ơA01��');
INSERT INTO v0 VALUES (1, 'first');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (1, '����ԥ�`������ե��å���');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE x SET x = 3;
SELECT x FROM x AS x ORDER BY 1, x;
CREATE TABLE x (x TEXT) RETURNS trigger LANGUAGE C;
INSERT INTO v0 VALUES (1);
REINDEX Ӌ��C���Z;
ALTER TABLE x RENAME TO v2;
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW v2 AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE x RENAME TO v2;
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
UPDATE x SET x = 1 WHERE x.x = 1;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x VARCHAR);
CREATE INDEX x ON x USING hash(x);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO x (v1, v2) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x;
ALTER TABLE x RENAME TO x;
UPDATE x SET x = 1 WHERE x = 'name_ops';
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE v0 (x DOUBLE PRECISION);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR);
CREATE TABLE x (x TEXT, x INT);
CREATE VIEW x AS SELECT * FROM x;
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT);
SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (v1 INT, x INT, x CHAR(16));
INSERT INTO x VALUES (12, 'first');
CREATE INDEX ON x USING gin(x) WITH (fastupdate=off);
SELECT v1, x FROM x;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x INT);
SELECT * FROM x AS x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x UNION SELECT x FROM x;
UPDATE v0 SET v1 = 1 WHERE x.x = 1;
CREATE VIEW x.x AS SELECT * FROM v0;
ALTER TABLE x RENAME TO x;
SELECT v1 FROM v0;
CREATE TABLE x (x INT) RETURNS trigger LANGUAGE C;
REINDEX table v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x, x FROM v0;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW v2 AS SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
SELECT x FROM v0;
REINDEX table v0;
REINDEX table v0;
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x.x (x TEXT);
SELECT * FROM x AS $�p��;
SELECT x, x FROM x AS x;
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME);
ALTER TABLE v0 RENAME TO x;
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x (x TEXT[], x TEXT[]);
SELECT v1 FROM x AS $�p��;
REINDEX table v0;
CREATE TABLE x.x (x DECIMAL);
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR);
CREATE TABLE x (x INT);
INSERT INTO x.x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x INT);
CREATE TABLE x (x TEXT[]);
CREATE VIEW x AS SELECT * FROM x;
SELECT v1 FROM v2;
CREATE TABLE x (x CHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE TABLE v0 (x TEXT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT[]);
SELECT x FROM v2;
SELECT v1 FROM x AS x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x.x (x INT, x INT, x INT);
ALTER TABLE x RENAME TO x;
SELECT x FROM x AS x;
SELECT x FROM v0;
SELECT * FROM x AS x;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v5 (v3, x) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 1;
INSERT INTO x (v1) VALUES (10);
CREATE INDEX v3 ON v0 USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
SELECT v1 FROM x AS $�p��;
SELECT v1 FROM x AS x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x.x (v1 BYTEA, v2 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TIMESTAMP, x INT PRIMARY KEY);
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE v0 (x CHAR(16));
CREATE VIEW v5 AS SELECT * FROM x;
SELECT x, x FROM x AS x;
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x.x (v1, x) VALUES (10, 10);
CREATE TABLE x.x (x DECIMAL, x INT, x VARCHAR(16));
SELECT * FROM x AS $�p��;
CREATE INDEX x ON x.x(ABS(x));
SELECT x, x FROM v0;
CREATE TABLE v0 (x NAME);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x.x (x TIMESTAMP);
CREATE TABLE x (x INT);
CREATE INDEX v1 ON x.x(x);
CREATE INDEX v1 ON x(ABS(x));
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x BYTEA, x TEXT);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE VIEW x.x AS SELECT * FROM x;
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x UNION SELECT x FROM x;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE VIEW x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x UNION SELECT x FROM x AS x;
SELECT x, x FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TIMESTAMP, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO v0 (v1, v3) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT x FROM x AS $�p��;
ALTER TABLE x DROP COLUMN x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE INDEX v3 ON x(ABS(x));
ALTER TABLE x DROP COLUMN v1;
CREATE UNIQUE INDEX x ON x USING dummy_index_am(x);
SELECT v1, x FROM x AS $�p��;
REINDEX client_min_messages;
INSERT INTO x.x (v1, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE v0 (x TIMESTAMPTZ, x NAME);
CREATE VIEW v2 AS SELECT * FROM v0;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES (123, 456, 789);
CREATE TABLE x.x (v1 VARCHAR, x TIMESTAMP, v3 CHAR);
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT, v3 VARCHAR, x VARCHAR);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT v1 FROM x;
REINDEX table v0;
SELECT v1 FROM x AS x;
CREATE TABLE v0 (x INT PRIMARY KEY);
INSERT INTO x.x (x, v3) VALUES (1, '機A01上');
CREATE TEMPORARY TABLE v0 (x TEXT);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE VIEW v2 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (34);
SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (v1) VALUES (10);
CREATE TABLE x.x (x INT PRIMARY KEY, x BYTEA);
SELECT x, v2 FROM x AS x;
SELECT v1, v2 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM x;
CREATE TABLE x (x TEXT[]);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE INDEX v1 ON x(x);
INSERT INTO x (x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v1) VALUES (10);
CREATE TABLE x.x (v1 TEXT);
CREATE INDEX v3 ON v0 USING btree(x);
CREATE VIEW x AS SELECT x, v2 FROM x;
SELECT x FROM x AS x;
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
SELECT x FROM v0 UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO v2 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('ӡ��ϴǹȴ����Ƴ', '����ԥ�`������ե��å���');
CREATE TABLE x (x TEXT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT, v2 TEXT);
INSERT INTO x (x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT PRIMARY KEY, x TEXT, v3 DOUBLE PRECISION, v4 INT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x CHAR(16));
SELECT x FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', 12);
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX v3 ON x.x(x);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM v0;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT, x INT PRIMARY KEY, x BYTEA);
INSERT INTO x.x VALUES (1, 1);
CREATE TABLE v0 (x TEXT[], x INT, x CHAR);
REINDEX Ӌ��C���Z;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE INDEX x ON x.x(ABS(x));
SELECT * FROM x AS $�p��;
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TEMPORARY TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT[]);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
UPDATE x SET x = 3;
INSERT INTO x (v1) VALUES (1, 'first');
SELECT * FROM x;
SELECT x FROM x;
REINDEX table v0;
CREATE VIEW x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (v1) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (x INT);
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
ALTER TABLE x RENAME TO v2;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x VALUES (1, 1);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (v1, x) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
UPDATE x SET x = 'first, modified once' WHERE x = 'warning' /* Silence validation checks for strings */;
CREATE TABLE v0 (x BYTEA, x INT, x VARCHAR);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x (x, v4) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT * FROM x AS $�p��;
SELECT x, v2 FROM x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x TIMESTAMP);
CREATE VIEW x.x AS SELECT x, x FROM x;
INSERT INTO x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
REINDEX �׻����Ѹ�;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT);
CREATE TABLE x (v1 INT) RETURNS trigger LANGUAGE C AS $$SELECT 4$$;
CREATE TABLE v0 (x INT, x TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x (x, v4) VALUES ('�s�y�~', '�]���������q', '��B10��');
UPDATE x SET x = 'first, modified once';
ALTER TABLE x RENAME TO x;
CREATE TABLE x.x (x NAME, x VARCHAR(16), x NAME, x INT[]);
INSERT INTO x (x, x) VALUES (10, 56);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x TEXT[]);
SELECT x, x FROM x AS x;
SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT v1, x FROM x AS $�p��;
INSERT INTO x.x (v1) VALUES ('\000\001\002\003\004');
CREATE INDEX x ON x USING btree(x);
INSERT INTO x (v1) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x AS $�p��;
INSERT INTO v2 (x) VALUES (10);
CREATE VIEW v2 AS SELECT * FROM x;
REINDEX table v0;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TEXT, x INT);
INSERT INTO v0 (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
UPDATE x SET v1 = 0 WHERE x.x = 1;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR(16), x DOUBLE PRECISION, x NAME);
REINDEX �׻����Ѹ�;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS trigger LANGUAGE plsample;
SELECT x, x FROM x AS x;
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
SELECT v1 FROM x AS x UNION SELECT v2 FROM x;
CREATE TABLE x (x TEXT[]);
SELECT x FROM x AS x;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE v0 (x INT);
CREATE TABLE x (x VARCHAR(16), x VARCHAR);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x UNION SELECT x FROM x AS $�p��;
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x UNION SELECT x FROM v0;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x.x (x) VALUES (10);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x.x(x);
CREATE VIEW v2 AS SELECT * FROM x AS x;
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x INT PRIMARY KEY, v2 TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x VARCHAR);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x;
SELECT x FROM x;
CREATE TABLE x (x INT, x TEXT);
UPDATE x SET x = 1 WHERE x % 2 = 0;
REINDEX ���������;
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (x, x) VALUES ('��Z01��', 1);
SELECT v1, x FROM x;
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
ALTER TABLE x DROP COLUMN v1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES (456);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT * FROM x;
INSERT INTO x (x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x VALUES (1, 1);
CREATE INDEX x ON v0 USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE v0 (x VARCHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE TEMPORARY TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���');
INSERT INTO x (x, x) VALUES (10, 10);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TEMPORARY TABLE x (x TEXT[]);
CREATE TABLE x.x (x TEXT, v2 TEXT);
REINDEX table v0;
SELECT * FROM x AS $�p��;
UPDATE v0 SET x = 'first, modified once' WHERE x % 2 = 0;
INSERT INTO x VALUES (1);
INSERT INTO v5 (v3, v4) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW v2;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE INDEX x ON x USING gin(x) WITH (fastupdate=off);
REINDEX table v0;
SELECT x;
CREATE INDEX v1 ON x(ABS(x));
CREATE TABLE x (x INT PRIMARY KEY, x TEXT, x BYTEA, v4 INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE INDEX x ON x USING btree(x);
REINDEX table v0;
ALTER TABLE v0 RENAME TO x;
SELECT x FROM v0;
SELECT x FROM x;
CREATE INDEX x ON x(x) WHERE x % 2 = 0;
UPDATE x SET v1 = 1 WHERE x.x = 'spgist';
CREATE TABLE x (x TEXT) RETURNS trigger LANGUAGE plsample;
CREATE INDEX x ON x.x(x ~ x);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE INDEX x ON x USING btree(x);
REINDEX table v0;
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x, v2 FROM x AS x;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE v0 (v1 NAME, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 3;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TEMPORARY TABLE x (v1 INT[]);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (1);
CREATE TABLE v0 (x INT PRIMARY KEY, x INT PRIMARY KEY, v3 CHAR);
CREATE VIEW x AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x, x FROM x AS x;
SELECT * FROM x;
CREATE TABLE x (v1 INT[], x VARCHAR(16), v3 CHAR);
INSERT INTO x (v1) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x;
UPDATE v0 SET v1 = 3;
REINDEX table v0;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE v0 SET x = 1;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x VALUES (1, 1);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
SELECT x FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM v2;
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (v1 INT);
CREATE TABLE v0 (v1 DECIMAL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p��;
CREATE TABLE x (x NAME);
INSERT INTO v0 VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v0 (x, x) VALUES ('���Գ���Ա', '��Z01��');
UPDATE x SET v1 = 'name_ops' WHERE x = 'dummy_test_idx';
SELECT * FROM x AS $�p��;
SELECT x FROM x;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x BYTEA, x CHAR(16));
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x.x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TIMESTAMP, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v2 AS SELECT x, x FROM x AS x;
CREATE TABLE x (v1 DECIMAL);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (v1 INT, v2 INT[], v3 NAME, x INT);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x.x VALUES ('��A01��');
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE INDEX x ON x.x USING btree(x ~ x);
CREATE TABLE x (x NAME, x NAME);
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM v0;
SELECT v1, x FROM x AS x;
UPDATE x SET v1 = 3;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x TIMESTAMP, v2 INT, v3 CHAR);
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO v0 VALUES (1, 'first');
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x, v2) VALUES (1, 1);
UPDATE x SET x = 'first, modified once';
CREATE INDEX x ON x.x(ABS(x));
INSERT INTO x VALUES (1);
INSERT INTO x VALUES (1);
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x AS x UNION SELECT x FROM x AS $�p��;
ALTER TABLE v0 RENAME TO v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x AS SELECT v1, x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x.x (x DOUBLE PRECISION);
INSERT INTO v0 VALUES (1);
INSERT INTO x.x (v3, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE VIEW v2;
CREATE TABLE x (x DECIMAL, x INT, v3 CHAR);
INSERT INTO v0 (x, v2) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x VARCHAR(16));
INSERT INTO x VALUES (3, 'コンピュータディスプレイ');
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR(16));
CREATE UNIQUE TABLE x.x (x DECIMAL);
SELECT x FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (v1) VALUES (10);
INSERT INTO x VALUES (1);
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO v0 (x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 (v1) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE v0 (x TEXT, x CHAR(16), v3 CHAR);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM v0;
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 'warning' /* Silence validation checks for strings */;
CREATE VIEW x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x;
ALTER TABLE x DROP COLUMN v1;
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) WITH (x=3.5 /* ok */);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE v0 DROP COLUMN v1;
CREATE INDEX x ON x(ABS(x));
CREATE INDEX x ON x(x);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TEMPORARY TABLE x.x (x NAME);
CREATE TABLE x (x INT) RETURNS trigger LANGUAGE C IMMUTABLE;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
ALTER TABLE x RENAME TO x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (v1 TEXT);
CREATE TABLE x (x INT PRIMARY KEY, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO v0 (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
UPDATE v0 SET x.x = 0;
CREATE TABLE x.x (v1 INT, v2 INT, x TEXT[]);
SELECT x FROM x AS x;
CREATE INDEX x ON x.x(ABS(x));
CREATE TABLE x (x VARCHAR);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x.x.v2 AS SELECT * FROM x;
SELECT * FROM x;
INSERT INTO v0 (x) VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (v1) VALUES (2);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT x FROM v2;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR(16));
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (v1 VARCHAR(16), v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x VALUES (1, '�]���������q');
SELECT x FROM v0 UNION SELECT v2 FROM x AS x;
ALTER TABLE x RENAME TO x;
INSERT INTO x (v1, v3) VALUES ('����ԥ�`���ǥ����ץ쥤', 3);
INSERT INTO x.x (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
UPDATE v0 SET x = 1 WHERE x = '��Z01Ħ';
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x.x (x TIMESTAMP, x VARCHAR(16));
CREATE TABLE x (x INT);
CREATE TABLE x.x (x VARCHAR(16), x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE UNIQUE TABLE x (x INT);
CREATE TABLE x (x VARCHAR);
INSERT INTO x VALUES ('�F�F���');
UPDATE x SET v1 = 3;
SELECT x, x FROM x;
SELECT * FROM x AS $�p��;
ALTER TABLE x RENAME TO v2;
CREATE INDEX x ON v0(x x);
SELECT x FROM x AS x;
CREATE TABLE x.x (v1 INT, x INT[]);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE VIEW v5 AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE v0 SET x = 'first, modified once';
INSERT INTO x (x, v3) VALUES (10, 10);
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT);
CREATE TABLE x (x CHAR(16), v2 INT);
ALTER TABLE v0 RENAME TO x;
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x.x (x INT, x INT, x INT);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS VOID LANGUAGE plsample;
CREATE TABLE v0 (x DECIMAL, x INT);
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE v0 (x TIMESTAMP);
CREATE INDEX x ON x.x USING spgist(x x) INCLUDE (x, x);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x INT PRIMARY KEY, v2 INT[]);
INSERT INTO x VALUES (1, 1);
CREATE TABLE x (v1 INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT[]);
UPDATE v0 SET x = 'first, modified once' WHERE x = 'dummy_test_idx';
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (v1) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x;
CREATE TABLE v0 (x NAME);
SELECT v1 FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x.x (v1 VARCHAR);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE INDEX x ON v0 USING dummy_index_am(x);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x AS SELECT * FROM x;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT PRIMARY KEY);
INSERT INTO x VALUES ('\000\001\002\003\004');
SELECT x FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM v0;
CREATE INDEX x ON x USING hash(x);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x VALUES ('������');
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v2 VALUES (1, '������ʾ��');
SELECT * FROM v2;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x) VALUES (1, 'first');
SELECT x FROM x AS $�p��;
SELECT * FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (v1 INT, x TEXT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS $�p��;
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE INDEX x ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x VALUES ('コンピュータプログラマー');
UPDATE x SET x = 'first, modified once';
SELECT x FROM x UNION SELECT v2 FROM x;
SELECT x FROM x;
REINDEX table v0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE TABLE x (x TEXT[]);
CREATE TABLE v0 (x CHAR(16)) PARTITION OF x FOR VALUES FROM (1) TO (100);
INSERT INTO v0 (v1, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT[]);
SELECT * FROM x;
SELECT * FROM x AS x;
SELECT x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x UNION SELECT x FROM x;
INSERT INTO x.x (v3, v4) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x VALUES (1);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x (x) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (x, x) VALUES (10, 'duck');
CREATE VIEW v5 AS SELECT * FROM v0;
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
UPDATE x SET x.x = 'first, modified once' WHERE x.x = 1;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES (1);
SELECT v1 FROM v2;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
SELECT x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (v1 INT, v2 TIMESTAMPTZ);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x NAME, x INT PRIMARY KEY);
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES (1, 'first');
CREATE VIEW x.x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x) VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT v1 FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('joe''s place', 1);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x.x (v1 TIMESTAMP);
CREATE VIEW x;
CREATE TABLE x.x (x VARCHAR(16), x INT, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
ALTER TABLE x DROP COLUMN x;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
CREATE INDEX v1 ON x(x);
UPDATE v0 SET x.x = 'name_ops';
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', 'duck');
CREATE VIEW x AS SELECT v1, v2 FROM x AS $�p��;
SELECT x FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x (v1) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE VIEW x.x AS SELECT * FROM x;
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET v1 = 'dummy_test_idx';
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS trigger LANGUAGE C IMMUTABLE;
CREATE TABLE x (x TEXT[], x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v3 DOUBLE PRECISION, v4 INT);
INSERT INTO x.x (v3, v4) VALUES (10, 'duck');
CREATE TEMPORARY TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT);
ALTER TABLE x RENAME TO x;
SELECT x;
CREATE TABLE x.x (x INT, x VARCHAR);
CREATE TABLE x.x (x INT);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT, x BYTEA);
UPDATE x SET x = 'first, modified once' WHERE x % 2 = 0;
CREATE TABLE x.x (x NAME);
INSERT INTO x VALUES (1, '�_A01��');
CREATE TABLE x.x (x DECIMAL, x TIMESTAMP, v3 CHAR);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = 'first, modified once';
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS trigger LANGUAGE C;
CREATE TABLE x (x TEXT[]);
ALTER TABLE x DROP COLUMN x;
REINDEX analyze t;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW x AS SELECT * FROM x;
CREATE INDEX ON x USING gin(x) WITH (fastupdate=off);
SELECT x FROM x AS $�p��;
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x (v3, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES (1);
INSERT INTO x (x, x) VALUES (456, 1);
CREATE TABLE x (x TEXT[]);
SELECT x, v2 FROM v0;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TIMESTAMP, v2 CHAR(16), v3 CHAR);
INSERT INTO x (v1) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x.x (x, v3) VALUES (10, 10);
INSERT INTO v0 VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE INDEX x ON x USING hash(x);
INSERT INTO v0 VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x (x, x) VALUES ('first', 'duck');
CREATE TABLE x (x INT, v2 TIMESTAMP);
INSERT INTO x.v2 VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE INDEX x ON x(x);
CREATE TABLE x (x BYTEA);
ALTER TABLE x RENAME TO v2;
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE INDEX x ON x.x(x);
INSERT INTO v0 VALUES (1);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x INT, x INT PRIMARY KEY);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX �v�Z�@�p��;
CREATE TABLE x (x TEXT[]);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x.x (x INT);
UPDATE x SET x = 'first, modified once';
SELECT x FROM v2;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE INDEX v1 ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS $�p��;
INSERT INTO x (x) VALUES (1, 'first');
CREATE TABLE x (x NAME);
ALTER TABLE x RENAME TO v2;
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('ho there');
CREATE VIEW x AS SELECT * FROM v0;
INSERT INTO v2 VALUES (1, 'first');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x(ABS(x));
CREATE TABLE x (x INT, x TIMESTAMP, x CHAR(16));
CREATE TABLE x.x (v1 INT, x TEXT[]);
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x VARCHAR, x INT);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x.x AS SELECT * FROM x;
UPDATE x SET v1 = 'name_ops_old';
CREATE VIEW x.x RETURNS INT LANGUAGE plsample AS SELECT x, x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (1, 'first');
INSERT INTO x.x (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TIMESTAMP);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT[]);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x AS $�p��;
SELECT v1;
CREATE INDEX v3 ON x USING spgist(x) INCLUDE (x, x);
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES (123, 'duck');
SELECT * FROM x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE v0 (v1 TEXT[], x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO v0 VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW v5 AS SELECT * FROM x;
CREATE TABLE x (x VARCHAR(16), x VARCHAR(16));
INSERT INTO x (x, x) VALUES (1, 2, 3);
SELECT v1 FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW v2 AS SELECT v1, x FROM x;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x TEXT[]);
CREATE INDEX v3 ON v0 USING gin(x) WITH (fastupdate=off);
CREATE TABLE x.x (x INT, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT);
CREATE TABLE x.x (x TIMESTAMP, x VARCHAR);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE x RENAME TO v2;
ALTER TABLE x RENAME TO v2;
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE v0 (x CHAR(16));
CREATE TABLE x.x (x VARCHAR(16), x INT, x TIMESTAMP);
CREATE TABLE x (x CHAR(16));
REINDEX table v0;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v2 VALUES (1, 34);
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE TABLE x (x NAME);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE TABLE x (x INT, x TEXT) RETURNS trigger LANGUAGE C AS $$SELECT 4$$;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x(x);
INSERT INTO x VALUES ('������');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x VARCHAR);
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 TIMESTAMPTZ);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (v1 CHAR(16));
CREATE VIEW x AS SELECT * FROM x;
CREATE VIEW x.x AS SELECT x, x FROM v0;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, v3) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x.x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x UNION SELECT v2 FROM v0;
SELECT x FROM x;
SELECT * FROM x AS x;
CREATE TABLE x (x INT);
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT v1 FROM x AS x;
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (v1) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x AS SELECT * FROM x;
SELECT x;
SELECT x FROM v0;
CREATE VIEW v2 AS SELECT x, x FROM x;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
ALTER TABLE x RENAME TO x;
CREATE VIEW x.x AS SELECT * FROM x;
SELECT v1 FROM x AS $�p��;
UPDATE x SET v1 = 3;
CREATE INDEX x ON x USING dummy_index_am(x);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE VIEW x.x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX client_min_messages;
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x TEXT, x TIMESTAMPTZ, x DECIMAL);
CREATE INDEX x ON v0(x);
INSERT INTO v0 (v1, v2) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (v1) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x.x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (v1 TEXT);
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT * FROM x AS x;
CREATE INDEX x ON x(x ~ x);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
UPDATE x SET v1 = 1 WHERE x.x = 1;
CREATE TABLE x (v1 INT, x TEXT);
SELECT x FROM x UNION SELECT v2 FROM x;
CREATE TABLE x.x (v1 INT, v2 VARCHAR, x VARCHAR, x VARCHAR);
CREATE INDEX x ON x USING hash(x);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE v0 (x TIMESTAMP, v2 INT, x NAME, v4 VARCHAR(16));
INSERT INTO x.x VALUES ('分B10中', 1);
CREATE TEMPORARY TABLE x (v1 INT);
SELECT * FROM x;
CREATE TABLE x (v1 BYTEA, x TEXT[], x DOUBLE PRECISION, v4 INT);
SELECT x, x FROM v0;
ALTER TABLE x RENAME TO x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (v1 INT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
ALTER TABLE x RENAME TO v2;
UPDATE x SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE INDEX x ON x.x(x);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x) VALUES (12, 34, 56);
UPDATE x SET x.x = 1 WHERE x % 2 = 0;
REINDEX table v0;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v2 AS SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x INT);
CREATE TABLE x.x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
UPDATE x SET x = 'first, modified once';
INSERT INTO x VALUES (12);
CREATE TABLE x (x INT);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
UPDATE x SET x = 'first, modified once' WHERE x.x = 'first, modified once';
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x TIMESTAMPTZ);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x DROP COLUMN x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (v1 INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x NAME, x CHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
UPDATE x SET v1 = '��Z01Ħ';
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
CREATE TABLE x.x (x INT, x NAME);
INSERT INTO x.x (x, v4) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TEMPORARY TABLE x (x INT, x TEXT);
INSERT INTO x (v3, x) VALUES ('��A01��', '機A01上');
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX v1 ON x.x(x ~ x);
ALTER TABLE x RENAME TO v2;
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
CREATE TABLE v0 (x CHAR(16), x INT);
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x.x AS SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT v1 FROM x AS x;
ALTER TABLE x RENAME TO x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (v1 INT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE INDEX v1 ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x (v1 INT);
INSERT INTO v0 VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x = '��Z01��';
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('��Z01��', '����ԥ塼���ץ�����ޡ�');
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x VALUES (56, 1);
CREATE TABLE x (x INT, x TEXT);
UPDATE x SET x = 'warning' /* Silence validation checks for strings */ WHERE x = 3;
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x.x (v3, v4) VALUES (1, 'first');
ALTER TABLE x RENAME TO x;
CREATE VIEW x.x AS SELECT x, x FROM x;
ALTER TABLE x RENAME TO x;
INSERT INTO x.x (x) VALUES (12, 34, 56);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('�_A01��', 'コンピュータディスプレイ');
REINDEX ��ٸ����;
ALTER TABLE x RENAME TO v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX table v0;
CREATE UNIQUE TEMPORARY TABLE x (x INT, x TEXT);
CREATE TABLE v0 (v1 TEXT[], v2 INT);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX �׻����Ѹ�;
INSERT INTO x.x VALUES ('コンピュータグラフィックス');
SELECT x FROM x UNION SELECT x FROM v0;
SELECT x FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 3;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x AS $�p��;
SELECT x FROM x AS x;
SELECT x FROM x AS x;
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
INSERT INTO v0 (x, v2) VALUES (1, '����ԥ塼���ץ�����ޡ�');
CREATE TABLE x (v1 INT, v2 TEXT[]);
CREATE TABLE x (x VARCHAR, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 INT);
INSERT INTO x (x) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE VIEW x AS SELECT * FROM v0;
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x.x (x TIMESTAMP);
CREATE INDEX x ON x(ABS(x));
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS INT LANGUAGE plsample;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET v1 = 3;
CREATE INDEX v1 ON x(x ~ x);
CREATE TABLE x.x (x INT, x INT, x INT) RETURNS VOID LANGUAGE plsample;
CREATE TABLE x (v1 BYTEA);
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TEXT, x INT);
SELECT x;
REINDEX table v0;
CREATE TABLE x (x TEXT[]);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
INSERT INTO v2 (v1) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x (x VARCHAR(16));
CREATE INDEX v3 ON x.x(x ~ x);
CREATE TABLE x (x VARCHAR(16));
REINDEX table v0;
ALTER TABLE x DROP COLUMN x;
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO v0 (v1) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x NAME, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT * FROM v0;
CREATE TABLE x (x INT, v2 VARCHAR, v3 CHAR(16));
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE v0 SET x.x = 3;
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
REINDEX table v0;
CREATE TABLE x (x INT) RETURNS VOID LANGUAGE plsample;
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE TABLE v0 (x INT, x INT, v3 CHAR(16), x VARCHAR);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x VALUES (1, 'first');
INSERT INTO v2 (x) VALUES ('������ʾ��', '��A01��');
SELECT x FROM v2;
SELECT x FROM v2;
SELECT v1, v2 FROM x AS x;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x CHAR(16));
SELECT x, x FROM v0;
REINDEX �v�Z�@�p��;
REINDEX table v0;
CREATE TABLE x (x INT PRIMARY KEY);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v3 ON x(x x);
SELECT x FROM x AS $�p��;
ALTER TABLE v0 DROP COLUMN x;
ALTER TABLE x DROP COLUMN x;
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT * FROM x;
SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v1, v2) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
REINDEX table v0;
INSERT INTO x (v1) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x NAME, x NAME);
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT * FROM x AS x;
CREATE TABLE x.x (v1 INT);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE v0 (x INT, v2 TIMESTAMPTZ);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT[]);
INSERT INTO v0 (x, v2) VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x.x = 'name_ops' WHERE x = '��Z01��';
CREATE INDEX x ON x USING btree(x);
ALTER TABLE x DROP COLUMN v1;
SELECT v1 FROM v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM v2;
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX x ON v0(ABS(x));
CREATE TABLE v0 (v1 VARCHAR(10));
CREATE INDEX v3 ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO x.x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE v0 (x NAME, v2 CHAR(16), x NAME, x TEXT);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x.x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
INSERT INTO x VALUES (1, 2, 3);
CREATE INDEX x ON x.x USING gin(x) WITH (fastupdate=off);
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE TABLE x (x INT);
CREATE INDEX x ON v0 USING btree(x);
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x.x (v1) VALUES ('�����', '������', 'ơA01��');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x.x (x INT PRIMARY KEY, x NAME);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX table v0;
SELECT x FROM x AS x;
CREATE TABLE x (x NAME);
CREATE TABLE x (x NAME, x TEXT);
CREATE TABLE x (x BYTEA, x INT, x DOUBLE PRECISION, x TIMESTAMPTZ);
INSERT INTO v5 (v3, x) VALUES ('分B10中', 'duck');
INSERT INTO x (x, x) VALUES (10);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO v0 (x, v2) VALUES ('����ȴ����Ƴ', 1);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE UNIQUE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TABLE x.x (x INT, x INT, v3 VARCHAR, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TEMPORARY TABLE x (x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW v2 AS SELECT * FROM v0;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x.x (x INT, x INT, x TIMESTAMPTZ);
SELECT v1, x FROM x;
UPDATE x SET x = 'first, modified once';
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO v0 (v1, v2) VALUES (1, '��Z01�E');
CREATE INDEX x ON x.x(x);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TIMESTAMPTZ);
SELECT x FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 'first');
REINDEX Ӌ��C���Z;
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TEMPORARY TABLE x.x (v1 INT);
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x RENAME TO v2;
SELECT x, x FROM v0;
UPDATE v0 SET x = 1 WHERE x = 'dummy_test_idx';
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 (v1) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
ALTER TABLE x DROP COLUMN x;
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TEMPORARY TABLE v0 (x INT);
UPDATE v0 SET x = 'first, modified once';
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x VARCHAR(16), x TEXT, v3 BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x.x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) INHERITS (x);
INSERT INTO v0 VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE x DROP COLUMN v1;
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x TEXT[], x TEXT[]);
ALTER TABLE x RENAME TO x;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x.x (v1 TEXT);
CREATE TABLE v0 (v1 INT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
SELECT x, x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (v1 VARCHAR(16), x VARCHAR(16));
CREATE TABLE v0 (v1 DOUBLE PRECISION);
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE x SET x = 'first, modified once';
SELECT v1 FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 (v1) VALUES (10);
CREATE TABLE v0 (x VARCHAR, v2 INT);
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v5 (v3, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO v2 VALUES ('first', 1);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('\000\001\002\003\004', 'duck');
CREATE INDEX v1 ON x.x(x);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES (1, 'first');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (v1 INT, x TEXT);
CREATE TABLE x.x (x BYTEA, x INT[], x TEXT[]);
SELECT x, x FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE INDEX v1 ON v0(x ~ x);
CREATE TABLE x (v1 INT);
ALTER TABLE x RENAME TO x;
SELECT * FROM x AS x;
CREATE TABLE x (x TIMESTAMP);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (v1 TEXT);
SELECT x, x FROM x AS x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x INT);
CREATE TABLE x.x (v1 CHAR(16)) RETURNS INT LANGUAGE plsample;
INSERT INTO x (x, x) VALUES (10, 10);
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
REINDEX table v0;
SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, v2) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, v4) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x INT);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, v2 TIMESTAMPTZ, v3 NAME);
SELECT * FROM x AS $�p��;
INSERT INTO x.x VALUES (1, 1);
INSERT INTO x.x (v1, x) VALUES (123, 456, 789);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS $�p��;
SELECT x, x FROM x;
CREATE INDEX x ON x.x(x);
CREATE TABLE v0 (x VARCHAR(16));
UPDATE x SET x = 'first, modified once' WHERE v1 = 3;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('�CA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX table v0;
CREATE TEMPORARY TABLE x (x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE v0 DROP COLUMN x;
SELECT v1 FROM x;
ALTER TABLE v0 RENAME TO x;
INSERT INTO x (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
REINDEX table v0;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (v1 INT, x INT, x NAME);
CREATE TABLE x (v1 BYTEA);
SELECT * FROM x AS x;
SELECT * FROM x AS x;
CREATE TABLE v0 (x INT, v2 INT, v3 CHAR);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMP, x INT PRIMARY KEY);
ALTER TABLE x RENAME TO v2;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX 計算機用語;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x.x (x CHAR(16));
INSERT INTO v0 VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT[]);
SELECT * FROM x;
CREATE TABLE v0 (x TIMESTAMP) INHERITS (x);
INSERT INTO x.x (x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, v2 TIMESTAMPTZ);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x INT, x TEXT) RETURNS INT LANGUAGE plsample;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x CHAR(16), x BYTEA);
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (v1, x) VALUES (10, '����ԥ塼������ե��å���');
SELECT * FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x.x (x TIMESTAMP, x VARCHAR);
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x (x INT);
SELECT * FROM v2;
CREATE INDEX x ON v0(ABS(x));
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (v1, x) VALUES ('������ʾ��', '��A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (v1 TIMESTAMPTZ, x INT, x TIMESTAMP);
CREATE INDEX v3 ON x.x(x);
CREATE TABLE x (x BYTEA, v2 INT);
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE v0 (x INT, v2 INT);
CREATE TABLE x (x INT, x TEXT) RETURNS VOID LANGUAGE plsample;
REINDEX ��ٸ����;
INSERT INTO v0 VALUES (1);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW x.x.x AS SELECT * FROM x;
SELECT * FROM v2;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX table v0;
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE v0 (x VARCHAR, x INT, x TEXT);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x BYTEA);
REINDEX table v0;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�');
INSERT INTO v0 VALUES ('分B10中');
ALTER TABLE v0 RENAME TO v2;
INSERT INTO x (x, v4) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE INDEX v3 ON x.x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TEMPORARY TABLE x (x INT);
INSERT INTO v0 (v1, v3) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (v1 BYTEA, x CHAR(16), x TEXT);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x DROP COLUMN x;
ALTER TABLE v0 DROP COLUMN v1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE v0 (v1 TIMESTAMP);
SELECT x, x FROM x AS $�p��;
SELECT * FROM v0;
ALTER TABLE x RENAME TO v2;
SELECT x, x FROM x AS x;
SELECT v1 FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x VARCHAR);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x RENAME TO v2;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
REINDEX SESSION AUTHORIZATION;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x.x (x DECIMAL, v2 INT(TEXT));
INSERT INTO x (v3, x) VALUES (1, 2, 3);
INSERT INTO x (v1, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x.x (x INT, x INT) INHERITS (x);
CREATE TABLE x (x INT, x TEXT);
CREATE TEMPORARY TABLE x (x INT, x TEXT);
SELECT x FROM x;
CREATE TABLE x (x INT[]);
UPDATE v0 SET x = 3;
UPDATE x SET x = '��Z01��' WHERE x.x = 3;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x CHAR(16));
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (v1) VALUES ('������');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE v0 (x NAME);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x(x);
ALTER TABLE v0 RENAME TO x;
REINDEX table v0;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TEMPORARY TABLE x.x (v1 TIMESTAMPTZ);
CREATE TABLE x.v0 (x TEXT, x BYTEA);
CREATE TABLE x (x INT[], x TEXT);
SELECT x FROM x;
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x TEXT);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT v1 FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x;
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x.x (x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (v1) VALUES (10);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (x INT[], v2 INT, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 INT);
CREATE TABLE x (x INT[]) WITH (x=3.5 /* ok */);
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
CREATE TABLE v0 (x BYTEA, x NAME);
INSERT INTO x (v1) VALUES ('����ԥ�`������ե��å���', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 3;
CREATE TABLE v0 (x TIMESTAMP);
CREATE TABLE x.x (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT PRIMARY KEY);
SELECT x, x FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x INT PRIMARY KEY) RETURNS VOID LANGUAGE plsample;
INSERT INTO x.x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE INDEX v3 ON x USING btree(x ~ x);
CREATE TABLE x.x (x INT, x INT);
CREATE TABLE x (x VARCHAR, x NAME, v3 CHAR);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x CHAR(16)) RETURNS trigger LANGUAGE C;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x;
UPDATE x SET x = 3;
INSERT INTO x.x (v1) VALUES ('�F�F���');
CREATE VIEW v2 AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v3 ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO x (x, x) VALUES (1, 789);
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE x DROP COLUMN x;
SELECT x, x FROM x AS x;
CREATE VIEW x AS SELECT x, v2 FROM v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT * FROM x AS x;
UPDATE v0 SET x = 'first, modified once' WHERE x = '��Z01Ħ';
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
REINDEX �׻����Ѹ�;
REINDEX table v0;
CREATE TABLE x (x INT[]) RETURNS VOID LANGUAGE C AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
SELECT * FROM x;
SELECT x, x FROM x;
INSERT INTO v5 (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE v0 (x TEXT, x VARCHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x TIMESTAMP, v2 BYTEA);
ALTER TABLE x RENAME TO v2;
UPDATE x SET x = 'first, modified once';
CREATE TABLE v0 (x CHAR(16), x NAME, v3 VARCHAR, x BYTEA);
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x, x FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (1);
SELECT v1 FROM x UNION SELECT v2 FROM v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE x RENAME TO v2;
CREATE TABLE v0 (x INT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT, x CHAR);
SELECT x FROM x;
CREATE TABLE x (v1 INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE x RENAME TO v2;
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE INDEX x ON v0 USING gin(v1) INCLUDE (x, x);
SELECT x FROM x AS x UNION SELECT x FROM v0;
REINDEX table v0;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE x RENAME TO x;
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x VARCHAR);
CREATE TABLE x (v1 VARCHAR(16));
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW x PARTITION OF x FOR VALUES FROM (1) TO (100) AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x, v2 FROM x;
SELECT v1 FROM x AS x;
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (v1) VALUES ('�q���~');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x INT) WITH (x=3.5 /* ok */);
REINDEX SESSION AUTHORIZATION;
SELECT v1 FROM x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) AS $$SELECT 4$$;
UPDATE v0 SET v1 = 3;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x BYTEA);
REINDEX analyze t;
CREATE INDEX x ON x USING hash(x);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) RETURNS VOID LANGUAGE C;
CREATE VIEW x AS SELECT v1, x FROM x AS x;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
UPDATE x SET v1 = '4MB' WHERE x = 'dummy_test_idx';
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE x (x VARCHAR(16), x INT);
UPDATE x SET x = 'first, modified once';
REINDEX table v0;
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x CHAR(16));
CREATE TABLE x.v0 (x TEXT);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x TEXT, v2 INT, x TIMESTAMP);
SELECT * FROM x AS x;
CREATE TABLE x (x INT);
SELECT v1 FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v2 VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE VIEW x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES (1);
SELECT * FROM x AS x;
SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x TIMESTAMP, x BYTEA, x VARCHAR(16));
CREATE TABLE x (v1 INT, v2 BYTEA);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO v0 VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
ALTER TABLE x RENAME TO x;
INSERT INTO v0 VALUES (1);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x AS x;
ALTER TABLE x DROP COLUMN x;
ALTER TABLE x DROP COLUMN v1;
REINDEX client_min_messages;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (v1 TEXT);
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x.v0 (x CHAR(16), v2 INT, x DOUBLE PRECISION, x INT PRIMARY KEY);
SELECT v1 FROM v0 UNION SELECT x FROM x;
INSERT INTO x (v1) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT * FROM x AS x;
ALTER TABLE x RENAME TO x;
CREATE TABLE x.x (x INT, x TEXT) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE TABLE x (v1 DECIMAL, x NAME);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE v0 (x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS x;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX table v0;
REINDEX table v0;
INSERT INTO x.x (x, x) VALUES (1, 'first');
CREATE TABLE x.x (x TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT[], x NAME);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v0 VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT[]);
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x (v3, v4) VALUES ('����ͼ��', '��B01��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x;
SELECT x FROM x UNION SELECT x FROM x AS x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (v1) VALUES (10);
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x INT);
CREATE TABLE x (v1 VARCHAR(16), x INT[]);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE INDEX x ON x.x(x ~ x);
CREATE INDEX x ON x(x);
INSERT INTO x (v1) VALUES (1, 'first');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x RENAME TO x;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT PRIMARY KEY);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x.x (v1) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 1 WHERE x.v1 = 3;
INSERT INTO x.x VALUES (1);
SELECT * FROM x;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
ALTER TABLE v0 RENAME TO x;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR(16));
ALTER TABLE x RENAME TO x;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x.x.v2 AS SELECT * FROM x;
INSERT INTO v0 VALUES (1);
SELECT * FROM x;
SELECT x, v2 FROM v0;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TIMESTAMP);
ALTER TABLE v0 DROP COLUMN v1;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM v2;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x TIMESTAMP, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x INT[], v2 TEXT, v3 CHAR);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT, x TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO v0 VALUES ('first');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = 'first, modified once';
UPDATE v0 SET x = 'first, modified once' WHERE x % 2 = 0;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT) WITH (x=3.5 /* ok */);
CREATE TABLE x (x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (v1 INT, x NAME);
INSERT INTO x.x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT[]);
UPDATE x SET x = 1 WHERE x.x = 1;
INSERT INTO v2 VALUES (123, 456, 789);
CREATE INDEX v3 ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (1, 1);
SELECT x, x FROM x AS x;
SELECT x, x FROM v0;
REINDEX ��ٸ����;
CREATE TABLE x (x TEXT);
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 1 WHERE x.x = 1;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX �t�Ӹ��;
INSERT INTO x (x, x) VALUES ('��Z01�E', 789);
CREATE VIEW x.x AS SELECT * FROM x;
SELECT *;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x VARCHAR, v2 VARCHAR);
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (v1 DECIMAL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
UPDATE x SET x = 3 WHERE x.x = 1;
SELECT x FROM x;
CREATE TABLE v0 (x VARCHAR);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x.x (v1 INT, v2 INT, x TIMESTAMP);
CREATE TABLE x (v1 VARCHAR(16), x TEXT, v3 CHAR);
INSERT INTO x.x VALUES (1);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TEMPORARY TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM v2;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
SELECT v1 FROM x;
SELECT * FROM x AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE v0 (x TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x AS x;
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 1 WHERE x = 'name_ops_old';
CREATE TABLE v0 (v1 INT);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
INSERT INTO v0 (v1, v2) VALUES (1, 'first');
SELECT * FROM x AS $�p��;
SELECT x;
CREATE TABLE v0 (x VARCHAR(16), v2 CHAR(16));
CREATE TABLE x (x BYTEA);
ALTER TABLE x RENAME TO v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO v0 (x, v3) VALUES (123, 456, 789);
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT[], x CHAR(16));
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TEMPORARY TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE v0 (x VARCHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x CHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
INSERT INTO x VALUES ('��B10��', 'first');
CREATE TABLE x (x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x.x (x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x INT);
SELECT x, x FROM v0;
CREATE TABLE x (x INT, x NAME, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v4 CHAR(16));
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
SELECT x FROM x AS $�p��;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE x DROP COLUMN x;
SELECT x FROM x UNION SELECT x FROM x;
CREATE INDEX v3 ON v0(x) WHERE x % 2 = 0;
CREATE INDEX x ON x(x);
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
UPDATE x SET v1 = '4MB';
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (v1 TEXT);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE INDEX v1 ON x(x);
SELECT * FROM x;
INSERT INTO v5 (v3, x) VALUES ('分B10中', 2);
CREATE INDEX x ON x.x(x);
SELECT v1 FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x TIMESTAMP, x INT PRIMARY KEY);
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (x, x) VALUES (1, 2, 3);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (v1 TIMESTAMPTZ);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x RENAME TO v2;
UPDATE x SET x = 1 WHERE x.x = 3;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT);
INSERT INTO x (v1, v2) VALUES ('�����', '������', 'ơA01��');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, option_int=5, option_real=3.1, option_enum='two', option_string_val=NULL, option_string_null='val');
INSERT INTO v0 VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO v0 VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (v1 INT, v2 CHAR(16), x DOUBLE PRECISION, x TIMESTAMP);
SELECT x FROM v0;
CREATE TABLE x (x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE VIEW x AS SELECT x, v2 FROM x AS x;
INSERT INTO v0 (v1, v3) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x AS SELECT x, x FROM v0;
SELECT v1 FROM x AS $�p��;
SELECT x, x FROM x AS $�p��;
SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TEMPORARY TABLE x.x (x TIMESTAMP);
SELECT x FROM v2;
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1, v2 FROM x;
CREATE TABLE x.x (x CHAR(16));
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT x;
REINDEX table v0;
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT PRIMARY KEY);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x (x, x) VALUES (10, '������ʾ��');
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW x.x AS SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
CREATE VIEW v2 AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x, x FROM x;
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO v0 VALUES ('�\���~');
INSERT INTO x.x VALUES (1, 'first');
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x (v1) VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x (x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE v0 DROP COLUMN x;
CREATE TABLE v0 (x BYTEA, x TEXT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE v0 (x INT);
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x TEXT);
ALTER TABLE x RENAME TO v2;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR);
INSERT INTO x VALUES (123, 456, 789);
CREATE TABLE x (v1 INT, v2 INT, x BYTEA, x TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 DECIMAL, x VARCHAR, x TIMESTAMP);
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT);
REINDEX ��ٸ����;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 3;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x (v1, v3) VALUES (10, 10);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES (10);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x NAME);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS x WHERE x LIKE '_Z%';
CREATE INDEX x ON x USING btree(x);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT);
SELECT x FROM x;
CREATE TABLE x (x INT, v2 INT);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM v0;
INSERT INTO v0 VALUES (1);
UPDATE x SET x = '��Z01��' WHERE x.x = 1;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS $�p��;
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('人Z01下');
SELECT v1 FROM x;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
INSERT INTO v0 (v1, v3) VALUES (10, '��Z01��');
INSERT INTO x (x, v4) VALUES (10, '����ԥ�`������ե��å���');
INSERT INTO x (v1) VALUES (10);
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (v1 INT, x VARCHAR(16), x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v4 INT);
ALTER TABLE v0 RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS VOID LANGUAGE C;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
ALTER TABLE x RENAME TO x;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE VIEW x AS SELECT x, x FROM v0;
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (v1 TEXT[]);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
INSERT INTO x.x VALUES (1);
SELECT x FROM x AS x;
INSERT INTO v0 (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x;
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v0;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x INT);
CREATE TABLE x.x (x BYTEA, v2 TEXT);
CREATE TABLE x (x CHAR(16)) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x RENAME TO x;
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (v1 TEXT);
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS x UNION SELECT x FROM x;
REINDEX ��ٸ����;
CREATE TABLE x (x INT[]);
SELECT * FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM v0 UNION SELECT x FROM x;
CREATE TABLE x (v1 INT, v2 INT, x NAME);
INSERT INTO x.x VALUES (1, '����ԥ塼���ǥ����ץ쥤');
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT[]);
CREATE TEMPORARY TABLE x (x INT[]);
CREATE TABLE v0 (v1 VARCHAR(16));
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x VALUES (1, 'ho there');
INSERT INTO v0 VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, v2 INT);
SELECT x FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX x ON x.x(x ~ x);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
SELECT x, x FROM x AS x;
REINDEX table v0;
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT);
CREATE TABLE x.x (v1 INT);
SELECT x FROM x;
SELECT v1 FROM x AS x UNION SELECT x FROM v0;
CREATE TABLE x (x INT, x NAME);
CREATE TABLE v0 (x BYTEA, x TEXT, x BYTEA);
CREATE TABLE x (x INT[]);
UPDATE v0 SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x;
REINDEX �׻����Ѹ�;
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE v0 (v1 INT, x VARCHAR);
SELECT * FROM v2;
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (v1 TEXT);
CREATE TABLE v0 (v1 INT);
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v2 VALUES ('コンピュータグラフィックス', '分B10中');
SELECT * FROM x AS x;
CREATE VIEW v5 AS SELECT * FROM x;
SELECT v1 FROM v0 UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW v2 AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS x;
CREATE TABLE x (x INT, x NAME, x DOUBLE PRECISION, x NAME);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
UPDATE x SET v1 = 3;
INSERT INTO v0 (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (v1, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW x AS SELECT * FROM x;
SELECT *;
CREATE TABLE x (x INT[]);
CREATE TABLE v0 (x VARCHAR(16));
SELECT x, x FROM x AS $�p��;
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE v0 (x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) RETURNS VOID LANGUAGE C;
REINDEX �׻����Ѹ�;
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
ALTER TABLE x RENAME TO x;
REINDEX �v�Z�@�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x RENAME TO v2;
SELECT * FROM x AS $�p��;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x VARCHAR(16));
CREATE TABLE x (x TEXT);
CREATE TABLE x (x INT);
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x TIMESTAMP, x CHAR(16));
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, v2 BYTEA, x INT[], v4 TEXT);
INSERT INTO x.x (x) VALUES (10);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE v0 (x INT);
INSERT INTO x (v1) VALUES ('����ԥ塼���ǥ����ץ쥤');
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x;
UPDATE x SET x = 0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT[]);
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x.x VALUES (1, 'first');
CREATE VIEW x AS SELECT * FROM x;
SELECT v1 FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x (x CHAR(16), x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE v0 (x VARCHAR, x DECIMAL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
UPDATE x SET x.x = 'name_ops' WHERE x.x = 'warning' /* Silence validation checks for strings */;
CREATE TABLE x (x INT[], v2 INT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (v1 INT);
CREATE TABLE x (x DOUBLE PRECISION);
CREATE TABLE v0 (x TEXT, v2 INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (v1 INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE VIEW v2 AS SELECT x, x FROM v0;
CREATE UNIQUE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE INDEX x ON x USING btree(x ~ x);
SELECT *;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x TIMESTAMPTZ, x NAME);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE v0 (v1 TEXT[]);
CREATE TABLE x.x (x TEXT);
REINDEX table v0;
SELECT x FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
SELECT x FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM x AS x;
SELECT * FROM v0;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x VALUES (1);
UPDATE v0 SET x = 1 WHERE x = 0;
UPDATE v0 SET x = 1 WHERE x.x = 1;
CREATE INDEX x ON x(x);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (v1 VARCHAR);
SELECT v1 FROM v2;
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x (x CHAR(16), x VARCHAR, x NAME);
SELECT x FROM x UNION SELECT x FROM x;
SELECT x, x FROM x;
SELECT * FROM x;
CREATE VIEW v2 AS SELECT * FROM v0;
CREATE TABLE x (v1 INT, v2 INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (v1 DOUBLE PRECISION);
INSERT INTO v5 (x, v4) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x DECIMAL);
CREATE TEMPORARY TABLE x (x INT PRIMARY KEY);
CREATE TABLE x.x (x TEXT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE v0 (v1 CHAR(16));
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (v1 VARCHAR, v2 DECIMAL);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT);
INSERT INTO x.x (x, v3) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x USING hash(x);
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
SELECT x FROM x AS $�p��;
INSERT INTO x (v3, v4) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE v0 SET x = 'first, modified once';
UPDATE v0 SET v1 = 'spgist' WHERE x % 2 = 0;
CREATE TABLE x.x (x VARCHAR(16), v2 INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x BYTEA);
UPDATE x SET x.x = '��Z01Ħ' WHERE x = '��Z01��';
SELECT x FROM x AS $�p��;
CREATE TABLE x.x (x VARCHAR, x CHAR(16));
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE v0 (x NAME, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR(16));
CREATE TABLE x (x INT, x TEXT) RETURNS VOID LANGUAGE plsample;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x CHAR(16));
SELECT * FROM x AS x;
SELECT v1 FROM x UNION SELECT x FROM x AS $�p��;
REINDEX SESSION AUTHORIZATION;
UPDATE x SET x = 'first, modified once';
SELECT x, x FROM x;
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES (1);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT);
CREATE TEMPORARY TABLE x (v1 INT);
REINDEX table v0;
CREATE VIEW x.x AS SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x (x, x) VALUES ('機A01上', 'duck');
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 BYTEA);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE TABLE x.x (x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE v0 SET x.x = 1 WHERE x.x = 1;
INSERT INTO x.x VALUES (1, 2, 3);
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT v1 FROM x AS $�p��;
CREATE TABLE x (x BYTEA, x INT[]);
CREATE TABLE x (x INT);
SELECT v1 FROM x AS x;
SELECT v1 FROM x UNION SELECT x FROM x;
INSERT INTO v0 (v1, v3) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
REINDEX table v0;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, v2) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE v0 (x INT PRIMARY KEY, v2 INT, x TIMESTAMPTZ, v4 INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) RETURNS VOID LANGUAGE C;
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x RENAME TO v2;
INSERT INTO v0 VALUES ('������');
UPDATE x SET x.x = 0;
SELECT x FROM x;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (v1 INT) RETURNS VOID LANGUAGE plsample;
SELECT v1 FROM v0 UNION SELECT x FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TEMPORARY TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x UNION SELECT v2 FROM x;
CREATE VIEW v2 AS SELECT * FROM x;
INSERT INTO x.v5 (v3, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE v0 (x VARCHAR, x INT, v3 TIMESTAMP, x INT PRIMARY KEY) AS SELECT * FROM x AS x;
INSERT INTO x.x (x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x DECIMAL, x INT, v3 DOUBLE PRECISION, x INT);
INSERT INTO x.x (v1) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
CREATE TABLE x (x VARCHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR);
ALTER TABLE x RENAME TO v2;
INSERT INTO v2 (x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x VARCHAR(16));
INSERT INTO v2 (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TEMPORARY TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE v0 (x INT, x TIMESTAMP, x TEXT);
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x.x (x INT[], x TIMESTAMP);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x VARCHAR(16), x VARCHAR(16));
CREATE INDEX v3 ON x USING btree(x ~ x);
SELECT x FROM x UNION SELECT v2 FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE VIEW v5 AS SELECT * FROM x AS x;
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x.x (v1) VALUES (456);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (v3, x) VALUES (2, 'ho there', '\004\003\002\001\000');
ALTER TABLE x DROP COLUMN v1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('人Z01下');
INSERT INTO v0 (x, v3) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT, v2 INT, x INT PRIMARY KEY);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM x AS $�p��;
CREATE INDEX x ON x.x(ABS(x));
CREATE INDEX x ON x USING btree(x);
ALTER TABLE v0 RENAME TO v2;
INSERT INTO v2 VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x AS $�p��;
CREATE TABLE v0 (x BYTEA, v2 INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES ('�F�F���');
CREATE TABLE v0 (x DOUBLE PRECISION);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('�����ѥ��������q');
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x, x FROM x;
CREATE TABLE x (x TIMESTAMPTZ, x TIMESTAMP);
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR(16));
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
CREATE TABLE v0 (v1 INT, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT * FROM x;
CREATE TABLE x (x INT, v2 CHAR(16));
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TEMPORARY TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x INT);
REINDEX table v0;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
INSERT INTO x (v3, v4) VALUES ('\000\001\002\003\004', 123);
CREATE TABLE x (x TIMESTAMP, x VARCHAR(16), x CHAR);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (1, '��B10��');
INSERT INTO x (x, v2) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS INT LANGUAGE plsample;
SELECT x FROM x;
CREATE TABLE x.x (v1 NAME, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX table v0;
INSERT INTO v2 VALUES (1, '����ͼ��');
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM v0;
ALTER TABLE x DROP COLUMN v1;
SELECT x FROM x UNION SELECT x FROM x;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT);
CREATE TABLE v0 (x NAME, x INT);
SELECT v1, v2 FROM x;
CREATE TABLE x.x (x INT);
SELECT * FROM x;
SELECT v1, v2 FROM x AS x;
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT);
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x AS x;
INSERT INTO x.x (x, v3) VALUES ('�CA01��', '�]���������q');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v0 (x, x) VALUES (10, 10);
CREATE INDEX v3 ON x(x);
INSERT INTO x.x (x, x) VALUES (1, '����ͼ��');
UPDATE x SET x = 'first, modified once' WHERE x = 3;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v2 (v1) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x INT, v2 VARCHAR(16));
CREATE TABLE x.x (x TEXT, x INT, v3 CHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x, v4) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE VIEW x.x AS SELECT x, v2 FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x INT);
CREATE TABLE v0 (x NAME, x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM x;
CREATE TABLE x (v1 INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT[]) RETURNS VOID LANGUAGE C;
UPDATE x SET x = 'name_ops' WHERE x.x = 1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT * FROM x AS $�p��;
CREATE TABLE x (v1 INT, x BYTEA, x VARCHAR(16), x INT);
CREATE TABLE x (x INT, x CHAR(16), x NAME);
ALTER TABLE v0 DROP COLUMN x;
SELECT v1 FROM x AS x UNION SELECT x FROM x;
CREATE INDEX v3 ON v0(x ~ x);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
UPDATE v0 SET x = 'first, modified once';
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT v1 FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX v1 ON x.x USING spgist(x) INCLUDE (x, x);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE v0 (x VARCHAR, x BYTEA);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM v2;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM v0;
CREATE TABLE x (x INT);
CREATE TEMPORARY TABLE x.x (x INT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT[], x INT PRIMARY KEY);
INSERT INTO x.v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) INHERITS (x);
ALTER TABLE x DROP COLUMN x;
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
REINDEX table v0;
INSERT INTO x (x, v2) VALUES (1, 'first');
UPDATE x SET x = 1 WHERE x.x = 1;
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, x TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW x.x AS SELECT x, v2 FROM x;
SELECT * FROM x;
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR(16), v3 INT[]);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x TEXT, x INT);
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES (789);
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = '人Z01下' WHERE x = 3;
INSERT INTO x (x, x) VALUES ('�q���~');
INSERT INTO x (x) VALUES ('�q���~', '�F�F���', '�_A01��');
UPDATE x SET x.x = 'name_ops_old';
SELECT v1 FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x AS x;
CREATE TEMPORARY TABLE x (v1 INT);
SELECT * FROM x;
CREATE TABLE x (x CHAR(16), x VARCHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT) PARTITION BY RANGE(x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM v2;
SELECT x FROM x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TEMPORARY TABLE x (x VARCHAR(16));
CREATE TABLE x (x VARCHAR);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (1, 'first');
SELECT x, v2 FROM x AS x;
CREATE TABLE x (v1 TEXT, x CHAR(16), x NAME, v4 VARCHAR(16));
CREATE TABLE x (x CHAR(16));
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX SESSION AUTHORIZATION;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE TABLE x (x INT) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE VIEW x.x AS SELECT v1, x FROM x;
INSERT INTO x VALUES ('ho there', 12);
INSERT INTO x.x (v1, v3) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('����ȴ����Ƴ', '�]���������q');
SELECT x FROM x;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO v2 VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x TIMESTAMP);
INSERT INTO x (x) VALUES (1, 'first');
SELECT x FROM x AS x;
CREATE TEMPORARY TABLE v0 (x INT);
SELECT x FROM x;
SELECT x FROM x;
INSERT INTO x (x) VALUES ('���Գ���Ա');
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT[]);
SELECT * FROM v0;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM x AS x;
CREATE TABLE v0 (v1 NAME);
INSERT INTO x.x VALUES (1, 1);
REINDEX ���������;
SELECT x FROM x;
ALTER TABLE x RENAME TO v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT, x TEXT, x CHAR);
ALTER TABLE x RENAME TO v2;
CREATE TABLE v0 (x INT PRIMARY KEY);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX x ON x USING hash(x);
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, x) VALUES (1, 2, 3);
SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT * FROM x AS x;
ALTER TABLE v0 RENAME TO v2;
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO v2 (x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW v5 AS SELECT * FROM v0;
SELECT * FROM v2;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (x INT, x CHAR(16));
CREATE VIEW v2 AS SELECT * FROM x AS x;
UPDATE x SET x = '��Z01Ħ' WHERE v1 = '��Z01Ħ';
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
UPDATE x SET v1 = 3;
REINDEX table v0;
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT x FROM v0 UNION SELECT v2 FROM x AS x;
CREATE TABLE v0 (x BYTEA, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ);
UPDATE v0 SET v1 = 1 WHERE x.x = 1;
INSERT INTO v2 VALUES ('����ͼ��', '��B01��');
INSERT INTO x (x, v2) VALUES (1, 1);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (v1) VALUES ('������');
UPDATE x SET x = 3;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v0 (x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE v0 (v1 INT);
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA) RETURNS INT LANGUAGE plsample AS $$   Example of source with text result. $$;
INSERT INTO x.x (v1) VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x FROM v0 ORDER BY x;
CREATE TABLE v0 (x INT[]);
REINDEX ���������;
REINDEX �t�Ӹ��;
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE v0 (x INT);
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN v1;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (x CHAR(16), x TEXT);
CREATE VIEW v2 AS SELECT * FROM x AS x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
CREATE TABLE x (x INT, v2 TEXT);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x TIMESTAMP);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x BYTEA, v2 DECIMAL);
CREATE TABLE x (v1 INT);
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x UNION SELECT x FROM x;
INSERT INTO x (x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
UPDATE x SET x = 'first, modified once';
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE TABLE v0 (x INT, x TEXT);
SELECT x FROM x AS x;
INSERT INTO x.x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT, x TEXT[]);
INSERT INTO x (x, x) VALUES (10);
UPDATE x SET x = 3;
SELECT x FROM x UNION SELECT v2 FROM v0;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 BYTEA, x DOUBLE PRECISION, x INT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT PRIMARY KEY, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) RETURNS INT LANGUAGE plsample AS $$SELECT 4$$;
CREATE TABLE x (x INT);
SELECT x FROM x AS x;
SELECT v1 FROM v0 UNION SELECT x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (v1 VARCHAR(16), v2 INT);
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���');
SELECT x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x FROM x;
INSERT INTO x (x, v2) VALUES (1, '分B10中');
CREATE TABLE v0 (v1 INT, v2 INT, v3 DOUBLE PRECISION, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x BYTEA, x VARCHAR, x CHAR(16), x INT PRIMARY KEY);
UPDATE x SET x = '��Z01Ħ';
REINDEX table v0;
CREATE TABLE x (x VARCHAR(16), x CHAR(16));
CREATE TABLE x (x INT[]) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C AS 'MODULE_PATHNAME';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (v1, v3) VALUES ('����', 10);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES (1);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT v1 FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE VIEW x AS SELECT x, x FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
ALTER TABLE x DROP COLUMN x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE v0 RENAME TO v2;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x CHAR(16), x INT PRIMARY KEY);
CREATE TABLE v0 (x INT, x BYTEA, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x NAME, v2 INT, v3 CHAR);
CREATE TABLE x (x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME, x NAME);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT *;
CREATE TABLE x (x INT, x INT[]);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16)) RETURNS VOID LANGUAGE sql AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO v0 VALUES (1);
SELECT x FROM x AS x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x (v1) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x AS SELECT v1, v2 FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT, v3 DOUBLE PRECISION, v4 TIMESTAMPTZ);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x DROP COLUMN x;
INSERT INTO x VALUES (1, 'first');
REINDEX table v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x VARCHAR);
SELECT x FROM x AS x UNION SELECT x FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
UPDATE v0 SET x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
CREATE TABLE v0 (x TEXT) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x.v1 = 1 WHERE x = 'spgist';
CREATE INDEX x ON x.x(x);
CREATE TEMPORARY TABLE x (x INT PRIMARY KEY);
CREATE INDEX x ON x.x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x (x CHAR(16), x INT);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x VALUES ('������ʾ��', '��A01��');
SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v0;
ALTER TABLE x DROP COLUMN x;
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 VALUES ('ho there');
CREATE TABLE v0 (x TIMESTAMP, x INT, v3 DOUBLE PRECISION, x TIMESTAMP);
CREATE TABLE x (x INT);
CREATE TABLE v0 (x INT, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x RENAME TO x;
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET v1 = 3;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW x.x AS SELECT x, x FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (1, 'first');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x CHAR(16));
INSERT INTO x.x VALUES ('����ͼ��', '��B01��');
CREATE TABLE v0 (x INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT PRIMARY KEY, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
UPDATE x SET x.v1 = 3;
INSERT INTO x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT PRIMARY KEY);
SELECT * FROM x;
INSERT INTO x (v1) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (v1 INT);
INSERT INTO x VALUES (1, 1);
SELECT v1 FROM x UNION SELECT v2 FROM x AS $�p��;
SELECT * FROM v0;
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
UPDATE x SET x = '��Z01��' WHERE x.x = 1;
CREATE TABLE v0 (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v0 VALUES (1, 'joe''s place', '\000\001\002\003\004');
REINDEX analyze t;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
REINDEX track_commit_timestamp;
CREATE INDEX v1 ON x.x USING btree(x ~ x);
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM v2;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT PRIMARY KEY);
INSERT INTO x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
REINDEX ���������;
CREATE TABLE v0 (v1 INT, v2 DECIMAL);
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES (1, 1);
CREATE INDEX x ON x(x);
CREATE VIEW x.x AS SELECT * FROM x AS x;
SELECT x FROM v0 UNION SELECT x FROM x AS $�p��;
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT x FROM x AS x UNION SELECT v2 FROM v0;
INSERT INTO v0 (v1, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT * FROM x;
CREATE TABLE x.x (x INT, x INT, x INT[]);
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES (1, 1);
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x (x, x) VALUES (1, 2, 3);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM v0;
CREATE TABLE x.x (v1 TIMESTAMPTZ);
CREATE INDEX x ON x USING btree(x ~ x);
INSERT INTO v0 (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
UPDATE v0 SET v1 = 1 WHERE x.x = 1;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM x UNION SELECT v2 FROM x AS x;
SELECT x FROM x AS $�p��;
SELECT * FROM x AS $�p��;
INSERT INTO v5 (v3, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x NAME, x INT);
INSERT INTO x (x, x) VALUES (1, 'first');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x VALUES (1, 'first');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM v2;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT) RETURNS VOID LANGUAGE plsample AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x AS $�p��;
CREATE TABLE x (x VARCHAR, x INT);
UPDATE x SET x = 'first, modified once' WHERE x % 2 = 0;
CREATE TABLE v0 (x BYTEA, v2 INT);
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE TABLE v0 (v1 VARCHAR);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP) INHERITS (x);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x NAME, x VARCHAR, x NAME);
CREATE TABLE x (x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (10, 'duck');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (10, '��A01��');
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE INDEX x ON v0(x) WHERE x % 2 = 0;
CREATE VIEW v2;
INSERT INTO x.x (x) VALUES ('���Գ���Ա', '��Z01��');
UPDATE x SET v1 = 1 WHERE x.x = 1;
CREATE TEMPORARY TABLE v0 (x VARCHAR(16));
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_pred;
SELECT v1, v2 FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x VARCHAR);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES ('�_A01��', 1);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT, x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE v0 SET v1 = 1 WHERE x = '人Z01下';
CREATE TABLE v0 (v1 INT, x TIMESTAMP);
SELECT * FROM x AS $�p��;
SELECT x FROM x;
REINDEX table v0;
CREATE TABLE x (x INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
INSERT INTO x (x, x) VALUES (10);
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x.x (x NAME);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 INT, x VARCHAR(16));
SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT x, x FROM v0;
INSERT INTO x.x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x (x NAME, x INT, x TEXT);
UPDATE x SET x = 'first, modified once';
SELECT x FROM v0;
SELECT v1 FROM x AS x UNION SELECT v2 FROM x;
CREATE TABLE x.x (v1 INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX table v0;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT[]);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX v1 ON v0(ABS(x));
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX �׻����Ѹ�;
SELECT v1 FROM x;
REINDEX �t�Ӹ��;
CREATE TABLE v0 (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v0 (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT[]);
INSERT INTO v2 (x) VALUES ('����');
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW x.x AS SELECT x, x FROM v0;
CREATE TABLE x (v1 INT, v2 INT, x INT[], x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x BYTEA);
CREATE TABLE v0 (x INT, x NAME);
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT x FROM v0 UNION SELECT v2 FROM x AS x;
SELECT x FROM v2;
UPDATE x SET x = 'first, modified once';
CREATE TABLE v0 (x CHAR(16));
CREATE TABLE x (x TEXT, v2 INT);
CREATE TABLE x (x VARCHAR(16));
CREATE INDEX x ON x USING btree(x);
SELECT x FROM x AS $�p��;
INSERT INTO x.x (v1, x) VALUES (1, '�]���������q');
CREATE TEMPORARY TABLE x.v0 (x BYTEA);
SELECT v1 FROM x;
SELECT x, x FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16));
CREATE TABLE x (x INT, x TEXT);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
SELECT x FROM v0;
CREATE TABLE x.x (v1 TIMESTAMPTZ, v2 INT, x INT PRIMARY KEY);
CREATE VIEW x AS SELECT v1, x FROM x;
CREATE TABLE x (x INT, x TEXT) WITH (x=3.5 /* ok */);
ALTER TABLE x DROP COLUMN x;
INSERT INTO x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT PRIMARY KEY);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x TIMESTAMP, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x CHAR);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX v3 ON v0 USING gin(x) WITH (option_enum=NULL);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE VIEW x.x AS SELECT v1, x FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x AS x;
INSERT INTO x VALUES (12, 34, 56);
INSERT INTO v5 (v3, v4) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW x AS SELECT * FROM x;
SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES (10);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x AS x;
CREATE TABLE x (v1 INT, v2 VARCHAR(16));
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (x, x) VALUES ('��B01��', 1);
CREATE TABLE x.x (v1 INT, x TEXT);
INSERT INTO x (v1, v3) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x, x FROM x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
UPDATE v0 SET x = 3;
INSERT INTO x (x, v2) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x DOUBLE PRECISION);
SELECT x, x FROM v0;
INSERT INTO x.x VALUES (1, 'joe''s place', '\000\001\002\003\004');
REINDEX table v0;
REINDEX table v0;
CREATE INDEX v3 ON x(v1);
INSERT INTO x.x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x DROP COLUMN x;
ALTER TABLE x DROP COLUMN x;
SELECT * FROM x AS $�p��;
INSERT INTO x.x (v1, v2) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (v1) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT[], x INT);
CREATE TABLE v0 (v1 VARCHAR);
UPDATE v0 SET x = 'first, modified once' WHERE x = 3;
CREATE TABLE x (x INT, x TEXT);
CREATE TEMPORARY TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM x AS x;
SELECT x FROM x AS $�p��;
INSERT INTO x VALUES ('����ԥ�`������ե��å���');
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
INSERT INTO v2 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM v0;
INSERT INTO x.x VALUES ('�F�F���');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (10, 10);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (v3, v4) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x BYTEA, x VARCHAR(16));
ALTER TABLE x RENAME TO v2;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (v1 TEXT);
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT x FROM x UNION SELECT x FROM v0;
UPDATE x SET x = 'spgist' WHERE x.x = 3;
CREATE VIEW x.x AS SELECT * FROM x AS x;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x.x (x) VALUES (10);
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x VARCHAR, x INT[]);
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT);
INSERT INTO x.x VALUES (1);
CREATE TABLE x (x BYTEA, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TEMPORARY TABLE x (x TIMESTAMP);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー');
UPDATE x SET x = 'first, modified once';
SELECT v1 FROM x AS x UNION SELECT x FROM v0;
INSERT INTO x (v1) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x TEXT, v2 INT, x DECIMAL);
SELECT * FROM x AS x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE v0 (x NAME);
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (v1 VARCHAR(16), x VARCHAR, x INT, x INT[]);
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS TEXT LANGUAGE C IMMUTABLE;
CREATE TABLE x (x INT);
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x BYTEA);
SELECT x, x FROM x AS x;
INSERT INTO x.x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x (x) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x, x FROM x AS $�p��;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
INSERT INTO x (x, x) VALUES (12, 'duck');
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x.x (v1 INT, x INT PRIMARY KEY, x TEXT);
UPDATE x SET x = 3;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x INT[], x INT PRIMARY KEY);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT);
SELECT v1 FROM x AS x UNION SELECT x FROM x;
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) PARTITION BY RANGE(x);
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
REINDEX table v0;
CREATE TABLE x.x (x TIMESTAMP, x TIMESTAMP);
SELECT x FROM x AS x;
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TEMPORARY TABLE x (x INT);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x.x (x, v4) VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x BYTEA, x INT(16));
INSERT INTO x VALUES (1);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
INSERT INTO v0 VALUES ('����ͼ��', '��B01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (v1 INT(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x (x) VALUES (10);
CREATE TABLE x (x DOUBLE PRECISION);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT);
INSERT INTO x (v1) VALUES (10);
CREATE TABLE x (v1 INT);
UPDATE v0 SET v1 = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
CREATE TABLE v0 (x INT PRIMARY KEY);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE VIEW x.x AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('�]���������q');
INSERT INTO v0 VALUES ('\000\001\002\003\004');
INSERT INTO x VALUES ('ơA01��', '����ԥ塼������ե��å���');
CREATE TABLE v0 (x INT, x INT, v3 CHAR);
CREATE TABLE x (x INT);
REINDEX table v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO x (v1) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO v0 VALUES (1);
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x) VALUES (1, 'first');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x VARCHAR, v2 INT, x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (x INT, x NAME, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE VIEW x.x AS SELECT * FROM x AS x;
SELECT * FROM x;
CREATE TABLE x (x INT[], x CHAR(16), x INT[]);
SELECT v1 FROM x AS x;
CREATE INDEX x ON x.x(ABS(x));
SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS TEXT LANGUAGE plsample;
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x BYTEA);
REINDEX table v0;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x;
SELECT * FROM x AS x;
CREATE TABLE x (x INT[], x NAME);
CREATE TABLE x (v1 VARCHAR(16));
CREATE TEMPORARY TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (v1 INT, x BYTEA);
INSERT INTO v0 (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x.x = 'spgist';
CREATE TABLE x.x (v1 INT, v2 INT[], v3 VARCHAR(16), x CHAR(16));
INSERT INTO v0 (x, v3) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
UPDATE v0 SET x = 'warning' /* Silence validation checks for strings */;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT[]);
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x.x AS SELECT * FROM x AS x;
UPDATE x SET x.x = '4MB' WHERE x.x = 1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS VOID LANGUAGE plsample;
INSERT INTO x.x (x) VALUES (10);
CREATE INDEX v1 ON x.x USING btree(x ~ x);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x INT);
CREATE VIEW v2 AS SELECT * FROM x AS x;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x.x (x INT, x INT, x TIMESTAMP);
CREATE UNIQUE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
REINDEX table v0;
SELECT * FROM x AS x;
CREATE TABLE x.x (v1 TIMESTAMP);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE x.x (x INT);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x.x VALUES (1, 'first');
CREATE VIEW v2 AS SELECT * FROM x AS x;
INSERT INTO x VALUES (1, 1);
CREATE TABLE x.v0 (x CHAR(16), v2 INT[]);
CREATE TABLE x.x (x INT PRIMARY KEY);
REINDEX table v0;
CREATE INDEX v3 ON x.x USING btree(x ~ x);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES ('コンピュータプログラマー');
CREATE TABLE x (v1 INT, x INT, v3 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
CREATE INDEX x ON v0(ABS(x));
SELECT x, v2 FROM x;
INSERT INTO x.x (v3, x) VALUES (10, 'duck');
INSERT INTO x (v1) VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE v0 (x NAME, x TEXT);
INSERT INTO v2 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x AS SELECT x, x FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO v5 (x, v4) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE UNIQUE TABLE x.x (v1 INT, x INT);
INSERT INTO v0 (v1, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v2 VALUES (1, 'first');
ALTER TABLE v0 RENAME TO v2;
CREATE INDEX x ON x USING dummy_index_am(x);
INSERT INTO x (v1) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT[]);
SELECT v1 FROM x AS x;
ALTER TABLE x RENAME TO x;
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
SELECT v1 FROM x;
CREATE TABLE x (x TEXT);
CREATE TABLE x.x (x VARCHAR(16));
INSERT INTO x (x, x) VALUES (56);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x AS $�p��;
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX table v0;
INSERT INTO x (x, v3) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
ALTER TABLE v0 RENAME TO x;
CREATE INDEX v3 ON v0 USING btree(x);
CREATE TABLE x (x VARCHAR, v2 INT);
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x (x) VALUES ('�����');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
REINDEX �׻����Ѹ�;
CREATE TABLE x (x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT, v2 INT, x TEXT, x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x BYTEA, x CHAR);
UPDATE x SET x.x = 0 WHERE x.x = 1;
SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x TIMESTAMP, v2 INT[]);
CREATE TABLE x.x (x VARCHAR);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x.x (x INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (v1 CHAR(16), v2 INT, x VARCHAR, x VARCHAR);
CREATE TABLE x (x INT PRIMARY KEY) RETURNS TEXT LANGUAGE C;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE INDEX v3 ON x(x);
UPDATE x SET x.x = 'spgist';
CREATE TABLE x (x INT);
CREATE INDEX x ON v0(ABS(x));
CREATE TABLE v0 (x TIMESTAMP);
SELECT * FROM x;
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
SELECT * FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v1, v3) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x VARCHAR);
INSERT INTO x (x, x) VALUES (10, 'duck');
SELECT v1 FROM x AS x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS $�p��;
INSERT INTO x.x (v1) VALUES ('����ͼ��', '��B01��');
INSERT INTO x.x (v1) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE INDEX v1 ON x USING spgist(x) INCLUDE (x, x);
INSERT INTO v0 VALUES ('分B10中');
CREATE TEMPORARY TABLE x.x (v1 INT);
INSERT INTO v5 (x, v4) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x BYTEA);
INSERT INTO x (x, x) VALUES (10);
SELECT x, x FROM v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 INT);
SELECT * FROM x;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT * FROM x;
CREATE TABLE v0 (x CHAR(16), x TEXT, x DOUBLE PRECISION, x INT);
INSERT INTO x VALUES (1, 'first');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1, x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, v2) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE VIEW v2 AS SELECT * FROM x AS x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT, v2 INT);
CREATE INDEX v1 ON v0(ABS(x)) WHERE x % 2 = 0;
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
SELECT x FROM x AS $�p��;
INSERT INTO x VALUES (1);
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x, v4) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (x, v2) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO v2 VALUES (1, '����ԥ塼���ǥ����ץ쥤');
SELECT x FROM x AS $�p��;
SELECT x FROM x AS x;
CREATE INDEX x ON x.x(ABS(x));
CREATE INDEX v1 ON x(v1);
CREATE INDEX x ON x USING hash(x);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM x;
SELECT x FROM v0 UNION SELECT v2 FROM x AS $�p��;
SELECT x FROM x;
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
UPDATE v0 SET x = 1 WHERE x.x = 1;
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TEMPORARY TABLE v0 (x INT PRIMARY KEY);
SELECT v1, x FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 VARCHAR, x CHAR(16));
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT v1 FROM x;
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x.x (x INT, x INT, x INT);
UPDATE v0 SET x = 'warning' /* Silence validation checks for strings */;
CREATE TABLE x.x (x INT, x CHAR(16));
CREATE TABLE x.x (x INT, x INT);
SELECT x FROM x UNION SELECT x FROM x AS x;
INSERT INTO x.x VALUES ('ӡ��ϴǹȴ����Ƴ', '����ȴ����Ƴ');
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x DECIMAL);
CREATE TABLE x (x NAME, v2 INT);
CREATE TABLE v0 (x INT, x INT);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW v2 AS SELECT * FROM v0;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x;
INSERT INTO v2 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO v2 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x INT[], x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (v1, v2) VALUES (1, 789);
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('joe''s place');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x VARCHAR);
UPDATE v0 SET v1 = 1 WHERE x.x = 1;
SELECT * FROM x AS x;
CREATE INDEX x ON x.x(x);
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x, v2 FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
SELECT v1 FROM x AS x UNION SELECT x FROM x;
CREATE UNIQUE TABLE x.x (x INT, x INT, x INT);
CREATE VIEW v2 AS SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT, x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES (123, 456, 789);
CREATE TABLE v0 (x INT[], x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT * FROM x AS $�p��;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS x;
INSERT INTO x.x (v1, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x (x) VALUES ('�\���~');
INSERT INTO x VALUES (1, 'first');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (10);
CREATE INDEX x ON x USING dummy_index_am(x);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
REINDEX ��ٸ����;
INSERT INTO v0 VALUES ('������ʾ��', '��A01��');
SELECT * FROM x AS $�p��;
CREATE TABLE x.x (v1 NAME, x NAME);
CREATE TABLE x.x (v1 TIMESTAMP);
CREATE TABLE x.x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 BYTEA, x NAME, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES (1);
CREATE VIEW x RETURNS INT LANGUAGE C AS SELECT * FROM x AS x;
CREATE TABLE x (x INT);
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT * FROM x AS $�p��;
SELECT * FROM x;
CREATE TABLE x (x DECIMAL);
INSERT INTO x.x (v1) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT v1 FROM x;
SELECT x FROM x;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x INT, x TEXT) RETURNS INT LANGUAGE C;
REINDEX table v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX table v0;
INSERT INTO x (x, x) VALUES (12, 34, 56);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE v0 (x BYTEA, v2 TIMESTAMP);
CREATE TABLE v0 (v1 INT, x INT, x CHAR);
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x.x (x TIMESTAMP, x NAME);
INSERT INTO x.x (x, v4) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x NAME, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT v1 FROM x UNION SELECT v2 FROM v0;
CREATE TABLE x.x (x VARCHAR, x BYTEA, x INT[]);
CREATE TABLE x (x INT);
CREATE TABLE x.x (x TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (v1 INT[], v2 INT, x DOUBLE PRECISION, v4 INT);
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x INT, x BYTEA);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT v1, x FROM x;
CREATE INDEX x ON x USING btree(x ~ x);
INSERT INTO v0 (x) VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x RENAME TO v2;
SELECT v1 FROM x UNION SELECT v2 FROM v0;
INSERT INTO x (x, v2) VALUES (1, '����ͼ��');
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMP) WITH (x=3.5 /* ok */) AS $$SELECT 4$$;
CREATE TABLE x.x (v1 DECIMAL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW x AS SELECT * FROM x AS x;
UPDATE v0 SET x = 3;
ALTER TABLE v0 DROP COLUMN v1;
SELECT * FROM x AS x;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
INSERT INTO v0 (v1, v2) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', 1);
CREATE TABLE x.x (x INT, v2 TEXT);
CREATE TABLE x.x (x INT);
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (v1 INT, x CHAR(16), x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x CHAR(16));
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT);
INSERT INTO x (v1) VALUES (456);
CREATE TABLE x.x (v1 INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (v1 TIMESTAMPTZ, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x) VALUES ('���Գ���Ա');
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (v1 INT);
CREATE TABLE x (x NAME, v2 VARCHAR(16), x INT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
UPDATE v0 SET x = 3;
CREATE VIEW x AS SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x VARCHAR(16), x BYTEA, v3 CHAR);
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM v0;
INSERT INTO x.x VALUES ('�q���~', '�F�F���', '�_A01��');
REINDEX �׻����Ѹ�;
INSERT INTO v0 VALUES (1);
CREATE VIEW x.x RETURNS trigger IMMUTABLE STRICT LANGUAGE C AS SELECT x, x FROM x;
SELECT x FROM x AS x;
INSERT INTO v2 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO v2 (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT x FROM x AS x;
CREATE INDEX x ON x USING hash(x);
SELECT v1 FROM x AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM v0 AS $�p��;
CREATE INDEX x ON x.x USING dummy_index_am(x);
INSERT INTO x.x (x) VALUES ('\004\003\002\001\000');
CREATE INDEX v3 ON x.x(x x);
CREATE TABLE x.x (x TIMESTAMP, x INT);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x.x (x INT, x INT);
CREATE TABLE x (x TIMESTAMP, x BYTEA);
CREATE TABLE x (x INT[]);
SELECT * FROM x;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT, x INT[]);
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE VIEW x.x AS SELECT * FROM x AS x;
SELECT x, x FROM x AS x;
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE TABLE x (x BYTEA, v2 INT, x CHAR(INT));
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM x AS $�p��;
SELECT x FROM v0;
CREATE TABLE x.x (x INT PRIMARY KEY);
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME);
SELECT * FROM x AS x;
SELECT x FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW v2 AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT);
SELECT x FROM x;
SELECT x FROM x UNION SELECT x FROM x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT[]);
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x AS SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x;
CREATE VIEW v5 AS SELECT * FROM x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (v1 INT);
SELECT v1 FROM x;
SELECT x FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE x (x INT, x TEXT, x BYTEA) PARTITION BY RANGE(x);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT x, v2 FROM x AS $�p��;
SELECT * FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT x FROM x AS x;
CREATE TABLE v0 (x INT[]);
CREATE TABLE x (x INT PRIMARY KEY, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE VIEW v2 AS SELECT * FROM x AS x;
UPDATE x SET v1 = 1 WHERE x.x = 1;
CREATE VIEW x.x AS SELECT * FROM x AS x;
SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT v1 FROM x AS $�p��;
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x.x (x, v2) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT * FROM x AS x;
INSERT INTO x VALUES (12, 34, 56);
REINDEX table v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM v0;
CREATE UNIQUE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE TABLE x.x (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x INT, x BYTEA, x TIMESTAMP);
CREATE TABLE v0 (x CHAR(16)) RETURNS TEXT LANGUAGE plsample;
CREATE TABLE v0 (x INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (v1 INT, x CHAR(16));
SELECT x FROM x AS $�p��;
SELECT * FROM x;
INSERT INTO x.x (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM x;
SELECT x FROM x;
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (v1 INT);
ALTER TABLE x RENAME TO v2;
SELECT x FROM x AS x;
CREATE INDEX x ON v0 USING hash(x);
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX �׻����Ѹ�;
REINDEX ��ٸ����;
INSERT INTO x (x, x) VALUES (10, 'duck');
SELECT x FROM x AS x;
CREATE TABLE x (x INT[]);
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT[]);
UPDATE x SET x = 'name_ops_old' WHERE x.x = 1;
INSERT INTO x (x, x) VALUES ('ʬB10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX table v0;
CREATE TABLE x (v1 VARCHAR, v2 INT, x TIMESTAMP);
CREATE TABLE x (x INT(INT));
CREATE TABLE v0 (x TIMESTAMP, v2 INT, x VARCHAR(16), x CHAR(16));
REINDEX table v0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW v2 AS SELECT * FROM x AS x;
INSERT INTO v0 (x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE TABLE x (v1 INT, x INT[], v3 VARCHAR(16));
CREATE TABLE x.x (x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT[]);
SELECT x FROM x AS $�p��;
SELECT x FROM v0 AS x UNION SELECT x FROM x;
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x = 3;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v2 (x) VALUES ('����');
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
CREATE TABLE v0 (x NAME, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x USING btree(x);
INSERT INTO x (x, x) VALUES ('��Z01Ħ');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (v1 CHAR(16), x INT[], x CHAR);
CREATE TABLE v0 (x INT, x NAME);
UPDATE v0 SET x = 'first, modified once';
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('�s�y�~');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP) PARTITION BY RANGE(x);
CREATE TABLE x.x (v1 VARCHAR(16), x VARCHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x UNION SELECT v2 FROM x;
SELECT * FROM x AS $�p��;
UPDATE x SET x.x = 3;
SELECT x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
SELECT v1 FROM x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
SELECT x FROM x;
ALTER TABLE x RENAME TO x;
SELECT v1 FROM x AS $�p�� UNION SELECT v2 FROM x;
CREATE TABLE x.x (v1 INT, x INT[]);
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
UPDATE x SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once';
SELECT * FROM x AS x;
CREATE TABLE x (x INT);
UPDATE x SET x = 'first, modified once' WHERE x = '��Z01Ħ';
UPDATE x SET x = 3;
UPDATE x SET x = 1 WHERE x.x = 1;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO v2 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x CHAR(16), x INT PRIMARY KEY, v3 DOUBLE PRECISION, x VARCHAR);
ALTER TABLE x RENAME TO x;
SELECT v1 FROM x UNION SELECT x FROM v0;
CREATE TABLE x (x INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 VARCHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT * FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT v1, x FROM x AS $�p��;
SELECT x FROM x;
CREATE TABLE x (x TEXT);
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, v2 INT, x VARCHAR(16), v4 INT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
REINDEX table v0;
SELECT * FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
REINDEX client_min_messages;
SELECT x FROM x AS $�p��;
CREATE INDEX v1 ON x USING btree(x);
SELECT v1 FROM x AS x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x.x (x INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT x FROM x AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x VARCHAR(16));
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
SELECT * FROM v0 WHERE x ~* '��z01��';
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TEMPORARY TABLE v0 (x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x AS SELECT x, v2 FROM x AS x;
CREATE INDEX x ON x(ABS(x));
INSERT INTO v2 (x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM x AS x;
SELECT * FROM x;
SELECT x FROM x AS $�p��;
INSERT INTO v0 VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX x ON x USING dummy_index_am(x);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x AS SELECT * FROM x AS x;
REINDEX table v0;
CREATE TABLE x.x (x INT, x INT PRIMARY KEY, x VARCHAR(16), x INT);
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x, v2 FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x, x FROM x;
CREATE TABLE x (x CHAR(16));
CREATE TABLE v0 (v1 INT);
CREATE INDEX v1 ON v0(ABS(x));
UPDATE v0 SET x = 'first, modified once';
SELECT v1 FROM v2;
INSERT INTO x VALUES (1);
SELECT x, x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT[]);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE INDEX x ON x USING btree(x) RETURNS VOID LANGUAGE sql AS 'MODULE_PATHNAME';
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x) VALUES (10);
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE INDEX x ON x USING btree(x);
CREATE TABLE x (x VARCHAR(16), v2 INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE INDEX x ON x USING btree(x ~ x);
INSERT INTO x.x (x) VALUES (12, 34, 56);
INSERT INTO x (v1, x) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x.x VALUES (1);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 1 WHERE x.x = 1;
SELECT v1 FROM x UNION SELECT v2 FROM x;
CREATE TABLE v0 (x TEXT);
SELECT x, x FROM x AS x;
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x BYTEA);
SELECT x FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX x ON x USING dummy_index_am(x);
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�');
SELECT v1 FROM x UNION SELECT v2 FROM x;
CREATE VIEW v2 AS SELECT * FROM x AS x;
UPDATE x SET v1 = 0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x VARCHAR);
UPDATE x SET x = 'first, modified once';
UPDATE x SET x.x = 1 WHERE x.x = 1;
SELECT x FROM x AS x UNION SELECT x FROM v0;
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX v3 ON x.v0 USING spgist(x) INCLUDE (x, x);
CREATE TABLE v0 (v1 DECIMAL, v2 NAME);
CREATE TABLE x (x INT, v2 INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
ALTER TABLE x DROP COLUMN v1;
UPDATE x SET x.x = '��Z01��';
SELECT x FROM x;
CREATE TEMPORARY TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x INT, x BYTEA);
INSERT INTO v0 (x, x) VALUES ('コンピュータプログラマー', '����ȴ����Ƴ');
CREATE TABLE x (x INT[], x INT, x NAME);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 1);
SELECT v1 FROM x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX v3 ON x(x) WHERE x % 2 = 0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO v2;
CREATE INDEX x ON x.x USING gin(x) WITH (option_enum=NULL);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x CHAR(16));
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE INDEX x ON v0(x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT x FROM x AS $�p��;
CREATE TEMPORARY TABLE x (x VARCHAR);
CREATE TABLE x (x BYTEA, x TEXT);
SELECT v1 FROM x AS x;
CREATE TABLE x (x TIMESTAMP, v2 INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM x AS x UNION SELECT x FROM x AS x;
INSERT INTO x VALUES (1, 3);
ALTER TABLE x DROP COLUMN x;
SELECT x, x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v5 AS SELECT * FROM x AS x;
SELECT x FROM x UNION SELECT x FROM x;
SELECT x FROM x;
CREATE INDEX x ON x.x(x);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
ALTER TABLE x RENAME TO x;
REINDEX table v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x INT, v3 VARCHAR);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x CHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v3 CHAR(16), x VARCHAR(16));
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) PARTITION OF x FOR VALUES FROM (1) TO (100);
ALTER TABLE x DROP COLUMN x;
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x INT, v2 INT);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE x SET x.x = '4MB';
SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE VIEW v5 AS SELECT * FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x, x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS trigger IMMUTABLE STRICT LANGUAGE sql;
INSERT INTO x (x, v4) VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT * FROM x AS x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
SELECT v1, x FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x;
SELECT v1 FROM x AS x;
SELECT v1 FROM v0;
ALTER TABLE x DROP COLUMN x;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
REINDEX ���������;
INSERT INTO x.x (v1, v3) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x INT[], x TEXT);
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT[], x VARCHAR(16));
CREATE TABLE v0 (v1 TIMESTAMP, x VARCHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM v2;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT PRIMARY KEY);
INSERT INTO x.x (x, v2) VALUES ('����ԥ�`���ǥ����ץ쥤', 1);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
INSERT INTO v0 (v1, x) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT);
SELECT * FROM x AS $�p��;
SELECT x FROM x AS x;
UPDATE v0 SET x.x = '��Z01��';
CREATE TABLE v0 (v1 INT);
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TEMPORARY TABLE x.x (x CHAR(16));
CREATE VIEW x AS SELECT v1, x FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO v0 VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x TEXT);
SELECT * FROM x AS x;
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM x AS $�p��;
UPDATE x SET x = '��Z01Ħ' WHERE x.x = 1;
CREATE TABLE x (v1 INT, x NAME);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x.x (v1) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
CREATE INDEX x ON x(x);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x NAME, x INT);
CREATE TABLE v0 (x TIMESTAMP, v2 INT);
CREATE TABLE x (x INT);
INSERT INTO x (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
INSERT INTO v0 (x, x) VALUES (56, 2);
UPDATE x SET x.v1 = 3;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
REINDEX table v0;
CREATE TABLE x.x (x TIMESTAMP, x INT, x DECIMAL);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
ALTER TABLE x DROP COLUMN x;
CREATE TEMPORARY TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x AS $�p��;
ALTER TABLE x RENAME TO v2;
INSERT INTO v5 (x, v4) VALUES (10, '��A01��');
REINDEX table v0;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x VARCHAR, x INT[], v4 BYTEA);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM v0;
ALTER TABLE x DROP COLUMN x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x.x (v1 TIMESTAMPTZ, x INT);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT v1 FROM x AS x;
CREATE TEMPORARY TABLE x (x VARCHAR);
CREATE TABLE x (x INT);
INSERT INTO x VALUES (1);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x INT);
SELECT * FROM x;
SELECT * FROM x;
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO v2 VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (v1 TIMESTAMP, x TEXT, v3 CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16));
CREATE INDEX x ON x.x(v1);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x.x (x TIMESTAMP) RETURNS TEXT LANGUAGE C IMMUTABLE;
CREATE TABLE x (x INT);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO v0 (v1) VALUES ('��Z01�E');
SELECT x, v2 FROM x;
CREATE TABLE x (x BYTEA);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT v2 FROM x AS x;
SELECT x FROM x UNION SELECT x FROM x;
INSERT INTO x (x, v3) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS trigger IMMUTABLE STRICT LANGUAGE sql;
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
UPDATE x SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM x;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x AS $�p��;
REINDEX Ӌ��C���Z;
INSERT INTO x (v1) VALUES ('コンピュータディスプレイ', '機A01上');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x VALUES (123, 456, 789);
SELECT * FROM x WHERE x ~* '����ԥ塼��[�ǥ�]';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE v0 (x FLOAT(TEXT));
SELECT v1 FROM x UNION SELECT x FROM x;
CREATE TABLE x (x CHAR(16)) WITH (x=3.5 /* ok */);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW v5 AS SELECT * FROM v0;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES ('�CA01��');
UPDATE x SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (x VARCHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = 3;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO v0 (x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
UPDATE v0 SET x = 'first, modified once' WHERE x % 2 = 0;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE v0 (x INT);
CREATE INDEX x ON x(x);
CREATE VIEW v2 AS SELECT x, x FROM v0;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 (v1) VALUES ('����ͼ��', '��B01��');
CREATE TABLE v0 (v1 INT);
INSERT INTO v2 (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT v1 FROM x AS x;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX table v0;
SELECT * FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES (12, '����ԥ塼������ե��å���');
INSERT INTO v5 (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW x;
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TEMPORARY TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v0 (v1) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT[]);
INSERT INTO v0 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT, x TEXT) RETURNS TEXT LANGUAGE plsample;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x VARCHAR(16), x BYTEA, v3 INT[], x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x NAME);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x FROM x AS x;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x.x (v1) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (v1, x) VALUES ('��B10��', '����ȴ����Ƴ');
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x.x (x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET x = 'first, modified once';
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤');
CREATE TABLE x.x (v1 DECIMAL, x INT PRIMARY KEY);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM v0;
INSERT INTO x.x VALUES ('����ͼ��', 1);
UPDATE x SET x.x = '人Z01下' WHERE x.x = 1;
SELECT x FROM x AS $�p�� UNION SELECT x FROM v0;
INSERT INTO v2 (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
UPDATE x SET x = '��Z01��';
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO v2 VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x VALUES ('コンピュータディスプレイ');
INSERT INTO x (v1) VALUES (10);
ALTER TABLE x DROP COLUMN v1;
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (10);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT PRIMARY KEY, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x NAME, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x NAME, x INT, x CHAR);
REINDEX table v0;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM x AS x;
UPDATE x SET v1 = '��Z01��' WHERE x.x = 1;
CREATE VIEW x.x;
SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ȴ����Ƴ', 'ơA01��');
REINDEX table v0;
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE INDEX x ON x(x);
CREATE INDEX x ON x USING btree(x);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x AS $�p��;
ALTER TABLE v0 RENAME TO x;
CREATE TABLE x (x INT[]);
INSERT INTO v0 (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT);
SELECT x FROM x UNION SELECT x FROM x AS x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT);
CREATE TABLE v0 (v1 INT);
CREATE TABLE v0 (x INT, x VARCHAR(16), x TIMESTAMP, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (10);
SELECT x FROM x AS x UNION SELECT v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE UNIQUE TABLE x (x TIMESTAMP, x INT[], x VARCHAR, v4 TEXT[]);
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT x, x FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (x DOUBLE PRECISION);
SELECT v1 FROM x AS x;
SELECT x, x FROM x AS x;
CREATE TABLE x.x (v1 INT, x CHAR(16));
CREATE TABLE x (v1 INT, x INT);
CREATE TABLE x (v1 VARCHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM v0 UNION SELECT v2 FROM v0;
SELECT * FROM x AS x;
CREATE TABLE x (x INT PRIMARY KEY, x NAME);
ALTER TABLE v0 DROP COLUMN x;
CREATE VIEW v2 AS SELECT x, x FROM x AS x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT, x BYTEA) INHERITS (x);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TEMPORARY TABLE x (x INT PRIMARY KEY);
CREATE VIEW x AS SELECT * FROM x;
INSERT INTO x.x VALUES ('����ͼ��', '��B01��');
SELECT * FROM x AS x;
REINDEX table v0;
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x.x (x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
SELECT v1 FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT, x INT[], x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES (1);
ALTER TABLE x DROP COLUMN v1;
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT x, x FROM v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT, x NAME, v3 TEXT[]);
REINDEX Ӌ��C���Z;
INSERT INTO x (x, x) VALUES (2, 1);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
CREATE TABLE x (x INT);
SELECT v1 FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX table v0;
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TEMPORARY TABLE x.x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT);
CREATE INDEX x ON x(x);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
UPDATE x SET v1 = 'first, modified once';
SELECT * FROM x;
UPDATE x SET x.x = 1 WHERE x.x = 3;
SELECT x FROM x AS x UNION SELECT x FROM x;
INSERT INTO x.x VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (v1 INT, v2 INT);
CREATE INDEX x ON x.x(ABS(x));
CREATE TABLE x (x CHAR(16), v2 INT);
CREATE TABLE v0 (v1 VARCHAR(16), x INT);
SELECT v1 FROM x AS x UNION SELECT x FROM v0;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES (1);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES (1, 'first');
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
REINDEX table v0;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x VALUES ('���Գ���Ա');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=3.5 /* ok */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x BYTEA, x TIMESTAMP);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (v1 INT, x INT[]);
SELECT x FROM x AS $�p��;
INSERT INTO x.x (x, x) VALUES ('分B10中', 1);
ALTER TABLE x RENAME TO x;
INSERT INTO v2 (x) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x VALUES (1);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT[], v2 NAME);
CREATE INDEX x ON v0(x x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x) VALUES ('��Z01�E');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE v0 (x INT PRIMARY KEY);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (12, 34, 56);
UPDATE v0 SET v1 = 1 WHERE x.x = 1;
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x;
CREATE TABLE x (x INT);
INSERT INTO x (v3, v4) VALUES (10, 'duck');
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
REINDEX table v0;
CREATE INDEX x ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x.x (x INT, v2 TIMESTAMP);
SELECT x FROM x;
SELECT x FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x = 'spgist';
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE v0 (x VARCHAR, v2 TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT PRIMARY KEY, x CHAR(16));
INSERT INTO x.x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT[], v2 VARCHAR, x CHAR(16));
CREATE TABLE x.x (x VARCHAR(16), x TEXT[], x VARCHAR(16));
REINDEX ���������;
INSERT INTO v0 VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
ALTER TABLE v0 RENAME TO v2;
CREATE VIEW v5 AS SELECT * FROM x;
SELECT x FROM x;
CREATE TABLE x (x TIMESTAMP);
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x.x (v1 NAME) INHERITS (x);
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW v2;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW x AS SELECT * FROM x;
SELECT x FROM x;
CREATE TABLE x (x VARCHAR) RETURNS TEXT LANGUAGE plsample;
REINDEX table v0;
CREATE INDEX v1 ON x(x x);
CREATE TABLE x (v1 VARCHAR, x VARCHAR);
CREATE TEMPORARY TABLE x (x INT, x TEXT);
SELECT v1;
SELECT x FROM x;
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE v0 (x INT, v2 INT[]);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 (v1, v2) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TEXT);
REINDEX table v0;
SELECT v1, x FROM x AS $�p��;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE INDEX x ON x.x(ABS(x));
REINDEX analyze t;
INSERT INTO v0 (v1) VALUES ('���Գ���Ա', '��Z01��');
SELECT x FROM x AS x;
INSERT INTO x.x (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE INDEX v1 ON v0(x);
UPDATE x SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x CHAR(16), x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x NAME);
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE INDEX x ON x USING dummy_index_am(x);
INSERT INTO x VALUES ('��Z01�E', 'ӡ��ϴǹȴ����Ƴ');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
REINDEX table v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1, x FROM x;
CREATE TABLE x (x INT[], x DECIMAL);
SELECT x FROM x;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT);
INSERT INTO v0 (v1, v2) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW x AS SELECT * FROM x;
SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX analyze t;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO v0 VALUES ('分B10中');
UPDATE x SET x = 'first, modified once' WHERE x = 'dummy_test_idx';
SELECT x FROM x AS x UNION SELECT v2 FROM v0;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('ʬB10��', 10);
CREATE INDEX v3 ON x(x x);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x;
INSERT INTO x (x, x) VALUES (1, 2, 3);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO x VALUES (12, 34, 56);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x AS x;
INSERT INTO x.x (x, v2) VALUES ('����ȴ����Ƴ', 1);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('����ͼ��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE INDEX v1 ON x(x);
CREATE TABLE x (x NAME, v2 INT, x CHAR(16));
SELECT x, x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT[], x VARCHAR(16));
UPDATE x SET x = 'name_ops' WHERE x.x = 1;
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
CREATE TABLE x.x (v1 INT, x TEXT, x INT PRIMARY KEY, x INT PRIMARY KEY);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE UNIQUE INDEX v1 ON x(ABS(x));
SELECT x, x FROM x AS $�p��;
SELECT x FROM x;
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TEMPORARY TABLE v0 (x CHAR(16));
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p��;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
CREATE TABLE v0 (x TEXT, v2 TIMESTAMP);
SELECT v1 FROM x AS x;
REINDEX table v0;
UPDATE x SET v1 = '4MB';
SELECT x, x FROM v0;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x VARCHAR(16), x NAME);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE VIEW x.x.v2 AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v0 (v1, v3) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
INSERT INTO x VALUES ('��A01��');
INSERT INTO v2 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v2 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x (x, v3) VALUES (1, 2, 3);
SELECT x, v2 FROM x;
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
CREATE INDEX v3 ON x(ABS(x));
CREATE INDEX x ON x(x);
SELECT * FROM x AS x;
SELECT x FROM x AS x;
CREATE TABLE v0 (x NAME);
SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT);
CREATE TABLE x (x INT[]);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x INT, v2 INT);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
ALTER TABLE x RENAME TO x;
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS VOID LANGUAGE sql;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE x SET x.x = '��Z01��';
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (v1 CHAR(16));
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
ALTER TABLE x RENAME TO x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x) VALUES ('�q���~', '�F�F���', '�_A01��');
REINDEX table v0;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x, x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO v5 (x, v4) VALUES ('�CA01��', 'duck');
CREATE TABLE x (x INT[]);
SELECT v1 FROM x;
CREATE TABLE x.v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT v1 FROM x;
SELECT v1 FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT PRIMARY KEY);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
CREATE TEMPORARY TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, v3) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE v0 (x NAME);
CREATE TABLE v0 (v1 TEXT);
CREATE TABLE v0 (v1 TEXT);
INSERT INTO v0 VALUES (2);
CREATE TABLE x.x (v1 INT, x INT, v3 DOUBLE PRECISION, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT);
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT v1, x FROM x;
CREATE TABLE x (x INT PRIMARY KEY);
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
ALTER TABLE x RENAME TO x;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x.x (x, x) VALUES (10, 10);
CREATE TABLE x.x (x INT, x INT, x INT) RETURNS trigger IMMUTABLE STRICT LANGUAGE sql;
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x INT, x CHAR);
SELECT * FROM x AS x;
CREATE VIEW v5 INHERITS (x) AS SELECT * FROM x AS x;
INSERT INTO x (x, v3) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x BYTEA, v2 NAME, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS x UNION SELECT v2 FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x VARCHAR);
ALTER TABLE x DROP COLUMN v1;
SELECT v1, v2 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x AS SELECT * FROM x AS x;
SELECT * FROM x;
INSERT INTO x VALUES (1);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES (1, 1);
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (1);
SELECT x FROM v0;
REINDEX table v0;
SELECT v1 FROM x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x BYTEA, v2 DECIMAL);
INSERT INTO x.x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x INT PRIMARY KEY, v2 TEXT);
CREATE TEMPORARY TABLE x (x INT, x TEXT);
UPDATE x SET x = 'first, modified once';
SELECT * FROM v2;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
REINDEX client_min_messages;
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM x AS x;
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', 1);
CREATE INDEX x ON x USING dummy_index_am(x);
SELECT x FROM x;
CREATE TABLE x (x NAME, x DECIMAL);
SELECT v1 FROM x;
INSERT INTO x (v1) VALUES ('�����', '������', 'ơA01��');
ALTER TABLE x DROP COLUMN x;
UPDATE v0 SET v1 = '人Z01下';
SELECT x FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT * FROM v0;
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
INSERT INTO v0 VALUES ('ơA01��');
CREATE TABLE x (x INT);
CREATE TABLE v0 (x TEXT);
CREATE TABLE x (x VARCHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT PRIMARY KEY, x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM v0;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE v0 (x VARCHAR, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v3 CHAR);
SELECT * FROM x AS $�p��;
SELECT v1 FROM x;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x (x, v4) VALUES ('����ͼ��', '��B01��');
INSERT INTO x (x, x) VALUES ('機A01上');
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW v2 AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES (10, 10);
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x.x (v1 INT);
REINDEX table v0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x;
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x VALUES ('�����ѥ��������q');
REINDEX �׻����Ѹ�;
SELECT x FROM x UNION SELECT x FROM v0;
CREATE TEMPORARY TABLE x.x (x TIMESTAMP);
INSERT INTO x (x, x) VALUES (3, 'ho there');
ALTER TABLE x RENAME TO v2;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE v0 (x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT);
UPDATE x SET x = 'first, modified once';
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT[]);
CREATE UNIQUE TABLE x (x VARCHAR(16));
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
UPDATE x SET x.x = 'warning' /* Silence validation checks for strings */ WHERE x.x = 1;
INSERT INTO x VALUES (1, 1);
CREATE TABLE x (x CHAR(16), x NAME);
CREATE TABLE x.x (x INT);
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
SELECT x, x FROM x AS x;
ALTER TABLE x DROP COLUMN v1;
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x VALUES ('コンピュータグラフィックス', 1);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) PARTITION BY RANGE(x);
REINDEX �׻����Ѹ�;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM v2;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x.x (x INT, x VARCHAR(16));
INSERT INTO x VALUES (1);
CREATE INDEX x ON x(x);
SELECT x, x FROM x;
REINDEX table v0;
INSERT INTO x (x, v3) VALUES (123, 456, 789);
INSERT INTO x.x (x) VALUES ('�CA01��');
INSERT INTO v0 (x, v3) VALUES (10, 10);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM v0;
REINDEX table v0;
SELECT x FROM v0;
CREATE INDEX x ON x(x);
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x FROM x AS x UNION SELECT v2 FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO v0 (x, v3) VALUES ('����ͼ��', '��B01��');
CREATE VIEW v2 AS SELECT * FROM x AS x;
INSERT INTO x VALUES ('�����', '������');
CREATE INDEX x ON x USING hash(x);
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO v0 VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
UPDATE x SET x.x = 1 WHERE x.x = 1;
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x TIMESTAMP, x TIMESTAMP);
INSERT INTO x (x) VALUES (456);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('\000\001\002\003\004');
INSERT INTO x (x, x) VALUES (10);
SELECT x, x FROM x AS x JOIN x AS $�p�� ON x.x = x.x WHERE x ~* '�F�F��[�H�O��]';
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x.x (x BYTEA);
CREATE TABLE x (x INT[]);
CREATE TEMPORARY TABLE v0 (x VARCHAR);
CREATE VIEW v2 AS SELECT * FROM x AS x;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX �t�Ӹ��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x AS x;
CREATE VIEW v2 AS SELECT * FROM x AS x;
REINDEX table v0;
SELECT x, x FROM x AS x;
CREATE INDEX v3 ON v0 USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x AS x UNION SELECT x FROM x;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x) VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT * FROM x AS $�p��;
SELECT v1 FROM v0;
UPDATE x SET x.x = 3;
CREATE TABLE x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
REINDEX table v0;
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (v1, v3) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (v1 DECIMAL);
CREATE TABLE x (v1 INT, x NAME, x CHAR);
CREATE TABLE x (x INT);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x INT);
CREATE TABLE x (v1 INT[]);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT[], x TIMESTAMPTZ);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE v0 RENAME TO x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
REINDEX table v0;
UPDATE x SET x = 'first, modified once';
CREATE INDEX x ON x.x(x);
CREATE TABLE x (x INT[]);
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
UPDATE x SET x = 1 WHERE x.x = 1;
SELECT * FROM v2;
CREATE TABLE x (x INT[]);
CREATE TABLE x (v1 CHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x INT[]);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT * FROM x AS x;
INSERT INTO v0 VALUES ('�s�y�~', '�]���������q', '��B10��');
UPDATE x SET x = 'first, modified once';
INSERT INTO x (x, x) VALUES ('����ȴ����Ƴ', '�s�y�~');
INSERT INTO x (x, x) VALUES (10);
SELECT x FROM x AS x UNION SELECT v2 FROM x;
INSERT INTO v0 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x FROM v2;
SELECT v1 FROM x;
SELECT x FROM x AS x;
SELECT * FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (v1 INT, x BYTEA);
CREATE TABLE x (v1 NAME, v2 INT);
CREATE TABLE v0 (x TEXT, x BYTEA);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1, x FROM x;
CREATE TABLE x (x INT, x TIMESTAMP);
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT v1 FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
SELECT * FROM x;
SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT v1, x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE VIEW x.x AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x AS x;
ALTER TABLE x RENAME TO x;
CREATE TABLE x.x (v1 DECIMAL, v2 INT, x DOUBLE PRECISION, x NAME);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET v1 = 'warning' /* Silence validation checks for strings */ WHERE x.x = 1;
INSERT INTO x.x (v1) VALUES ('������ʾ��', '��A01��');
UPDATE v0 SET x.x = 1 WHERE x.x = 1;
ALTER TABLE x RENAME TO x;
CREATE INDEX ON x USING spgist(x x) INCLUDE (x, x);
SELECT v1 FROM x AS $�p��;
SELECT * FROM x AS x;
CREATE INDEX x ON x.x(x);
ALTER TABLE x DROP COLUMN v1;
CREATE INDEX x ON v0(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM v0;
CREATE TABLE v0 (v1 DOUBLE PRECISION);
CREATE TABLE x (x INT PRIMARY KEY, x INT);
INSERT INTO v0 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES (1, 12);
CREATE TABLE x.x (v1 INT, x INT);
CREATE TABLE x (x INT);
SELECT x FROM x AS x UNION SELECT v2 FROM x AS $�p��;
CREATE TABLE x (x INT PRIMARY KEY);
SELECT v1 FROM v0;
INSERT INTO x (x, x) VALUES (10);
CREATE TEMPORARY TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1 FROM v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX x ON x.x USING btree(x ~ x);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT * FROM x;
CREATE TABLE x (x TIMESTAMP);
CREATE TABLE x.x (x CHAR(16)) RETURNS TEXT LANGUAGE C;
UPDATE x SET x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT[]);
CREATE TABLE x.x (x TIMESTAMP, x INT PRIMARY KEY);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN x;
INSERT INTO x (x, x) VALUES (10);
INSERT INTO x (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE INDEX v3 ON x(x);
INSERT INTO x VALUES ('������ʾ��', '��B01��');
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x VALUES (789);
SELECT v1;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x VARCHAR, v2 CHAR(16));
INSERT INTO x (v3, x) VALUES (10, '�_A01��');
INSERT INTO x (x, v3) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x INT);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE INDEX x ON x(x);
CREATE TABLE x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
REINDEX client_min_messages;
CREATE VIEW x.x AS SELECT x, x FROM x AS x;
CREATE INDEX x ON x(x);
REINDEX table v0;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
SELECT *;
SELECT x FROM x UNION SELECT v2 FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM x;
CREATE TABLE v0 (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TEMPORARY TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT);
UPDATE v0 SET x.x = 3;
CREATE TABLE x (x INT, x INT);
UPDATE x SET x = 3;
CREATE INDEX v1 ON x(x x);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TEMPORARY TABLE x.x (x TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET v1 = 0 WHERE x.x = 1;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x VALUES ('����ͼ��', 1);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX v3 ON x(x);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX v1 ON x.x(x);
SELECT * FROM x;
INSERT INTO x (v1) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (v1) VALUES ('分B10中');
SELECT x FROM x AS $�p��;
INSERT INTO v0 (v1, x) VALUES (1, 'first');
CREATE TABLE v0 (x NAME, v2 INT, v3 DOUBLE PRECISION, x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x (x NAME, x BYTEA) PARTITION OF x FOR VALUES FROM (1) TO (100);
SELECT v1 FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (v1 INT);
INSERT INTO x (v1) VALUES (10);
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤');
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16), x VARCHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('first');
CREATE INDEX x ON x.x(x);
INSERT INTO x VALUES (1);
CREATE TABLE v0 (x INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x NAME, x VARCHAR);
ALTER TABLE v0 DROP COLUMN x;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT * FROM x AS $�p��;
SELECT v1, x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (v1, x) VALUES (10, 10);
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO v0 VALUES ('ho there');
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
UPDATE x SET x = 'first, modified once';
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, v2 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO v0 VALUES (456);
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO v0 (x, v2) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
UPDATE x SET x = 3;
UPDATE v0 SET x = '��Z01Ħ' WHERE x = '��Z01��';
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x.x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x TIMESTAMP);
INSERT INTO x (v3, x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX x ON x USING btree(x ~ x) AS SELECT * FROM x AS $�p��;
INSERT INTO x.x (x) VALUES ('�q���~', '�F�F���', '�_A01��');
SELECT x FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
SELECT x FROM x;
CREATE TABLE x.x (x VARCHAR, v2 DECIMAL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v0;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS $�p��;
CREATE TABLE x (v1 TEXT[], x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE v0 SET x = 'first, modified once';
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE INDEX ON x(ABS(x)) WHERE x % 2 = 0;
SELECT * FROM x AS x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE TEMPORARY TABLE v0 (v1 INT);
CREATE INDEX v1 ON x.x(x);
INSERT INTO x (v1) VALUES (10);
INSERT INTO v0 (x, v3) VALUES (10, 10);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR(16));
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x.x AS SELECT * FROM x;
SELECT v1 FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
REINDEX ��ٸ����;
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x VALUES ('�s�y�~');
SELECT v1 FROM x;
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x VARCHAR(16)) RETURNS TEXT LANGUAGE plsample;
UPDATE x SET x.x = 'dummy_test_idx';
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT) RETURNS TEXT LANGUAGE C;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
ALTER TABLE x RENAME TO v2;
UPDATE x SET v1 = '��Z01��';
SELECT v1 FROM x AS $�p�� UNION SELECT v2 FROM v0;
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT v1 FROM x AS x UNION SELECT x FROM x;
CREATE TABLE x (x INT PRIMARY KEY, x CHAR(16), x TIMESTAMP);
INSERT INTO x VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
SELECT x, x FROM x AS $�p��;
SELECT x FROM x AS x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (v1) VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 'first, modified once';
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT);
SELECT x FROM v0 UNION SELECT v2 FROM x AS x;
CREATE UNIQUE TABLE x (x VARCHAR(16), x TEXT[]);
INSERT INTO x (v1) VALUES (2, 'ho there', '\004\003\002\001\000');
ALTER TABLE x RENAME TO v2;
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
REINDEX �׻����Ѹ�;
CREATE TABLE x (v1 BYTEA, x INT);
CREATE TABLE x (v1 TEXT);
CREATE VIEW x.x AS SELECT * FROM x;
CREATE VIEW x.x AS SELECT x, x FROM x AS $�p��;
SELECT x, v2 FROM x AS x;
SELECT x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR);
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES (10);
SELECT x, x FROM x AS x;
CREATE TABLE x (v1 INT, v2 DECIMAL);
INSERT INTO v0 VALUES ('����ͼ��', '��B01��');
ALTER TABLE x RENAME TO x;
INSERT INTO x VALUES (3);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT PRIMARY KEY);
SELECT x FROM v0 UNION SELECT x FROM x AS x;
CREATE INDEX v1 ON x(x ~ x);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (v1 INT, x NAME, x CHAR);
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
UPDATE x SET x = 'first, modified once';
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x NAME);
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 INT, x TEXT, x INT);
CREATE INDEX v3 ON x.x USING gin(x) WITH (option_enum=NULL);
INSERT INTO x.x VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x VALUES (1);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (x BYTEA);
INSERT INTO v0 VALUES (1);
REINDEX table v0;
INSERT INTO v0 (v1) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX table v0;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
ALTER TABLE x RENAME TO x;
INSERT INTO x.x (v3, v4) VALUES (456, '����ԥ塼���ǥ����ץ쥤');
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE TABLE v0 (x TIMESTAMPTZ) PARTITION BY RANGE(x) AS $$   Example of source with text result. $$;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x;
CREATE TABLE x.x (v1 INT, x VARCHAR(16), x INT);
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x = 3;
CREATE TABLE v0 (v1 TEXT);
CREATE TABLE x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) RETURNS VOID LANGUAGE plsample;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
UPDATE x SET x = 'first, modified once' WHERE x.x = 1;
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x INT, x BYTEA);
ALTER TABLE x RENAME TO v2;
REINDEX analyze t;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMP);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT v1 FROM x AS x;
INSERT INTO x.x (v1) VALUES (1, 2, 3);
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TIMESTAMP);
UPDATE x SET x = 'first, modified once';
REINDEX ��ٸ����;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
CREATE TABLE x (v1 NAME, v2 BYTEA);
CREATE VIEW x AS SELECT x, x FROM v0;
REINDEX analyze t;
CREATE TABLE x (x VARCHAR(16), x BYTEA);
CREATE TABLE x.x (x DOUBLE PRECISION);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x BYTEA, x INT);
CREATE INDEX x ON x USING hash(x);
CREATE TABLE v0 (x TIMESTAMP, x BYTEA);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (v1) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE x (v1 TEXT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
ALTER TABLE v0 RENAME TO x;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE v0 (x DOUBLE PRECISION);
CREATE TEMPORARY TABLE x (x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x, x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
REINDEX table v0;
CREATE TABLE x (x INT);
INSERT INTO v0 (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE INDEX x ON x(ABS(x));
REINDEX �׻����Ѹ�;
UPDATE x SET x = 'warning' /* Silence validation checks for strings */ WHERE x.x = 1;
CREATE TABLE x (v1 VARCHAR);
CREATE TABLE x (v1 INT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
SELECT v1, x FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x (x, x) VALUES (1, 'first');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
ALTER TABLE v0 DROP COLUMN v1;
REINDEX table v0;
INSERT INTO x.x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT v1 FROM x UNION SELECT x FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT);
SELECT x FROM v0;
SELECT v1 FROM v0 UNION SELECT x FROM x;
SELECT x FROM x AS x;
SELECT x FROM x AS x;
ALTER TABLE x RENAME TO x;
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX x ON x.x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES (123, 456, 789);
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE v0 (x TEXT, x TEXT);
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
INSERT INTO x.x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE v0 (x TIMESTAMP);
SELECT x FROM x;
SELECT x FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO v0 VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE INDEX v1 ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE v0 (x INT[]);
UPDATE x SET x.x = 1 WHERE x.x = 1;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT);
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x (v1) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x NAME);
CREATE TABLE x (v1 VARCHAR(16));
SELECT x FROM x;
UPDATE x SET x = 1 WHERE x.x = 'warning' /* Silence validation checks for strings */;
SELECT * FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
INSERT INTO x (x) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x CHAR(16), x VARCHAR, x DOUBLE PRECISION, v4 TIMESTAMP);
INSERT INTO x (x, x) VALUES (1, '����ԥ�`���ץ�����ީ`');
CREATE TABLE x (x INT);
CREATE TABLE x (x INT, x TEXT);
ALTER TABLE x RENAME TO v2;
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO v0 VALUES (1, 'first');
CREATE INDEX x ON x(x);
SELECT v1 FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS x;
INSERT INTO x (v1, v2) VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT[]);
CREATE INDEX x ON v0 USING dummy_index_am(x);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT v1 FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP) RETURNS VOID LANGUAGE sql;
CREATE TABLE x (x INT, x TEXT) RETURNS TEXT LANGUAGE C;
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x NAME);
INSERT INTO x.x VALUES (56);
REINDEX table v0;
REINDEX table v0;
INSERT INTO x (x, x) VALUES (10, 2);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS x;
CREATE TABLE x (x CHAR(16), x TIMESTAMP);
REINDEX �v�Z�@�p��;
REINDEX ��ٸ����;
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x;
CREATE TABLE x (x INT[]);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES (1);
CREATE TABLE x (x INT);
CREATE VIEW v2 AS SELECT x, x FROM v0;
CREATE VIEW x AS SELECT v1, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x VARCHAR(16), x INT[], v3 CHAR);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x VARCHAR(16));
SELECT v1 FROM x;
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE v0 (v1 TIMESTAMP);
CREATE INDEX v1 ON x(v1);
SELECT v1 FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) WITH (option_real=3.5 /* ok */);
CREATE VIEW x AS SELECT * FROM x;
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x VALUES (12, 34, 56);
INSERT INTO x (x, x) VALUES ('����ԥ�`���ץ�����ީ`');
UPDATE x SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once';
CREATE TABLE x.x (x CHAR(16), v2 INT);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM v0 AS x;
INSERT INTO x (v1) VALUES ('������ʾ��', '��A01��');
SELECT v1 FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE INDEX x ON x.x(x);
CREATE TABLE x.x (x INT);
SELECT v1, x FROM x AS x;
INSERT INTO x VALUES ('��Z01Ħ');
CREATE VIEW x AS SELECT * FROM x;
SELECT x, v2 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1 FROM x;
SELECT x, x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (v1, x) VALUES ('コンピュータプログラマー', 1);
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX v3 ON x.x(x);
INSERT INTO v0 (v1, x) VALUES (1, '��Z01��');
INSERT INTO x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
SELECT v1 FROM x;
CREATE TABLE x (x INT, v2 VARCHAR);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT);
SELECT x, x;
SELECT x FROM x AS x UNION SELECT x FROM x;
CREATE INDEX x ON v0(x x) PARTITION OF x FOR VALUES FROM (1) TO (100);
SELECT * FROM x;
ALTER TABLE x RENAME TO v2;
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
SELECT v1 FROM x AS x UNION SELECT x FROM x;
ALTER TABLE x RENAME TO v2;
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
UPDATE x SET x = 'first, modified once' WHERE x = 3;
CREATE INDEX x ON x USING spgist(x x) INCLUDE (x, x);
CREATE TABLE x (v1 INT, x INT PRIMARY KEY);
INSERT INTO x (v1) VALUES ('���Գ���Ա', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x = 0;
SELECT v1 FROM x;
CREATE TABLE x (v1 INT[]);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE INDEX x ON v0 USING hash(x);
SELECT x FROM v0;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE INDEX x ON x USING btree(x ~ x);
REINDEX table v0;
CREATE TABLE v0 (x INT[]);
SELECT v1, x FROM x AS x;
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x (v1 INT, x CHAR(16));
ALTER TABLE x DROP COLUMN v1;
SELECT v1, x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
REINDEX -- Perform a scan over the trailing part of the index, where the   -- possible incomplete splits are. (We don't check the whole table,   -- because that'd be pretty slow.)   c := 0;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x.x VALUES ('������');
CREATE INDEX v3 ON v0(ABS(x));
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x VALUES ('�����', '������', 'ơA01��');
UPDATE v0 SET x = 1 WHERE v1 = 3;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (10, '����ԥ塼���ǥ����ץ쥤');
CREATE TABLE x.x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO v0 (v1) VALUES (10);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX track_commit_timestamp;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
SELECT v1 FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO v2 VALUES (56, 1);
CREATE INDEX v1 ON v0(x ~ x);
SELECT x, x FROM x AS $�p��;
INSERT INTO v0 VALUES ('�]���������q');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (v1 VARCHAR(16)) PARTITION OF x FOR VALUES FROM (1) TO (100);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x VARCHAR(16));
CREATE TABLE x (x INT[]);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
UPDATE x SET x = 1 WHERE x = 1;
SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT);
CREATE TABLE x (v1 INT, v2 INT);
CREATE TABLE x (x INT, x TEXT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT) RETURNS TEXT LANGUAGE plsample;
CREATE TABLE x (x CHAR(16), x BYTEA, x INT[]);
SELECT x, x FROM x AS $�p��;
INSERT INTO x VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x;
REINDEX table v0;
CREATE TABLE x (x TEXT);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO v0 VALUES ('��B10��');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
UPDATE x SET x = 'first, modified once';
INSERT INTO v0 VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM v0 UNION SELECT x FROM x AS $�p��;
INSERT INTO x.x VALUES (1);
CREATE VIEW x.x AS SELECT * FROM v0;
UPDATE x SET x = 3;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x (x) VALUES (10);
CREATE TEMPORARY TABLE x.x (x VARCHAR);
SELECT * FROM v2;
INSERT INTO x (x) VALUES ('��B01��');
SELECT x FROM x;
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x INT, x TIMESTAMP, x INT);
CREATE TABLE x (x TEXT);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x, x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE v0 (v1 INT, x INT[]);
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x.x (x VARCHAR(16), x TEXT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT PRIMARY KEY, v2 TEXT[]);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT x, x FROM x;
CREATE TABLE v0 (x TEXT, x BYTEA);
INSERT INTO v0 VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT[]);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS x;
CREATE VIEW x.x AS SELECT v1, v2 FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x.x VALUES ('����ԥ�`���ץ�����ީ`');
CREATE TEMPORARY TABLE x.x (x BYTEA);
CREATE TABLE x (x INT[], x CHAR(16));
CREATE TABLE x (x BYTEA);
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO v2 VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
CREATE TABLE x (x INT);
CREATE TABLE x (x INT PRIMARY KEY);
INSERT INTO v2 (v1) VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x;
ALTER TABLE v0 DROP COLUMN v1;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x VARCHAR, v2 INT, x INT PRIMARY KEY);
INSERT INTO x (v1) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x) VALUES ('コンピュータグラフィックス', '分B10中');
SELECT x;
REINDEX table v0;
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE INDEX v1 ON x(x);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('�����');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES (789);
INSERT INTO x (x, x) VALUES ('�_A01��', '�q���~');
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x;
CREATE TABLE x (x INT);
INSERT INTO x.x (x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT v1, v2 FROM v0;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x CHAR(16), x TIMESTAMP, x TIMESTAMP);
SELECT v1 FROM x AS $�p��;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x;
INSERT INTO v0 VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x.x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x INT[]);
CREATE TABLE x (x VARCHAR);
INSERT INTO x (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
CREATE TABLE v0 (x TEXT);
UPDATE x SET x = 'first, modified once' WHERE x = '人Z01下';
CREATE TABLE x.x (x TEXT[], x TEXT[], x TEXT);
CREATE TABLE x.v0 (v1 DECIMAL);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES (1, 12);
INSERT INTO x (v1) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x TEXT, x INT PRIMARY KEY);
CREATE TABLE x (v1 INT);
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO x (v1, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '機A01上');
CREATE TABLE x (v1 BYTEA, x TEXT, x INT, x VARCHAR(16));
UPDATE x SET x = 1 WHERE x = 1;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM v2;
INSERT INTO v0 VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TIMESTAMPTZ, x CHAR(16), x INT[]);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
CREATE TABLE v0 (v1 TEXT[]);
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT x FROM x AS $�p�� UNION SELECT x FROM v0;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT[]);
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT);
ALTER TABLE x DROP COLUMN v1;
UPDATE v0 SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (v1 INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT);
CREATE INDEX v1 ON x USING gin(x) WITH (option_enum=NULL);
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT x FROM x AS $�p��;
UPDATE x SET x = 3;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
UPDATE x SET x = 3;
INSERT INTO v2 VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO v0 (x) VALUES (10);
INSERT INTO x (v1, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x INT[]);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x.x (x INT, x INT, x INT);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (x, x) VALUES ('機A01上');
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x UNION SELECT x FROM x;
CREATE TABLE x.x (x BYTEA, x INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x.x (v1 VARCHAR, x INT[]);
INSERT INTO v2 VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO v2 VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, x) VALUES (10, '�]���������q');
SELECT * FROM x;
SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x.x (x, v4) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT);
CREATE INDEX x ON x.x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=10 /* ALTER INDEX .. SET */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE INDEX x ON x.x(ABS(x));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT[]);
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE INDEX v3 ON x.x USING btree(x);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT v1 FROM x;
INSERT INTO v5 (x, v4) VALUES ('����ԥ�`������ե��å���', '��B10��');
UPDATE x SET x = 'first, modified once';
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT) RETURNS TEXT LANGUAGE plsample;
INSERT INTO x.x VALUES ('�]���������q');
UPDATE v0 SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once';
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x (x, v2) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT);
CREATE TEMPORARY TABLE x (x CHAR(16));
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (v1 INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x UNION SELECT x FROM v0;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
SELECT * FROM x;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT v1 FROM x;
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX table v0;
ALTER TABLE v0 DROP COLUMN v1;
CREATE VIEW x AS SELECT * FROM v0;
INSERT INTO x VALUES ('�\���~', '����ͼ��');
SELECT x FROM v0;
CREATE TABLE v0 (x TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE VIEW v5 AS SELECT * FROM x AS x;
INSERT INTO x.x VALUES (1, 'first');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v0 (v1) VALUES ('�q���~');
CREATE TABLE x (x INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE v0 (x BYTEA);
CREATE TABLE v0 (x VARCHAR, v2 INT);
UPDATE x SET x = 'first, modified once';
CREATE TABLE x (x INT[]);
INSERT INTO x (v1) VALUES (10);
CREATE TABLE x (x INT[]);
ALTER TABLE v0 RENAME TO v2;
CREATE TABLE x.v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT[]);
ALTER TABLE x RENAME TO v2;
CREATE TABLE x.x (x TIMESTAMP);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT) RETURNS trigger IMMUTABLE STRICT LANGUAGE sql;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM v2;
INSERT INTO x (x, x) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (x, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT);
UPDATE x SET x = 1 WHERE x = 1;
ALTER TABLE x DROP COLUMN x;
REINDEX ��ٸ����;
CREATE TABLE x (v1 INT, x INT);
INSERT INTO x (x) VALUES ('コンピュータグラフィックス');
CREATE TABLE x (x INT, x INT);
CREATE TABLE x (x BYTEA, x INT, x TEXT);
CREATE TABLE x.x (v1 INT);
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x VALUES ('ӡ��ϴǹȴ����Ƴ', 1);
REINDEX table v0;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (v1 VARCHAR(16));
CREATE TABLE v0 (x VARCHAR);
ALTER TABLE x DROP COLUMN x;
ALTER TABLE x DROP COLUMN x;
CREATE UNIQUE TABLE x (x BYTEA);
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE VIEW x AS SELECT x, x FROM x AS x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT x FROM x UNION SELECT v2 FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
ALTER TABLE x RENAME TO x;
SELECT x FROM x AS $�p��;
INSERT INTO x (v1) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x.x (x, v3) VALUES ('���Գ���Ա', '��Z01��');
SELECT x FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x INT[]);
UPDATE x SET x = 3;
ALTER TABLE x RENAME TO x;
INSERT INTO x (x, x) VALUES ('�\���~');
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE v0 (x CHAR(16));
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM x AS x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x AS $�p��;
CREATE TABLE v0 (x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX x ON x(x);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x (x INT[]);
SELECT x FROM x WHERE x > 'binary_upgrade_set_n' AND x < 'binary_upgrade_set_p' ORDER BY 1;
CREATE TABLE x.x (v1 TEXT[], x INT, v3 CHAR);
SELECT * FROM x AS x;
REINDEX SESSION AUTHORIZATION;
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT[], x TEXT, x TEXT);
SELECT * FROM x;
SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
SELECT * FROM x AS $�p��;
SELECT v1 FROM x AS x;
REINDEX client_min_messages;
SELECT * FROM x;
INSERT INTO x.x (x, v4) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM x AS $�p��;
REINDEX table v0;
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT x FROM x AS x;
CREATE INDEX v1 ON x.x USING dummy_index_am(x);
ALTER TABLE x RENAME TO v2;
SELECT * FROM x AS x;
INSERT INTO x (v1, x) VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (v1 INT);
REINDEX table v0;
SELECT x, v2 FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x INT, v2 TEXT);
CREATE VIEW v2 AS SELECT v1, x FROM x AS $�p��;
REINDEX table v0;
CREATE INDEX x ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x (x TIMESTAMP, x TEXT);
CREATE TABLE x.x (x VARCHAR);
CREATE TABLE x.x (x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT v1, v2 FROM x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x BYTEA, v2 VARCHAR, v3 CHAR);
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
ALTER TABLE v0 RENAME TO v2;
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (v3, x) VALUES (10, 'duck');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT) INHERITS (x);
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO v0 VALUES (1);
SELECT v1 FROM x AS $�p��;
ALTER TABLE x DROP COLUMN x;
CREATE VIEW v5 AS SELECT * FROM x;
SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE v0 (x BYTEA, x TEXT);
REINDEX table v0;
CREATE TABLE x (x INT);
CREATE TABLE v0 (x CHAR(16), x BYTEA, x TIMESTAMP);
INSERT INTO v2 VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE x RENAME TO x;
SELECT x FROM v0;
SELECT x FROM x;
SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT, x BYTEA);
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES ('ho there', 123);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (x, x) VALUES ('�CA01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x CHAR(16));
INSERT INTO x.x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 TEXT);
SELECT x FROM x;
CREATE TABLE x.x (x BYTEA);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x VARCHAR, v2 INT);
INSERT INTO x (v1) VALUES (10);
CREATE UNIQUE TABLE x (x INT[], x INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (v1 INT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
SELECT x FROM x AS x;
CREATE TABLE x (x VARCHAR(16), x INT);
CREATE INDEX x ON x(x);
CREATE TABLE x (x NAME, x INT, x TEXT);
UPDATE x SET v1 = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
INSERT INTO x (x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
SELECT x FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x.x (x INT, x INT, x INT);
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x.x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x.x (x TIMESTAMP, x CHAR(16));
ALTER TABLE x DROP COLUMN x;
SELECT v1, x FROM x WHERE x = 'dummy_test_idx';
CREATE TABLE x (v1 INT, x BYTEA);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1 FROM x AS x UNION SELECT x FROM x AS x;
SELECT v1 FROM x;
SELECT * FROM x AS x;
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE INDEX v1 ON v0(x);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE v0 (x INT, x INT, v3 CHAR);
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE v0 (x VARCHAR);
UPDATE x SET x = 'first, modified once';
ALTER TABLE x RENAME TO x;
SELECT v1 FROM x;
INSERT INTO v0 VALUES ('����ͼ��', '��B01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) PARTITION OF x FOR VALUES FROM (1) TO (100);
INSERT INTO v2 VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (x, x) VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x (x, x) VALUES (3);
SELECT x FROM x;
INSERT INTO x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x CHAR(16), x INT);
INSERT INTO x.x VALUES ('ho there');
INSERT INTO x.x VALUES ('�����', '������', 'ơA01��');
ALTER TABLE v0 DROP COLUMN v1;
INSERT INTO x.x VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO v0 VALUES (1, 'first');
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
REINDEX table v0;
CREATE TABLE x (x INT);
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
CREATE TABLE x (v1 CHAR(16));
CREATE TABLE x (x INT[]);
CREATE TABLE x.x (x VARCHAR(16));
INSERT INTO v0 VALUES (1);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT * FROM x AS x;
CREATE TABLE x (x NAME);
SELECT v1 FROM x;
SELECT x FROM x;
INSERT INTO x (x, x) VALUES (1, 1);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 (v1) VALUES (1, 'first');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES (1, 1);
REINDEX table v0;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
REINDEX table v0;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE VIEW x AS SELECT x, x FROM x AS $�p��;
INSERT INTO v0 (v1, x) VALUES ('���Գ���Ա', '��Z01��');
CREATE VIEW x.x AS SELECT * FROM x;
SELECT x, x FROM v0;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW v5 AS SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) WITH (option_real=3.5 /* ok */);
UPDATE x SET x = 'spgist' WHERE x = 1;
INSERT INTO x.x VALUES (2, 'ho there', '\004\003\002\001\000');
SELECT x FROM (SELECT DISTINCT x FROM x) AS x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON x USING spgist(ABS(x)) INCLUDE (x, x);
CREATE INDEX x ON x USING hash(x);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x UNION SELECT x FROM x AS $�p��;
INSERT INTO x.x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT[]);
INSERT INTO x (x, x) VALUES (123, 456, 789);
INSERT INTO x.x (v1) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT * FROM x;
SELECT v1, v2 FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT, v2 INT);
SELECT x FROM x AS $�p��;
SELECT v1 FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (10, 'ho there');
REINDEX table v0;
SELECT v1 FROM x;
INSERT INTO x (x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x TIMESTAMP);
SELECT x FROM x AS $�p��;
CREATE TABLE x (x BYTEA);
INSERT INTO v2 VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT * FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TIMESTAMP);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x;
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 0 WHERE x % 2 = 0;
CREATE TABLE x (x INT[], x CHAR(16));
UPDATE x SET x = 'warning' /* Silence validation checks for strings */;
INSERT INTO v0 VALUES ('コンピュータプログラマー', '人Z01下');
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16), x VARCHAR);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE v0 (x VARCHAR);
CREATE TABLE x (x TIMESTAMPTZ, v2 INT);
CREATE INDEX x ON x.x(x);
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x NAME, x INT, x VARCHAR(16));
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, x) VALUES ('��B01��', '機A01上');
INSERT INTO x (v1, x) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x AS x;
CREATE TABLE x.x (x NAME);
SELECT * FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x VARCHAR(16));
CREATE TABLE v0 (v1 INT, x TEXT[], x VARCHAR(16));
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO x (v1) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
SELECT * FROM x AS $�p��;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x NAME, x INT, x TEXT);
ALTER TABLE x DROP COLUMN x;
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x (v1) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x INT);
SELECT x FROM x AS $�p�� UNION SELECT x FROM x AS $�p��;
SELECT x FROM x AS $�p��;
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
REINDEX ��ٸ����;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM v0;
CREATE TABLE v0 (x BYTEA, x INT, x BYTEA);
INSERT INTO v0 (x, v2) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
UPDATE v0 SET x = 0 WHERE x = 'name_ops';
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x INT[]);
CREATE TABLE x.x (x CHAR(16));
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT * FROM x AS x;
SELECT v1 FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE INDEX x ON x(x);
INSERT INTO x (x, x) VALUES (1, 'first');
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (v1 INT, v2 INT);
CREATE TABLE x (x INT[], x INT PRIMARY KEY) RETURNS VOID IMMUTABLE STRICT LANGUAGE C AS 'MODULE_PATHNAME';
CREATE TABLE x (x NAME, x INT);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE VIEW v2 AS SELECT x, x FROM x AS x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x RENAME TO v2;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE INDEX x ON x USING hash(x);
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (x INT, x TIMESTAMP);
INSERT INTO x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
SELECT x FROM x;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_expr_pred;
SELECT * FROM v0;
SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT * FROM x;
SELECT * FROM x;
SELECT v1 FROM x AS x;
CREATE TABLE x (v1 DECIMAL, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x DECIMAL);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x TIMESTAMP, v2 INT);
SELECT x FROM x;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
SELECT * FROM x;
ALTER TABLE x RENAME TO v2;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE x (x TEXT);
INSERT INTO v2 (x) VALUES ('���Գ���Ա', '��Z01��');
SELECT v1 FROM v2;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO x.x VALUES (1);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM v2;
CREATE TABLE x (x VARCHAR, v2 BYTEA);
CREATE VIEW x AS SELECT * FROM x AS x;
CREATE VIEW x AS SELECT * FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
SELECT x FROM x;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 DECIMAL, v3 TIMESTAMPTZ, x INT[]);
CREATE VIEW v2 AS SELECT * FROM x;
CREATE TABLE x.x (x INT);
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
SELECT v1, x FROM x AS $�p��;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x VALUES ('�s�y�~', '�]���������q', '��B10��');
UPDATE x SET x = 'first, modified once' WHERE x = 3;
SELECT v1 FROM x AS $�p��;
REINDEX SESSION AUTHORIZATION;
INSERT INTO x (x, x) VALUES ('�s�y�~');
CREATE TABLE x (x INT PRIMARY KEY, x INT[]);
CREATE TABLE x.x (v1 CHAR(16), x INT);
INSERT INTO x VALUES ('ʬB10��');
SELECT x FROM x AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
REINDEX table v0;
CREATE VIEW x AS SELECT x, x FROM v0;
INSERT INTO v0 VALUES ('����ͼ��', '��B01��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE v0 (v1 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, v2 INT);
SELECT v1 FROM x AS x;
UPDATE x SET x = 'first, modified once';
UPDATE x SET x = 'first, modified once' WHERE x = '��Z01Ħ';
UPDATE x SET x = 'first, modified once';
CREATE INDEX x ON x(v1);
SELECT x FROM x UNION SELECT x FROM x AS x;
SELECT x FROM x;
INSERT INTO v0 VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x INT[]);
CREATE VIEW v5 AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE v0 (v1 INT, v2 INT, v3 CHAR(16));
SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p�� UNION SELECT v2 FROM x AS $�p��;
SELECT x;
SELECT x FROM x UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x, x FROM x AS $�p��;
INSERT INTO v5 (v3, x) VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
UPDATE v0 SET x = 'dummy_test_idx';
CREATE INDEX x ON x.x(ABS(x));
INSERT INTO x VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE INDEX x ON x USING dummy_index_am(x);
INSERT INTO v0 VALUES ('�q���~', '�F�F���', '�_A01��');
INSERT INTO x.x VALUES ('コンピュータディスプレイ', '機A01上');
INSERT INTO x (x, x) VALUES ('��Z01��', 10);
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM x AS x;
INSERT INTO x VALUES (1);
CREATE TABLE v0 (x INT, x VARCHAR, x INT[], v4 INT);
SELECT x, x FROM x;
CREATE TABLE v0 (x TIMESTAMP, x INT);
INSERT INTO x (x, x) VALUES (1, '������');
CREATE TABLE x (x TEXT[], x VARCHAR);
CREATE TABLE x (x INT[]);
CREATE TABLE v0 (x BYTEA);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', 'duck');
INSERT INTO x (x, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x (x INT);
SELECT * FROM v0;
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
SELECT x FROM x AS x UNION SELECT v2 FROM x AS x;
CREATE TEMPORARY TABLE x (x NAME, x INT, x TEXT);
CREATE VIEW x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
ALTER TABLE x RENAME TO x;
CREATE TABLE x.x (x INT, v2 INT);
CREATE VIEW x AS SELECT x, x FROM x;
INSERT INTO x VALUES (1, 'joe''s place', '\000\001\002\003\004');
UPDATE x SET v1 = 3 WHERE x = 1;
REINDEX track_commit_timestamp;
INSERT INTO x.x VALUES ('����ԥ塼���ץ�����ޡ�');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
INSERT INTO v0 VALUES ('人Z01下');
CREATE TABLE v0 (x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
SELECT * FROM x AS x;
INSERT INTO x VALUES ('コンピュータディスプレイ', '機A01上');
CREATE TABLE x.x (x INT[]);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE INDEX v3 ON x.x(ABS(x));
CREATE VIEW x AS SELECT * FROM x AS $�p��;
INSERT INTO v5 (v3, x) VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x VALUES (1, 3);
SELECT v1 FROM x AS $�p�� UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x VARCHAR, x CHAR(16));
CREATE TABLE v0 (x VARCHAR);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x (x INT);
SELECT x FROM x AS x;
SELECT x, v2 FROM x AS $�p��;
INSERT INTO x VALUES (1, 'first');
SELECT x, x FROM x AS $�p��;
CREATE TABLE x (v1 INT);
CREATE INDEX v3 ON x.x USING btree(x ~ x) PARTITION BY RANGE(x);
INSERT INTO x.x (v3, x) VALUES ('����ͼ��', '��B01��');
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE INDEX x ON x.x(x ~ x);
CREATE TABLE v0 (x INT[]) RETURNS VOID IMMUTABLE STRICT LANGUAGE C;
CREATE TABLE x (v1 DECIMAL, x INT[]);
SELECT * FROM v2 AS $�p��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x VALUES ('����ͼ��');
INSERT INTO x (x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT) RETURNS TEXT LANGUAGE C IMMUTABLE;
SELECT x, x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE VIEW x.x AS SELECT * FROM x;
SELECT x FROM x AS $�p��;
CREATE INDEX x ON v0(x x);
ALTER TABLE x DROP COLUMN x;
SELECT * FROM x AS x;
CREATE TABLE x (x INT, x TEXT);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x.x (x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT);
CREATE TABLE v0 (x TIMESTAMP, x TIMESTAMP, x CHAR);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE x.x (v1 VARCHAR, x DECIMAL, v3 TEXT, x CHAR(16));
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
INSERT INTO x.x (x, v4) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x.x (x VARCHAR);
CREATE TABLE x (x CHAR(16));
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x (x, x) VALUES (10);
UPDATE x SET v1 = 1 WHERE x = 1;
SELECT x FROM v0 UNION SELECT x FROM v0;
UPDATE x SET x = 1 WHERE x = 1;
INSERT INTO x (v3, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
INSERT INTO x.x VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=10 /* ALTER INDEX .. SET */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
SELECT x FROM v0 UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE v0 (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, v2 INT);
ALTER TABLE x RENAME TO v2;
SELECT * FROM x AS x;
INSERT INTO x VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
CREATE VIEW x.x AS SELECT v1, x FROM x;
INSERT INTO x (x, x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
CREATE TABLE x (x INT[], x TIMESTAMP);
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x, x FROM x AS x;
SELECT * FROM x AS $�p��;
CREATE INDEX x ON x USING btree(x ~ x);
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x AS $�p��;
UPDATE v0 SET x = 3;
SELECT x FROM v0 UNION SELECT x FROM x;
SELECT x FROM x AS x;
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x.x (x TEXT, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) INHERITS (x) AS $$   Example of source with void result. $$;
CREATE INDEX x ON v0(x ~ x);
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x VALUES ('�����ѥ��������q');
CREATE TABLE x.x (x INT, v2 INT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO x (x, x) VALUES ('���Գ���Ա', '��Z01��');
REINDEX table v0;
INSERT INTO x.x (v3, x) VALUES ('������ʾ��', '��A01��');
SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
UPDATE v0 SET x = 1 WHERE x % 2 = 0;
SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x (x, v3) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM x AS x;
SELECT v1 FROM x AS $�p��;
CREATE TABLE v0 (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE x DROP COLUMN v1;
CREATE TABLE x.x (x BYTEA);
SELECT x FROM x AS x UNION SELECT x FROM x AS $�p��;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM x;
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE VIEW v5 AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x UNION SELECT x FROM x;
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
SELECT x FROM x AS $�p�� UNION SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES ('コンピュータグラフィックス', '分B10中');
ALTER TABLE x RENAME TO v2;
INSERT INTO x (x) VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x INT, x BYTEA);
ALTER TABLE v0 RENAME TO v2;
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
INSERT INTO x (x, x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
CREATE TABLE v0 (x CHAR(16), v2 BYTEA);
INSERT INTO x (v1, v3) VALUES (123, 456, 789);
CREATE TEMPORARY TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT);
ALTER TABLE x RENAME TO v2;
CREATE TABLE v0 (x NAME, x CHAR(16), x TEXT);
SELECT v1 FROM v0 UNION SELECT x FROM x AS $�p��;
INSERT INTO x.x (x, x) VALUES (123, 456, 789);
SELECT x FROM x;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM x AS x;
CREATE TABLE x.x (x BYTEA);
INSERT INTO v2 (x) VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO v0 VALUES (1);
INSERT INTO v0 (v1) VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT * FROM v0;
CREATE VIEW x.x RETURNS TEXT LANGUAGE C IMMUTABLE AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1;
INSERT INTO x (x, x) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE TABLE x.x (x VARCHAR(16)) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x (x INT[]);
ALTER TABLE v0 DROP COLUMN v1;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x VARCHAR(10));
CREATE VIEW x AS SELECT * FROM v0;
INSERT INTO x (x, x) VALUES ('ho there', '�����ѥ��������q');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
INSERT INTO x VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
SELECT x FROM v0 UNION SELECT x FROM x;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=10 /* ALTER INDEX .. SET */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
REINDEX table v0;
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x BYTEA, v2 INT);
CREATE VIEW v5 AS SELECT * FROM x;
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
REINDEX �t�Ӹ��;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
SELECT x FROM x;
SELECT x FROM x AS $�p�� UNION SELECT x FROM x;
CREATE TEMPORARY TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX x ON x USING spgist(x x) INCLUDE (x, x) RETURNS TEXT LANGUAGE plsample AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
CREATE TABLE x (x BYTEA, x VARCHAR);
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x RENAME TO x;
SELECT x FROM x;
INSERT INTO x.x (x, v2) VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x INT, x TEXT);
SELECT v1 FROM x AS x UNION SELECT v2 FROM x AS $�p��;
CREATE TABLE x (x INT, x TEXT);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE v0 (v1 TEXT);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('ʬB10��');
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL) WITH (option_real=3.5 /* ok */);
CREATE TABLE x (v1 VARCHAR, x TEXT[]);
SELECT * FROM x AS x;
CREATE UNIQUE TABLE x (x INT);
INSERT INTO x (x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE TABLE x (x CHAR(16), x VARCHAR(16));
CREATE TABLE x.x (x DECIMAL);
SELECT x FROM x;
CREATE TABLE x (x INT[]);
INSERT INTO x VALUES ('����ԥ�`������ե��å���', '��B10��');
SELECT * FROM x AS x;
SELECT * FROM x AS x;
INSERT INTO v0 (x, x) VALUES (1, 2, 3), (12, 34, 56), (123, 456, 789);
INSERT INTO x.x VALUES ('������ʾ��', '��A01��');
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (v1 INT, x INT, x INT PRIMARY KEY, v4 INT);
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
INSERT INTO x (x, x) VALUES ('\004\003\002\001\000', 10);
SELECT x FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (123, 456, 789);
INSERT INTO v0 VALUES (1);
CREATE TABLE x (x NAME);
CREATE TABLE x (x INT, x TEXT);
SELECT * FROM x;
SELECT x FROM x AS x;
SELECT * FROM x AS x;
INSERT INTO x (x, x) VALUES (2, 'ho there', '\004\003\002\001\000');
INSERT INTO x (x, x) VALUES (10);
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX table v0;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x NAME, x INT, x TEXT);
INSERT INTO x (x, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
REINDEX 計算機用語;
ALTER TABLE x DROP COLUMN v1;
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤');
SELECT v1 FROM x WHERE x ~ '����[��ش��]';
CREATE VIEW x.x AS SELECT x, v2 FROM x AS x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
ALTER TABLE x DROP COLUMN x;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x UNION SELECT x FROM x AS x;
CREATE INDEX x ON x.x(x);
SELECT * FROM x;
UPDATE x SET x = 'first, modified once';
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO v0 VALUES (1, 2, 3);
INSERT INTO x.x VALUES ('コンピュータプログラマー', '人Z01下');
SELECT x, x FROM x AS x;
INSERT INTO x.x VALUES ('����ԥ�`���ǥ����ץ쥤', '�CA01��');
CREATE TABLE x (x INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
ALTER TABLE x RENAME TO x;
SELECT * FROM v2;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
INSERT INTO v0 VALUES ('�����', '������', 'ơA01��');
CREATE TABLE v0 (x TEXT, x TIMESTAMPTZ);
UPDATE x SET x = 'first, modified once';
CREATE VIEW v2 AS SELECT * FROM x;
ALTER TABLE v0 DROP COLUMN v1;
CREATE TABLE v0 (x CHAR(16)) PARTITION BY RANGE(x);
CREATE VIEW x.x AS SELECT * FROM x;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TABLE x (x INT, x TEXT) WITH (option_real=3.5 /* ok */);
SELECT * FROM v0;
CREATE TABLE x.x (x INT, x INT[], v3 DOUBLE PRECISION, v4 INT);
SELECT * FROM v0;
INSERT INTO x VALUES ('�����ѥ��������q');
UPDATE v0 SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (x, x) VALUES (10);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE TABLE x (v1 VARCHAR, v2 INT);
CREATE TABLE x.x (v1 INT, x INT PRIMARY KEY, x TEXT);
CREATE TABLE v0 (x BYTEA, x BYTEA);
CREATE TABLE x (x INT, x TEXT);
INSERT INTO v0 (x, v2) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT v1 FROM x UNION SELECT v2 FROM (SELECT DISTINCT x FROM x) AS x;
SELECT v1, v2 FROM x AS x;
INSERT INTO x (v3, x) VALUES ('�����', '������', 'ơA01��');
CREATE VIEW x AS SELECT x, x FROM x;
ALTER TABLE v0 DROP COLUMN x;
CREATE VIEW x.x AS SELECT * FROM x;
CREATE TABLE x (x INT[]);
CREATE INDEX x ON x.x(x);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM x AS x;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
CREATE VIEW v2 AS SELECT * FROM x AS $�p��;
SELECT v1 FROM x UNION SELECT x FROM x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x UNION SELECT x FROM x AS x;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX v3 ON x(x);
CREATE TEMPORARY TABLE x (x INT);
CREATE VIEW x RETURNS TEXT IMMUTABLE STRICT LANGUAGE C AS SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES ('����ͼ��', '��B01��');
SELECT x FROM x AS $�p��;
INSERT INTO x (v1, v2) VALUES ('�q���~', '�F�F���', '�_A01��');
CREATE TABLE x (x INT);
SELECT * FROM x AS $�p��;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TABLE x.x (x INT, x INT, x INT);
CREATE TABLE x (x INT, x TEXT);
REINDEX table v0;
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16)) RETURNS TEXT LANGUAGE plsample;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
SELECT * FROM x;
INSERT INTO v2 VALUES ('コンピュータグラフィックス', '分B10中');
INSERT INTO x (v1) VALUES ('���Գ���Ա', '��Z01��');
INSERT INTO v0 (x) VALUES ('�CA01��');
UPDATE x SET x = 'first, modified once' WHERE x = 1;
INSERT INTO x (v1) VALUES (1, 'joe''s place', '\000\001\002\003\004');
SELECT x FROM x AS x;
CREATE TABLE x.x (v1 TIMESTAMPTZ);
CREATE TABLE x (x BYTEA);
INSERT INTO x (x) VALUES ('����', 'ӡ��ϴǹȴ����Ƴ', '��Z01Ħ');
SELECT * FROM x;
UPDATE x SET x = 1 WHERE x = 3;
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE INDEX x ON x.x(x) WHERE x % 2 = 0;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
UPDATE x SET x = 1 WHERE x = 1;
REINDEX table v0;
INSERT INTO x (v1) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE INDEX ON x USING gin(x) WITH (option_enum=NULL);
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
INSERT INTO x.x (v1, x) VALUES ('������ʾ��', '��A01��');
SELECT v1 FROM v0;
CREATE TABLE x (x INT, x TEXT) INHERITS (x);
CREATE VIEW x AS SELECT * FROM x AS $�p��;
ALTER TABLE x RENAME TO v2;
INSERT INTO x VALUES ('����ͼ��', '��B01��');
CREATE TABLE v0 (x BYTEA, x INT[]);
CREATE INDEX x ON x(x ~ x);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('������ʾ��', '��A01��');
CREATE VIEW x AS SELECT x, x FROM x;
UPDATE v0 SET v1 = 'dummy_test_idx';
CREATE UNIQUE TABLE x.x (x TEXT[], x INT, x INT);
INSERT INTO v2 VALUES (123, 1);
CREATE TABLE x.x (x CHAR(16), x BYTEA);
INSERT INTO x (v1, v3) VALUES ('����ԥ�`������ե��å���', '��B10��');
CREATE VIEW x AS SELECT * FROM x AS $�p��;
SELECT x FROM x;
INSERT INTO x VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x (x, x) VALUES ('�s�y�~', '�]���������q', '��B10��');
CREATE TABLE v0 (x VARCHAR(16)) RETURNS trigger LANGUAGE sql;
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE INDEX x ON x(x);
ALTER TABLE x RENAME TO x;
SELECT * FROM x;
INSERT INTO x.x (x, v3) VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (v1) VALUES (1);
SELECT x FROM x UNION SELECT x FROM x AS x;
SELECT x FROM v0 UNION SELECT x FROM x AS x;
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x (x INT);
CREATE VIEW x AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
SELECT x FROM x AS x UNION SELECT x FROM x AS x;
SELECT v1;
UPDATE x SET x = 'first, modified once' WHERE x = 1;
CREATE TABLE v0 (x TIMESTAMPTZ, v2 VARCHAR(16));
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���');
INSERT INTO x.x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
INSERT INTO v0 (x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x VALUES ('コンピュータグラフィックス', '分B10中');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP) PARTITION BY RANGE(x) AS $$ if TD_event == "INSERT"     return TD_NEW elseif TD_event == "UPDATE"     return TD_NEW else     return "OK" end $$;
UPDATE v0 SET x = '��Z01��' WHERE x = 'notice' /* Test with full set of options. */ /* Allow validation checks for strings, just for the index creation */;
REINDEX INDEX CONCURRENTLY reindex_inj.ind_simple;
SELECT x FROM x AS $�p��;
REINDEX -- Insert arrays with 'step' elements each, until an error occurs.   i := 0;
CREATE TABLE x (x VARCHAR(16), x NAME, x VARCHAR);
INSERT INTO v0 VALUES (2, 'ho there', '\004\003\002\001\000');
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x (x, x) VALUES (1, 'first');
INSERT INTO x.x (v1, x) VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE VIEW x.x AS SELECT * FROM x AS $�p��;
CREATE TABLE x (x INT);
CREATE TABLE v0 (v1 INT);
CREATE TABLE x.x (x TEXT[], x NAME, x INT PRIMARY KEY);
CREATE INDEX x ON x.x(ABS(x)) WHERE x % 2 = 0;
REINDEX Ӌ��C���Z;
SELECT * FROM x AS $�p��;
INSERT INTO x (x, x) VALUES (12, 34, 56);
CREATE FUNCTION v3 ( ) RETURN TRIGGER AS $$ BEGIN UPDATE v0 set v1=10 where v1=5 ;END $$ LANGUAGE PLPGSQL;
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS TEXT LANGUAGE C IMMUTABLE;
CREATE TABLE x (x INT);
CREATE VIEW v2 AS SELECT x, x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x TEXT[]);
CREATE TABLE x (x NAME, x INT, x TEXT);
CREATE TABLE x (x INT, x TEXT, x BYTEA);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE INDEX x ON x(x ~ x);
CREATE VIEW x;
INSERT INTO x.x VALUES (1, '��B01��');
ALTER TABLE x DROP COLUMN x;
INSERT INTO x VALUES (1);
CREATE TABLE x (x INT);
INSERT INTO v0 VALUES ('����ԥ塼���ǥ����ץ쥤', '��A01��');
CREATE TABLE x (x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);
ALTER TABLE x DROP COLUMN x;
CREATE TABLE x.x (x VARCHAR(16));
SELECT * FROM x AS $�p��;
INSERT INTO x VALUES ('��B01��', 1);
CREATE TABLE x (x INT);
INSERT INTO x (x, x) VALUES (56, 'duck');
SELECT x FROM x AS $�p�� WHERE x ~* 'コンピュータ[デグ]';
SELECT x FROM v0;
INSERT INTO x (x, x) VALUES (10, 10);
CREATE INDEX ON x USING spgist(x) INCLUDE (x, x);
CREATE TABLE x.x (x INT, x INT, x INT);
INSERT INTO x.x VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
SELECT v1, v2 FROM x;
CREATE TABLE x.x (x INT, x INT, x INT);
REINDEX ���������;
INSERT INTO x VALUES ('���Գ���Ա', '��Z01��');
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x AS x;
CREATE TABLE x (x TEXT[], x INT PRIMARY KEY);
CREATE TABLE x.x (x VARCHAR(16));
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
SELECT v1, v2 FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 VALUES ('������', '����ȴ����Ƴ', '��B10��');
CREATE TABLE x.x (x INT PRIMARY KEY, x TIMESTAMP);
CREATE TABLE x (v1 DOUBLE PRECISION);
ALTER TABLE x RENAME TO x;
SELECT x FROM x UNION SELECT x FROM x AS x;
INSERT INTO x (x, x) VALUES ('�����', '������', 'ơA01��');
INSERT INTO x (x, x) VALUES ('ʬB10��');
UPDATE x SET x = 'first, modified once' WHERE x = 'name_ops';
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM v2;
INSERT INTO x (x, x) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
INSERT INTO x (x, v2) VALUES ('����ͼ��', '��B01��');
CREATE VIEW x.x AS SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
CREATE INDEX x ON x USING hash(x);
UPDATE x SET x = 'first, modified once' WHERE x = 1;
SELECT x FROM x AS x;
CREATE TABLE x (v1 INT);
ALTER TABLE x RENAME TO x;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x VALUES ('������', '����ȴ����Ƴ', '��B10��');
ALTER TABLE x DROP COLUMN v1;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
SELECT x FROM x;
CREATE TABLE x.x (v1 INT, x BYTEA);
CREATE TABLE x (x NAME, x INT, x TEXT);
SELECT x FROM x;
SELECT x FROM x UNION SELECT x FROM x AS x;
SELECT x FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x.x VALUES (1);
SELECT v1 FROM x AS $�p��;
CREATE INDEX x ON x USING dummy_index_am(x) WITH (option_bool=FALSE, fastupdate=off, option_real=10 /* ALTER INDEX .. SET */, fastupdate='two', fastupdate='two', autovacuum_enabled='val');
CREATE TABLE x.x (x TEXT, x INT, x TEXT);
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
INSERT INTO v0 VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TEXT[], x TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP, x INT);
ALTER TABLE x DROP COLUMN v1;
INSERT INTO x (v1, x) VALUES ('コンピュータプログラマー', 1);
CREATE TABLE x (x INT, x TEXT);
REINDEX table v0;
CREATE TABLE x.x (x BYTEA, x TEXT[], x INT PRIMARY KEY);
INSERT INTO v0 (v1) VALUES ('�����', '������', 'ơA01��');
SELECT x FROM x;
INSERT INTO x (x, x) VALUES ('コンピュータディスプレイ', '機A01上');
SELECT * FROM x;
CREATE TABLE x.x (x INT, x INT, x INT) RETURNS TEXT LANGUAGE C;
INSERT INTO v0 VALUES ('����ԥ�`���ץ�����ީ`', '��Z01��');
REINDEX table v0;
CREATE VIEW x AS SELECT * FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v3, x) VALUES ('����ԥ塼���ץ�����ޡ�', '��Z01��');
CREATE VIEW x.x AS SELECT * FROM x AS x;
INSERT INTO v0 (v1, v2) VALUES ('������', '����ȴ����Ƴ', '��B10��');
INSERT INTO x VALUES ('����ԥ塼������ե��å���', 'ʬB10��');
UPDATE x SET x = 3;
REINDEX table v0;
INSERT INTO x (x) VALUES ('������ʾ��', '��A01��');
CREATE TABLE v0 (x TIMESTAMP, x TIMESTAMP, x TEXT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
SELECT x FROM v0 UNION SELECT x FROM x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
ALTER TABLE x RENAME TO x;
CREATE TABLE x (x TEXT, x VARCHAR, x CHAR(16));
CREATE TABLE x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x CHAR(16));
SELECT * FROM x AS x;
CREATE TABLE x (x DOUBLE PRECISION);
CREATE TABLE x (x NAME, x INT, x TEXT);
REINDEX table v0;
CREATE TABLE x (v1 INT, x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, x TEXT[], v4 INT);
SELECT x, x FROM x AS $�p��;
INSERT INTO x.x VALUES ('joe''s place');
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
INSERT INTO x.x (v1) VALUES ('����ԥ�`������ե��å���', '��B10��');
REINDEX table v0;
SELECT x FROM x;
SELECT v1 FROM v0;
REINDEX (costs off) select * from t   where f1 > 'binary_upgrade_set_n' and f1 < 'binary_upgrade_set_p'   order by 1;
CREATE TABLE x.x (x INT GENERATED BY DEFAULT AS IDENTITY NOT NULL);
INSERT INTO x (x, x) VALUES (1, 'joe''s place', '\000\001\002\003\004');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16)) RETURNS TEXT IMMUTABLE STRICT LANGUAGE C;
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
CREATE TEMPORARY TABLE x (x INT);
CREATE VIEW x.x AS SELECT x, v2 FROM x AS $�p��;
CREATE TABLE x (x CHAR(16));
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO x (x, x) VALUES (123, 456, 789);
CREATE TABLE x (x TEXT, x TEXT[]);
SELECT * FROM (SELECT DISTINCT x FROM x) AS x;
INSERT INTO v0 (v1, x) VALUES (1, 2, 3);
CREATE INDEX x ON x USING hash(x);
SELECT x FROM x AS x;
UPDATE x SET v1 = 'name_ops_old' WHERE x = 1;
SELECT * FROM x AS $�p��;
CREATE TRIGGER v5 BEFORE INSERT OF v1 ON v0 FOR EACH ROW EXECUTE PROCEDURE v3 ( );
UPDATE x SET x = 'first, modified once';
REINDEX table v0;
SELECT v1 FROM x AS x;
CREATE TABLE x (x NAME, x INT, x TEXT) RETURNS TEXT LANGUAGE C IMMUTABLE;
CREATE VIEW v2 AS SELECT x, x FROM x AS x;
CREATE TABLE x.x (v1 INT, x INT);
SELECT x, x FROM x;
INSERT INTO x.x (v1) VALUES ('�\���~', '�����ѥ��������q', '��Z01�E');
CREATE TABLE x (x TEXT, x VARCHAR, x VARCHAR(16));
